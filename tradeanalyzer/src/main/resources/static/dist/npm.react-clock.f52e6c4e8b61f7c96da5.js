"use strict";(self.webpackChunktradeanalyzer=self.webpackChunktradeanalyzer||[]).push([[7824],{2351:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(7537),r=t.n(o),a=t(3645),c=t.n(a)()(r());c.push([n.id,".react-clock {\n  display: block;\n  position: relative;\n}\n.react-clock,\n.react-clock *,\n.react-clock *:before,\n.react-clock *:after {\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n}\n.react-clock__face {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  border: 1px solid black;\n  border-radius: 50%;\n}\n.react-clock__hand {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 50%;\n  right: 50%;\n}\n.react-clock__hand__body {\n  position: absolute;\n  background-color: black;\n  transform: translateX(-50%);\n}\n.react-clock__mark {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 50%;\n  right: 50%;\n}\n.react-clock__mark__body {\n  position: absolute;\n  background-color: black;\n  transform: translateX(-50%);\n}\n.react-clock__mark__number {\n  position: absolute;\n  left: -40px;\n  width: 80px;\n  text-align: center;\n}\n.react-clock__second-hand__body {\n  background-color: red;\n}\n","",{version:3,sources:["webpack://./node_modules/react-clock/dist/Clock.css"],names:[],mappings:"AAAA;EACE,cAAc;EACd,kBAAkB;AACpB;AACA;;;;EAIE,2BAA2B;EAC3B,8BAA8B;EAC9B,sBAAsB;AACxB;AACA;EACE,kBAAkB;EAClB,MAAM;EACN,SAAS;EACT,OAAO;EACP,QAAQ;EACR,uBAAuB;EACvB,kBAAkB;AACpB;AACA;EACE,kBAAkB;EAClB,MAAM;EACN,SAAS;EACT,SAAS;EACT,UAAU;AACZ;AACA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,2BAA2B;AAC7B;AACA;EACE,kBAAkB;EAClB,MAAM;EACN,SAAS;EACT,SAAS;EACT,UAAU;AACZ;AACA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,2BAA2B;AAC7B;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,WAAW;EACX,kBAAkB;AACpB;AACA;EACE,qBAAqB;AACvB",sourcesContent:[".react-clock {\n  display: block;\n  position: relative;\n}\n.react-clock,\n.react-clock *,\n.react-clock *:before,\n.react-clock *:after {\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n}\n.react-clock__face {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  border: 1px solid black;\n  border-radius: 50%;\n}\n.react-clock__hand {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 50%;\n  right: 50%;\n}\n.react-clock__hand__body {\n  position: absolute;\n  background-color: black;\n  transform: translateX(-50%);\n}\n.react-clock__mark {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 50%;\n  right: 50%;\n}\n.react-clock__mark__body {\n  position: absolute;\n  background-color: black;\n  transform: translateX(-50%);\n}\n.react-clock__mark__number {\n  position: absolute;\n  left: -40px;\n  width: 80px;\n  text-align: center;\n}\n.react-clock__second-hand__body {\n  background-color: red;\n}\n"],sourceRoot:""}]);const i=c},4859:(n,e,t)=>{t.r(e),t.d(e,{default:()=>H});var o=t(7294),r=t(5697),a=t.n(r),c=t(9624),i=t(342);function l(n){return void 0!==n}function u(n){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},u(n)}var s=function(n,e){return function(t,o,r){var a=t[o];if(l(a)){if("number"!=typeof a)return new Error("Invalid prop `".concat(o,"` of type `").concat(u(a),"` supplied to `").concat(r,"`, expected `number`."));if(a<n||a>e)return new Error("Invalid prop `".concat(o,"` of type `").concat(u(a),"` supplied to `").concat(r,"`, length must be between ").concat(n," and ").concat(e,"."))}return null}},d=s(0,100),A=s(-100,100),p=function(n,e,t){var o=n[e];if(l(o)){if("number"!=typeof o)return new Error("Invalid prop `".concat(e,"` of type `").concat(u(o),"` supplied to `").concat(t,"`, expected `number`."));if(o<0)return new Error("Invalid prop `".concat(e,"` of type `").concat(u(o),"` supplied to `").concat(t,"`, width must be greater or equal to 0."))}return null},b=d,m=p;function k(n){var e=n.angle,t=void 0===e?0:e,r=n.name,a=n.length,c=void 0===a?100:a,i=n.oppositeLength,l=void 0===i?10:i,u=n.width,s=void 0===u?1:u;return o.createElement("div",{className:"react-clock__hand react-clock__".concat(r,"-hand"),style:{transform:"rotate(".concat(t,"deg)")}},o.createElement("div",{className:"react-clock__hand__body react-clock__".concat(r,"-hand__body"),style:{width:"".concat(s,"px"),top:"".concat(50-c/2,"%"),bottom:"".concat(50-l/2,"%")}}))}function f(n){var e=n.angle,t=void 0===e?0:e,r=n.length,a=void 0===r?10:r,c=n.name,i=n.width,l=void 0===i?1:i,u=n.number;return o.createElement("div",{className:"react-clock__mark react-clock__".concat(c,"-mark"),style:{transform:"rotate(".concat(t,"deg)")}},o.createElement("div",{className:"react-clock__mark__body react-clock__".concat(c,"-mark__body"),style:{width:"".concat(l,"px"),top:0,bottom:"".concat(100-a/2,"%")}}),u&&o.createElement("div",{className:"react-clock__mark__number",style:{transform:"rotate(-".concat(t,"deg)"),top:"".concat(a/2,"%")}},u))}function h(n){return o.createElement(f,n)}k.propTypes={angle:a().number,length:d,name:a().string.isRequired,oppositeLength:d,width:a().number},f.propTypes={angle:a().number,length:b,name:a().string.isRequired,number:a().oneOfType([a().number,a().string]),width:m};var g=t(5781),_=function(n,e){return e.toLocaleString(n||(0,g.default)())},v=["formatHour","locale","number"];function y(){return y=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(n[o]=t[o])}return n},y.apply(this,arguments)}function E(n,e){if(null==n)return{};var t,o,r=function(n,e){if(null==n)return{};var t,o,r={},a=Object.keys(n);for(o=0;o<a.length;o++)t=a[o],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(o=0;o<a.length;o++)t=a[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}function B(n){var e=n.formatHour,t=void 0===e?_:e,r=n.locale,a=n.number,c=E(n,v);return o.createElement(f,y({number:a&&t(r,a)},c))}function C(n){var e,t=n.className,r=n.formatHour,a=n.hourHandLength,l=void 0===a?50:a,u=n.hourHandOppositeLength,s=n.hourHandWidth,d=void 0===s?4:s,A=n.hourMarksLength,p=void 0===A?10:A,b=n.hourMarksWidth,m=void 0===b?3:b,f=n.locale,g=n.minuteHandLength,_=void 0===g?70:g,v=n.minuteHandOppositeLength,y=n.minuteHandWidth,E=void 0===y?2:y,C=n.minuteMarksLength,H=void 0===C?6:C,x=n.minuteMarksWidth,w=void 0===x?1:x,O=n.renderHourMarks,S=void 0===O||O,M=n.renderMinuteHand,L=void 0===M||M,T=n.renderMinuteMarks,N=void 0===T||T,W=n.renderNumbers,z=n.renderSecondHand,I=void 0===z||z,Z=n.secondHandLength,j=void 0===Z?90:Z,X=n.secondHandOppositeLength,q=n.secondHandWidth,P=void 0===q?1:q,R=n.size,U=void 0===R?150:R,D=n.value;return o.createElement("time",{className:(0,c.default)("react-clock",t),dateTime:D instanceof Date?D.toISOString():D,style:{width:"".concat(U,"px"),height:"".concat(U,"px")}},o.createElement("div",{className:"react-clock__face"},function(){if(!N)return null;for(var n=[],e=1;e<=60;e+=1)S&&!(e%5)||n.push(o.createElement(h,{key:"minute_".concat(e),angle:6*e,length:H,name:"minute",width:w}));return n}(),function(){if(!S)return null;for(var n=[],e=1;e<=12;e+=1)n.push(o.createElement(B,{key:"hour_".concat(e),angle:30*e,formatHour:r,length:p,locale:f,name:"hour",number:W?e:null,width:m}));return n}()),(e=D?30*(0,i.getHours)(D)+(0,i.getMinutes)(D)/2+(0,i.getSeconds)(D)/600:0,o.createElement(k,{angle:e,length:l,name:"hour",oppositeLength:u,width:d})),function(){if(!L)return null;var n=D?360*(0,i.getHours)(D)+6*(0,i.getMinutes)(D)+(0,i.getSeconds)(D)/10:0;return o.createElement(k,{angle:n,length:_,name:"minute",oppositeLength:v,width:E})}(),function(){if(!I)return null;var n=D?360*(0,i.getMinutes)(D)+6*(0,i.getSeconds)(D):0;return o.createElement(k,{angle:n,length:j,name:"second",oppositeLength:X,width:P})}())}B.propTypes={formatHour:a().func,locale:a().string,number:a().oneOfType([a().number,a().string])},C.propTypes={className:a().oneOfType([a().string,a().arrayOf(a().string)]),formatHour:a().func,hourHandLength:d,hourHandOppositeLength:A,hourHandWidth:p,hourMarksLength:b,hourMarksWidth:m,locale:a().string,minuteHandLength:d,minuteHandOppositeLength:A,minuteHandWidth:p,minuteMarksLength:b,minuteMarksWidth:m,renderHourMarks:a().bool,renderMinuteHand:a().bool,renderMinuteMarks:a().bool,renderNumbers:a().bool,renderSecondHand:a().bool,secondHandLength:d,secondHandOppositeLength:A,secondHandWidth:p,size:a().number,value:a().oneOfType([a().string,a().instanceOf(Date)])};const H=C},6388:(n,e,t)=>{t.r(e),t.d(e,{default:()=>f});var o=t(3379),r=t.n(o),a=t(7795),c=t.n(a),i=t(569),l=t.n(i),u=t(3565),s=t.n(u),d=t(9216),A=t.n(d),p=t(4589),b=t.n(p),m=t(2351),k={};k.styleTagTransform=b(),k.setAttributes=s(),k.insert=l().bind(null,"head"),k.domAPI=c(),k.insertStyleElement=A();r()(m.Z,k);const f=m.Z&&m.Z.locals?m.Z.locals:void 0}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,