(self.webpackChunktradeanalyzer=self.webpackChunktradeanalyzer||[]).push([[2143],{7755:(e,t,n)=>{"use strict";n.d(t,{F:()=>nc,X:()=>ac});var a={};n.r(a),n.d(a,{initPublic:()=>z});var r={};n.r(r),n.d(r,{clearField:()=>Ke,clearItem:()=>ze,closeDeleteModal:()=>$e,init:()=>Ve,inputChange:()=>Ye,modifyItem:()=>Je,openDeleteModal:()=>Ze,orderBy:()=>We,saveItem:()=>He,selectChange:()=>qe,setErrors:()=>Xe});var i={};n.r(i),n.d(i,{init:()=>xn});var s={};n.r(s),n.d(s,{deleteBug:()=>ta,init:()=>Xn,inputChange:()=>aa,list:()=>Zn,listLimit:()=>$n,modify:()=>na,orderBy:()=>la,save:()=>ea,search:()=>Qn,searchChange:()=>ra});var o={};n.r(o),n.d(o,{cancel:()=>Qa,clearPreference:()=>Ja,closeDeleteModal:()=>za,deleteItem:()=>Ua,goBack:()=>Ya,init:()=>Fa,initSubView:()=>Ka,inputChange:()=>xa,list:()=>Ba,listLimit:()=>wa,modifyItem:()=>ja,moveCancel:()=>$a,moveSave:()=>Za,moveSelect:()=>Xa,openDeleteModal:()=>Wa,orderBy:()=>Ha,saveItem:()=>Ga,search:()=>ka,searchChange:()=>Va,setStatus:()=>qa});var c={};n.r(c),n.d(c,{cancel:()=>Ir,clearPreference:()=>Er,closeDeleteModal:()=>gr,deleteItem:()=>ur,goBack:()=>Ar,init:()=>lr,inputChange:()=>pr,list:()=>ir,listLimit:()=>sr,modifyItem:()=>mr,moveCancel:()=>vr,moveSave:()=>Cr,moveSelect:()=>Sr,openDeleteModal:()=>_r,orderBy:()=>dr,saveItem:()=>cr,search:()=>or,searchChange:()=>fr,setStatus:()=>hr});var u={};n.r(u),n.d(u,{cancel:()=>Yr,clearField:()=>xr,clearItem:()=>jr,closeDeleteModal:()=>Jr,deleteItem:()=>Fr,init:()=>Rr,inputChange:()=>wr,list:()=>Lr,listLimit:()=>yr,modifyItem:()=>Br,openDeleteModal:()=>Hr,orderBy:()=>Ur,saveItem:()=>Dr,search:()=>Pr,searchChange:()=>Gr,selectChange:()=>kr,setStatus:()=>Vr});var m={};n.r(m),n.d(m,{cancel:()=>fl,clearRole:()=>cl,closeDeleteModal:()=>pl,deleteRole:()=>nl,init:()=>Zr,inputChange:()=>il,list:()=>$r,listLimit:()=>Qr,modifyItem:()=>al,modifyUserRole:()=>rl,openDeleteModal:()=>ml,orderBy:()=>ol,saveItem:()=>tl,saveRolePermission:()=>ll,search:()=>el,searchChange:()=>sl,setStatus:()=>ul});var p={};n.r(p),n.d(p,{cancel:()=>Fl,clearPermission:()=>Ll,closeDeleteModal:()=>Dl,deleteItem:()=>Il,init:()=>vl,inputChange:()=>bl,list:()=>Cl,listLimit:()=>hl,modifyItem:()=>Nl,modifyRolePermission:()=>Ol,openDeleteModal:()=>Pl,orderBy:()=>Rl,saveItem:()=>gl,saveRolePermission:()=>Tl,search:()=>_l,searchChange:()=>Ml,setStatus:()=>yl});var f={};n.r(f),n.d(f,{cancel:()=>Ql,clearField:()=>Kl,closeDeleteModal:()=>$l,deleteItem:()=>Jl,init:()=>Ul,inputChange:()=>ql,list:()=>jl,listLimit:()=>xl,modifyItem:()=>Yl,openDeleteModal:()=>Zl,orderBy:()=>zl,saveItem:()=>Hl,search:()=>Vl,searchChange:()=>Wl,setStatus:()=>Xl});var d={};n.r(d),n.d(d,{cancel:()=>vi,clearCategory:()=>fi,clearField:()=>di,closeDeleteModal:()=>Si,deleteItem:()=>oi,init:()=>ai,inputChange:()=>ui,list:()=>ri,listLimit:()=>li,modifyItem:()=>ci,openDeleteModal:()=>Ai,orderBy:()=>pi,saveItem:()=>si,search:()=>ii,searchChange:()=>mi,setStatus:()=>Ei});var E={};n.r(E),n.d(E,{clearLanguage:()=>Ri,deleteLanguage:()=>Oi,init:()=>gi,inputChange:()=>Mi,list:()=>Ii,saveLanguage:()=>Ni,status:()=>bi,statusesPage:()=>Ti});var A={};n.r(A),n.d(A,{cancel:()=>qi,clearItem:()=>Vi,closeDeleteModal:()=>Yi,deleteItem:()=>wi,init:()=>Pi,inputChange:()=>Gi,list:()=>Di,modifyItem:()=>ki,openDeleteModal:()=>Ji,orderBy:()=>xi,saveItem:()=>Bi,search:()=>Fi,searchChange:()=>ji,selectChange:()=>Ui,setErrors:()=>Hi});var S={};n.r(S),n.d(S,{cancel:()=>ms,clearField:()=>ss,clearMenu:()=>is,closeDeleteModal:()=>us,deleteItem:()=>ts,init:()=>Xi,inputChange:()=>as,list:()=>Zi,listLimit:()=>$i,modifyItem:()=>ns,openDeleteModal:()=>cs,orderBy:()=>ls,saveItem:()=>es,search:()=>Qi,searchChange:()=>rs,setErrors:()=>os});var v={};n.r(v),n.d(v,{init:()=>Ms});var C={};n.r(C),n.d(C,{cancel:()=>Ws,clearField:()=>Hs,clearItem:()=>Vs,closeDeleteModal:()=>qs,deleteItem:()=>Gs,init:()=>Ps,inputChange:()=>js,list:()=>Ds,listLimit:()=>Fs,modifyItem:()=>Us,openDeleteModal:()=>Ys,orderBy:()=>xs,saveItem:()=>ks,search:()=>Bs,searchChange:()=>ws,setErrors:()=>Js});var h={};n.r(h),n.d(h,{cancel:()=>po,clearField:()=>oo,clearItem:()=>so,closeDeleteModal:()=>mo,deleteItem:()=>ao,init:()=>Zs,inputChange:()=>lo,list:()=>$s,listLimit:()=>Qs,modifyItem:()=>ro,openDeleteModal:()=>uo,orderBy:()=>io,saveItem:()=>no,search:()=>eo,searchChange:()=>to,setErrors:()=>co});var _={};n.r(_),n.d(_,{cancel:()=>Po,clearField:()=>Mo,clearItem:()=>bo,closeDeleteModal:()=>yo,deleteItem:()=>Io,init:()=>So,inputChange:()=>Oo,list:()=>vo,listLimit:()=>Co,modifyItem:()=>No,openDeleteModal:()=>Lo,orderBy:()=>To,saveItem:()=>go,search:()=>ho,searchChange:()=>_o,setErrors:()=>Ro});var g=n(7294),I=n(3935),N=n(4890),O=n(8500);var T=function(e){var t={};return null!=e.responseJson&&null!=e.responseJson.params&&null!=e.responseJson.params.status?(null!=e.responseJson.params.status.info?t.info=e.responseJson.params.status.info:t.info=null,null!=e.responseJson.params.status.warn?t.warn=e.responseJson.params.status.warn:t.warn=null,null!=e.responseJson.params.status.error?t.error=e.responseJson.params.status.error:t.error=null):(t.error=null,t.info=null,t.warn=null),t};const b={getPrefForms:function(e){var t={};if(null!=e.responseJson.params.prefFormFields){var n=e.responseJson.params.prefFormFields;for(var a in n)t[a]=n[a]}return t},getPrefTexts:function(e){var t={};if(null!=e.responseJson.params.prefTexts){var n=e.responseJson.params.prefTexts;for(var a in n)t[a]=n[a]}return t},getPrefLabels:function(e){var t={};if(null!=e.responseJson.params.prefLabels){var n=e.responseJson.params.prefLabels;for(var a in n)t[a]=n[a]}return t},getPrefOptions:function(e){var t={};if(null!=e.responseJson.params.prefOptions){var n=e.responseJson.params.prefOptions;for(var a in n)t[a]=n[a]}return t},getColumns:function(e){var t=[];return null!=e.responseJson.params.columns&&(t=e.responseJson.params.columns),t},updateStatus:function(e,t){if(t.hasOwnProperty("successes")||t.hasOwnProperty("errors")){var n=Object.assign({},e);return t.hasOwnProperty("successes")&&(n.successes=t.successes),t.hasOwnProperty("errors")&&(n.errors=t.errors),n}return e},getItemCount:function(e){var t=0;return null!=e.responseJson.params.itemCount&&(t=e.responseJson.params.itemCount),t},getItems:function(e){var t=[];return null!=e.responseJson.params.items&&(t=e.responseJson.params.items),t},getListLimit:function(e){var t=20;return null!=e.responseJson.params.listLimit&&(t=e.responseJson.params.listLimit),t},getListStart:function(e){var t=0;return null!=e.responseJson.params.listStart&&(t=e.responseJson.params.listStart),t},updateListLimit:function(e,t){if(null!=t.listLimit){var n=Object.assign({},e);return n.listLimit=t.listLimit,n}return e},updateSearch:function(e,t){if(null!=t.searchCriteria){var n=Object.assign({},e);return n.searchCriteria=t.searchCriteria,n.listStart=0,n}return e},updateSearchChange:function(e,t){var n=Object.assign({},e);return n.searchValue=t.params.value,n},updateOrderBy:function(e,t){if(null!=t.orderCriteria){var n=Object.assign({},e);return n.orderCriteria=t.orderCriteria,n}return e},updateInputChange:function(e,t){if(null!=t.params){var n=Object.assign({},e.inputFields);n[t.params.field]=t.params.value;var a=Object.assign({},e);return a.inputFields=n,a}return e},updateClearField:function(e,t){if(null!=t.params){var n=Object.assign({},e.inputFields);n[t.params.field]="";var a=Object.assign({},e);return a.inputFields=n,a}return e},loadInputFields:function(e,t,n,a,r){for(var l=null,i=0,s=t.length;i<s;i++){var o=JSON.parse(t[i].classModel);if((null==r||t[i].group==r)&&null==t[i].subGroup)if(null!=e&&e.hasOwnProperty(o.field)){if(null!=o.defaultClazz&&(n[t[i].name+"-DEFAULT"]=e[o.field].defaultText),null!=o.textClazz)for(var c=0,u=e[o.field].langTexts.length;c<u;c++)n[t[i].name+"-TEXT-"+e[o.field].langTexts[c].lang]=e[o.field].langTexts[c].text;"Set"===o.type?(l=t[i],n[t[i].name]="SET"):"Object"===o.type?n[t[i].name]="OBJECT":n[t[i].name]=e[o.field]}else{"Set"===o.type&&(l=t[i]);var m="";if(null!=t[i].value&&""!=t[i].value)if(t[i].value.includes("{")){var p=JSON.parse(t[i].value);if(null!=p.options)for(var f=0,d=p.options.length;f<d;f++)null!=p.options[f]&&1==p.options[f].defaultInd&&(m=p.options[f].value);else if(null!=p.referPref){var E=a.prefTexts[p.referPref.prefName][p.referPref.prefItem];if(null!=E&&null!=E.value&&""!=E.value){var A=JSON.parse(E.value);if(null!=A.options)for(var S=0;S<A.options.length;S++)null!=A.options[S]&&1==A.options[S].defaultInd&&(m=A.options[S].value)}}}else m=t[i].value;n[t[i].name]=m}}if(null!=l)for(var v=JSON.parse(l.classModel),C=a.prefGlobal.LANGUAGES,h=0,_=t.length;h<_;h++){var g=JSON.parse(t[h].classModel);if(null!=t[h].subGroup&&t[h].subGroup==v.groupName)if(null!=e&&e.hasOwnProperty(v.field))for(var I=e[v.field],N=0,O=I.length;N<O;N++){if(I[N].hasOwnProperty(g.field))n[t[h].name+"-"+I[N].lang]=I[N][g.field]}else for(var T=0,b=C.length;T<b;T++){var M=t[h].name+"-"+C[T].code,R="";if(null!=t[h].value&&""!=t[h].value)if(t[h].value.includes("{")){var L=JSON.parse(t[h].value);if(null!=L.options)for(var y=0,P=L.options.length;y<P;y++)null!=L.options[y]&&1==L.options[y].defaultInd&&(R=L.options[y].value);else if(null!=L.referPref){var D=a.prefTexts[L.referPref.prefName][L.referPref.prefItem];if(null!=D&&null!=D.value&&""!=D.value){var F=JSON.parse(D.value);if(null!=F.options)for(var B=0;B<F.options.length;B++)null!=F.options[B]&&1==F.options[B].defaultInd&&(R=F.options[B].value)}}}else R=t[h].value;n[M]=R}}return n}};function M(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function R(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?M(Object(n),!0).forEach((function(t){L(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):M(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function L(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function y(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function P(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?y(Object(n),!0).forEach((function(t){D(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):y(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function D(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function F(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function B(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?F(Object(n),!0).forEach((function(t){w(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):F(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function w(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var k={evaluationPeriod:"DAY",shortSMAEvaluationDuration:15,longSMAEvaluationDuration:50,lbbEvaluationDuration:20,ubbEvaluationDuration:20,standardDeviations:2};function G(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function U(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?G(Object(n),!0).forEach((function(t){j(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):G(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function j(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const x=(0,N.UY)({appPrefs:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"GLOBAL_INIT":if(null!=t.responseJson&&null!=t.responseJson.params){var n={};if(null!=t.responseJson.params.prefFormFields){var a=t.responseJson.params.prefFormFields;for(var r in a)n[r]=a[r]}var l={};if(null!=t.responseJson.params.prefTexts){var i=t.responseJson.params.prefTexts;for(var s in i)l[s]=i[s]}var o={};if(null!=t.responseJson.params.prefLabels){var c=t.responseJson.params.prefLabels;for(var u in c)o[u]=c[u]}var m={};if(null!=t.responseJson.params.prefOptions){var p=t.responseJson.params.prefOptions;for(var f in p)m[f]=p[f]}var d={},E="en";if(null!=t.responseJson.params.LANGUAGES){d.LANGUAGES=t.responseJson.params.LANGUAGES;for(var A=t.responseJson.params.LANGUAGES,S=0;S<A.length;S++)A[S].defaultLang&&(E=A[S].code)}return Object.assign({},e,{prefForms:Object.assign({},e.prefForms,n),prefTexts:Object.assign({},e.prefTexts,l),prefLabels:Object.assign({},e.prefLabels,o),prefOptions:Object.assign({},e.prefOptions,m),prefGlobal:Object.assign({},e.prefGlobal,d),lang:E})}return e;case"SAVE_PREFTEXTS":return e.prefTexts;case"SAVE_PREFLABELS":return e.prefLabels;case"SAVE_PREFOPTIONS":return e.prefOptions;case"SAVE_LANG":return e.lang;case"SAVE_GLOBAL":return e.prefGlobal;default:return e}},appMenus:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;if("GLOBAL_INIT"===t.type){if(null!=t.responseJson&&null!=t.responseJson.params&&null!=t.responseJson.params.MENUS){var n={},a=t.responseJson.params.MENUS;for(var r in a)n[r]=a[r];return Object.assign({},e,n)}return e}return e},status:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SHOW_STATUS":var n={};return null!=t.info?n.info=t.info:null!=t.warn?n.warn=t.warn:null!=t.error&&(n.error=t.error),Object.assign({},e,n);case"CLEAR_STATUS":var a={info:null,warn:null,error:null};return Object.assign({},e,a);case"SHOW_STATUS_ERROR":var r={};return null!=t.error&&(r.error=t.error,r.info=null,r.warn=null),Object.assign({},e,r);case"SAVE_AUTHENTICATION":var l=T(t);return Object.assign({},e,l);default:return e}},member:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"PROCESS_LOGOUT":return Object.assign({},e,{user:null});case"USERMGNT_SET_VIEW":if(null!=t.params){var n=Object.assign({},e);return n.view=t.params.value,n}return e;case"USERMGNT_SET_FIELD":if(null!=t.params){var a=Object.assign({},e.inputFields);a[t.params.field]=t.params.value;var r=Object.assign({},e);return r.inputFields=a,r}return e;case"MEMBER_PROFILE_INPUT_CHANGE":return b.updateInputChange(e,t);case"LOAD_INIT_MEMBER_PROFILE":if(null!=t.responseJson&&null!=t.responseJson.params){for(var l={},i=b.getPrefForms(t),s=0;s<i.MEMBER_PROFILE_FORM.length;s++)if("FORM1"===i.MEMBER_PROFILE_FORM[s].group){var o=JSON.parse(i.MEMBER_PROFILE_FORM[s].classModel);if(null!=t.responseJson.params.item&&t.responseJson.params.item[o.field])l[i.MEMBER_PROFILE_FORM[s].name]=t.responseJson.params.item[o.field];else{var c="";if(null!=i.MEMBER_PROFILE_FORM[s].value&&""!=i.MEMBER_PROFILE_FORM[s].value){var u=JSON.parse(i.MEMBER_PROFILE_FORM[s].value);if(null!=u.options)for(var m=0;m<u.options.length;m++)null!=u.options[m]&&1==u.options[m].defaultInd&&(c=u.options[m].value);else if(null!=u.referPref){var p=t.appPrefs.prefTexts[u.referPref.prefName][u.referPref.prefItem];if(null!=p&&null!=p.value&&""!=p.value){var f=JSON.parse(p.value);if(null!=f.options)for(var d=0;d<f.options.length;d++)null!=f.options[d]&&1==f.options[d].defaultInd&&(c=f.options[d].value)}}}l[i.MEMBER_PROFILE_FORM[s].name]=c}}return null!=t.responseJson.params.item&&(l.itemId=t.responseJson.params.item.id),Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),prefTexts:Object.assign({},e.prefTexts,b.getPrefTexts(t)),prefLabels:Object.assign({},e.prefLabels,b.getPrefLabels(t)),prefOptions:Object.assign({},e.prefOptions,b.getPrefOptions(t)),columns:b.getColumns(t),itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),orderCriteria:[{orderColumn:"MEMBER_PROFILE_TABLE_NAME",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"MEMBER_PROFILE_TABLE_NAME"}],paginationSegment:1,item:t.responseJson.params.item,inputFields:l,isModifyOpen:!1,pageName:"MEMBER_PROFILE",isDeleteModalOpen:!1,errors:null,warns:null,successes:null,searchValue:""})}return e;case"MEMBER_PROFILE_UPDATE":for(var E=R({},e.item),A=0;A<e.prefForms.MEMBER_PROFILE_FORM.length;A++)if("FORM1"===e.prefForms.MEMBER_PROFILE_FORM[A].group){var S=JSON.parse(e.prefForms.MEMBER_PROFILE_FORM[A].classModel);E[S.field]=e.inputFields[e.prefForms.MEMBER_PROFILE_FORM[A].name]}return Object.assign({},e,{item:E});default:return e}},session:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0,n={};switch(t.type){case"LOAD_SESSION_CHECK":return null!=t.responseJson&&null!=t.responseJson.status&&"SUCCESS"===t.responseJson.status?(n.sessionActive=!0,n.selected=t.responseJson.params.USER):(n.sessionActive=!1,n.selected=null),n.callComplete=!0,Object.assign({},e,n);case"SAVE_SESSION":return null!=t.responseJson&&null!=t.responseJson.params&&null!=t.responseJson.params.USER?Object.assign({},e,{sessionActive:!0,status:"JUST_LOGGEDIN",selected:t.responseJson.params.USER,callComplete:!0}):e;case"CLEAR_SESSION_LOGIN":return Object.assign({},e,{status:""});case"PROCESS_LOGOUT":return Object.assign({},e,{sessionActive:!1,selected:null,status:"",callComplete:!1});case"VIEW_PORT_CHANGE":return t.width<=768?Object.assign({},e,{viewPort:"small"}):Object.assign({},e,{viewPort:"large"});case"MEMBER_PROFILE_ITEM":if(null!=t.responseJson&&null!=t.responseJson.params){for(var a={},r=b.getPrefForms(t),l=0;l<r.MEMBER_PROFILE_FORM.length;l++)if("FORM1"===r.MEMBER_PROFILE_FORM[l].group){var i=JSON.parse(r.MEMBER_PROFILE_FORM[l].classModel);if(null!=t.responseJson.params.item&&t.responseJson.params.item[i.field])a[r.MEMBER_PROFILE_FORM[l].name]=t.responseJson.params.item[i.field];else{var s="";if(null!=r.MEMBER_PROFILE_FORM[l].value&&""!=r.MEMBER_PROFILE_FORM[l].value){var o=JSON.parse(r.MEMBER_PROFILE_FORM[l].value);if(null!=o.options)for(var c=0;c<o.options.length;c++)null!=o.options[c]&&1==o.options[c].defaultInd&&(s=o.options[c].value);else if(null!=o.referPref){var u=t.appPrefs.prefTexts[o.referPref.prefName][o.referPref.prefItem];if(null!=u&&null!=u.value&&""!=u.value){var m=JSON.parse(u.value);if(null!=m.options)for(var p=0;p<m.options.length;p++)null!=m.options[p]&&1==m.options[p].defaultInd&&(s=m.options[p].value)}}}a[r.MEMBER_PROFILE_FORM[l].name]=s}}return null!=t.responseJson.params.item&&(a.itemId=t.responseJson.params.item.id),Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),selected:t.responseJson.params.item,inputFields:a,isModifyOpen:!0})}return e;case"MEMBER_PROFILE_INPUT_CHANGE":return b.updateInputChange(e,t);case"MEMBER_PROFILE_CLEAR_FIELD":return b.updateClearField(e,t);case"MEMBER_PROFILE_LISTLIMIT":return b.updateListLimit(e,t);case"MEMBER_PROFILE_SEARCH":return b.updateSearch(e,t);case"MEMBER_PROFILE_ORDERBY":return b.updateOrderBy(e,t);case"MEMBER_PROFILE_SET_ERRORS":return Object.assign({},e,{errors:t.errors});case"MEMBER_PROFILE_CLOSE_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!1});case"MEMBER_PROFILE_OPEN_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!0,selected:t.item});case"MEMBER_PROFILE_UPDATE":for(var f=P({},e.selected),d=0;d<t.memberState.prefForms.MEMBER_PROFILE_FORM.length;d++)if("FORM1"===t.memberState.prefForms.MEMBER_PROFILE_FORM[d].group){var E=JSON.parse(t.memberState.prefForms.MEMBER_PROFILE_FORM[d].classModel);f[E.field]=t.memberState.inputFields[t.memberState.prefForms.MEMBER_PROFILE_FORM[d].name]}return Object.assign({},e,{selected:f});default:return e}},adminstatus:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"LOAD_INIT_STATUSES":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),prefTexts:Object.assign({},e.prefTexts,b.getPrefTexts(t)),prefLabels:Object.assign({},e.prefLabels,b.getPrefLabels(t)),prefOptions:Object.assign({},e.prefOptions,b.getPrefOptions(t)),columns:b.getColumns(t),itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t)}):e;case"LOAD_LIST_STATUSES":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t)}):e;default:return e}},adminusers:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"ADMIN_USER_INIT":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{prefTexts:Object.assign({},e.prefTexts,b.getPrefTexts(t)),prefLabels:Object.assign({},e.prefLabels,b.getPrefLabels(t)),prefOptions:Object.assign({},e.prefOptions,b.getPrefOptions(t)),columns:b.getColumns(t),itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),orderCriteria:[{orderColumn:"ADMIN_USER_TABLE_USERNAME",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"ADMIN_USER_TABLE_USERNAME"}],paginationSegment:1,selected:null,view:"MAIN",pageName:"ADMIN_USER",isDeleteModalOpen:!1,errors:null,warns:null,successes:null,searchValue:""}):e;case"ADMIN_USER_LIST":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),paginationSegment:t.paginationSegment,selected:null,view:"MAIN",isDeleteModalOpen:!1,errors:null,warns:null,successes:null}):e;case"ADMIN_USER_ITEM":if(null!=t.responseJson&&null!=t.responseJson.params){var n={},a=b.getPrefForms(t);return n=b.loadInputFields(t.responseJson.params.item,a.ADMIN_USER_FORM,n,t.appPrefs,"FORM1"),null!=t.responseJson.params.item&&(n.itemId=t.responseJson.params.item.id),Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),selected:t.responseJson.params.item,inputFields:n,view:"MODIFY"})}return e;case"ADMIN_USER_INPUT_CHANGE":return b.updateInputChange(e,t);case"ADMIN_USER_SELECT_CHANGE":return b.selectChange(e,t);case"ADMIN_USER_CLEAR_FIELD":return b.updateClearField(e,t);case"ADMIN_USER_LISTLIMIT":return b.updateListLimit(e,t);case"ADMIN_USER_SEARCH":return b.updateSearch(e,t);case"ADMIN_USER_SEARCH_CHANGE":return Object.assign({},e,{searchValue:t.value});case"ADMIN_USER_ORDERBY":return b.updateOrderBy(e,t);case"ADMIN_USER_SET_STATUS":b.updateStatus(e,t);case"ADMIN_USER_CLOSE_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!1});case"ADMIN_USER_OPEN_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!0,selected:t.item});case"ADMIN_USER_CANCEL":return Object.assign({},e,{view:"MAIN",selected:null,inputFields:null});default:return e}},adminlanguage:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"ADMIN_LANGUAGE_INIT":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{prefTexts:Object.assign({},e.prefTexts,b.getPrefTexts(t)),prefLabels:Object.assign({},e.prefLabels,b.getPrefLabels(t)),prefOptions:Object.assign({},e.prefOptions,b.getPrefOptions(t)),columns:b.getColumns(t),itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),orderCriteria:[{orderColumn:"ADMIN_LANGUAGE_TABLE_TITLE",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"ADMIN_LANGUAGE_TABLE_TITLE"}],paginationSegment:1,selected:null,view:"MAIN",pageName:"ADMIN_LANGUAGE",isDeleteModalOpen:!1,errors:null,warns:null,successes:null,searchValue:""}):e;case"ADMIN_LANGUAGE_LIST":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),paginationSegment:t.paginationSegment,selected:null,view:"MAIN",isDeleteModalOpen:!1,errors:null,warns:null,successes:null}):e;case"ADMIN_LANGUAGE_ITEM":if(null!=t.responseJson&&null!=t.responseJson.params){for(var n={},a=b.getPrefForms(t),r=0;r<a.ADMIN_LANGUAGE_FORM.length;r++)if("FORM1"===a.ADMIN_LANGUAGE_FORM[r].group){var l=JSON.parse(a.ADMIN_LANGUAGE_FORM[r].classModel);if(null!=t.responseJson.params.item&&t.responseJson.params.item.hasOwnProperty(l.field)){if(null!=l.defaultClazz&&(n[a.ADMIN_LANGUAGE_FORM[r].name+"-DEFAULT"]=t.responseJson.params.item[l.field].defaultText),null!=l.textClazz)for(var i=0;i<t.responseJson.params.item[l.field].langTexts.length;i++)n[a.ADMIN_LANGUAGE_FORM[r].name+"-TEXT-"+t.responseJson.params.item[l.field].langTexts[i].lang]=t.responseJson.params.item[l.field].langTexts[i].text;"Object"==l.type?n[a.ADMIN_LANGUAGE_FORM[r].name]="Object":n[a.ADMIN_LANGUAGE_FORM[r].name]=t.responseJson.params.item[l.field]}else{var s="";if(null!=a.ADMIN_LANGUAGE_FORM[r].value&&""!=a.ADMIN_LANGUAGE_FORM[r].value)if(a.ADMIN_LANGUAGE_FORM[r].value.includes("{")){var o=JSON.parse(a.ADMIN_LANGUAGE_FORM[r].value);if(null!=o.options)for(var c=0;c<o.options.length;c++)null!=o.options[c]&&1==o.options[c].defaultInd&&(s=o.options[c].value);else if(null!=o.referPref){var u=t.appPrefs.prefTexts[o.referPref.prefName][o.referPref.prefItem];if(null!=u&&null!=u.value&&""!=u.value){var m=JSON.parse(u.value);if(null!=m.options)for(var p=0;p<m.options.length;p++)null!=m.options[p]&&1==m.options[p].defaultInd&&(s=m.options[p].value)}}}else s=a.ADMIN_LANGUAGE_FORM[r].value;n[a.ADMIN_LANGUAGE_FORM[r].name]=s}}return null!=t.responseJson.params.item&&(n.itemId=t.responseJson.params.item.id),Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),selected:t.responseJson.params.item,inputFields:n,view:"MODIFY"})}return e;case"ADMIN_LANGUAGE_INPUT_CHANGE":return b.updateInputChange(e,t);case"ADMIN_LANGUAGE_LISTLIMIT":return b.updateListLimit(e,t);case"ADMIN_LANGUAGE_SEARCH":return b.updateSearch(e,t);case"ADMIN_LANGUAGE_SEARCH_CHANGE":return Object.assign({},e,{searchValue:t.value});case"ADMIN_LANGUAGE_ORDERBY":return b.updateOrderBy(e,t);case"ADMIN_LANGUAGE_SET_STATUS":b.updateStatus(e,t);case"ADMIN_LANGUAGE_CLOSE_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!1});case"ADMIN_LANGUAGE_OPEN_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!0,selected:t.item});case"ADMIN_LANGUAGE_CANCEL":return Object.assign({},e,{view:"MAIN",selected:null,inputFields:null});default:return e}},adminroles:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"ADMIN_ROLE_INIT":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{prefTexts:Object.assign({},e.prefTexts,b.getPrefTexts(t)),prefLabels:Object.assign({},e.prefLabels,b.getPrefLabels(t)),prefOptions:Object.assign({},e.prefOptions,b.getPrefOptions(t)),columns:b.getColumns(t),itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),orderCriteria:[{orderColumn:"ADMIN_ROLE_TABLE_NAME",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"ADMIN_ROLE_TABLE_NAME"}],paginationSegment:1,selected:null,view:"MAIN",pageName:"ADMIN_ROLE",isDeleteModalOpen:!1,errors:null,warns:null,successes:null,searchValue:""}):e;case"ADMIN_ROLE_LIST":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),paginationSegment:t.paginationSegment,selected:null,view:"MAIN",isDeleteModalOpen:!1,errors:null,warns:null,successes:null}):e;case"ADMIN_ROLE_ITEM":if(null!=t.responseJson&&null!=t.responseJson.params){for(var n={},a=b.getPrefForms(t),r=0;r<a.ADMIN_ROLE_FORM.length;r++)if("FORM1"===a.ADMIN_ROLE_FORM[r].group){var l=JSON.parse(a.ADMIN_ROLE_FORM[r].classModel);if(null!=t.responseJson.params.item&&t.responseJson.params.item.hasOwnProperty(l.field)){if(null!=l.defaultClazz&&(n[a.ADMIN_ROLE_FORM[r].name+"-DEFAULT"]=t.responseJson.params.item[l.field].defaultText),null!=l.textClazz)for(var i=0;i<t.responseJson.params.item[l.field].langTexts.length;i++)n[a.ADMIN_ROLE_FORM[r].name+"-TEXT-"+t.responseJson.params.item[l.field].langTexts[i].lang]=t.responseJson.params.item[l.field].langTexts[i].text;"Object"==l.type?n[a.ADMIN_ROLE_FORM[r].name]="Object":n[a.ADMIN_ROLE_FORM[r].name]=t.responseJson.params.item[l.field]}else{var s="";if(null!=a.ADMIN_ROLE_FORM[r].value&&""!=a.ADMIN_ROLE_FORM[r].value)if(a.ADMIN_ROLE_FORM[r].value.includes("{")){var o=JSON.parse(a.ADMIN_ROLE_FORM[r].value);if(null!=o.options)for(var c=0;c<o.options.length;c++)null!=o.options[c]&&1==o.options[c].defaultInd&&(s=o.options[c].value);else if(null!=o.referPref){var u=t.appPrefs.prefTexts[o.referPref.prefName][o.referPref.prefItem];if(null!=u&&null!=u.value&&""!=u.value){var m=JSON.parse(u.value);if(null!=m.options)for(var p=0;p<m.options.length;p++)null!=m.options[p]&&1==m.options[p].defaultInd&&(s=m.options[p].value)}}}else s=a.ADMIN_ROLE_FORM[r].value;n[a.ADMIN_ROLE_FORM[r].name]=s}}return null!=t.responseJson.params.item&&(n.itemId=t.responseJson.params.item.id),Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),selected:t.responseJson.params.item,inputFields:n,applicationSelectList:t.responseJson.params.applicationSelectList,view:"MODIFY"})}return e;case"ADMIN_ROLE_INPUT_CHANGE":if(null!=t.params){var f=Object.assign({},e.inputFields);f[t.params.field]=t.params.value;var d=Object.assign({},e);return d.inputFields=f,d}return e;case"ADMIN_ROLE_ADD_PARENT":return null!=t.parent?Object.assign({},e,{parent:t.parent,parentType:t.parentType}):e;case"ADMIN_ROLE_CLEAR_PARENT":return Object.assign({},e,{parent:null,parentType:null});case"ADMIN_ROLE_USER_ROLE":if(null!=t.responseJson&&null!=t.responseJson.params){for(var E={},A=b.getPrefForms(t),S=0;S<A.ADMIN_USER_ROLE_FORM.length;S++)if("USER_ROLE_FORM"===A.ADMIN_USER_ROLE_FORM[S].group){var v=JSON.parse(A.ADMIN_USER_ROLE_FORM[S].classModel);if(null!=t.responseJson.params.item&&t.responseJson.params.item.hasOwnProperty(v.field)){if(null!=v.defaultClazz&&(E[A.ADMIN_USER_ROLE_FORM[S].name+"-DEFAULT"]=t.responseJson.params.item[v.field].defaultText),null!=v.textClazz)for(var C=0;C<t.responseJson.params.item[v.field].langTexts.length;C++)E[A.ADMIN_USER_ROLE_FORM[S].name+"-TEXT-"+t.responseJson.params.item[v.field].langTexts[C].lang]=t.responseJson.params.item[v.field].langTexts[C].text;"Object"==v.type?E[A.ADMIN_USER_ROLE_FORM[S].name]="Object":E[A.ADMIN_USER_ROLE_FORM[S].name]=t.responseJson.params.item[v.field]}else{var h="";if(null!=A.ADMIN_USER_ROLE_FORM[S].value&&""!=A.ADMIN_USER_ROLE_FORM[S].value)if(A.ADMIN_USER_ROLE_FORM[S].value.includes("{")){var _=JSON.parse(A.ADMIN_USER_ROLE_FORM[S].value);if(null!=_.options)for(var g=0;g<_.options.length;g++)null!=_.options[g]&&1==_.options[g].defaultInd&&(h=_.options[g].value);else if(null!=_.referPref){var I=t.appPrefs.prefTexts[_.referPref.prefName][_.referPref.prefItem];if(null!=I&&null!=I.value&&""!=I.value){var N=JSON.parse(I.value);if(null!=N.options)for(var O=0;O<N.options.length;O++)null!=N.options[O]&&1==N.options[O].defaultInd&&(h=N.options[O].value)}}}else h=A.ADMIN_USER_ROLE_FORM[S].value;E[A.ADMIN_USER_ROLE_FORM[S].name]=h}}return null!=t.responseJson.params.item?E.itemId=t.responseJson.params.item.id:t.responseJson.params.item={roleId:t.responseJson.params.roleId},Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),selected:t.responseJson.params.item,inputFields:E,view:"USER_ROLE_MODIFY"})}return e;case"ADMIN_ROLE_LISTLIMIT":return b.updateListLimit(e,t);case"ADMIN_ROLE_SEARCH":return b.updateSearch(e,t);case"ADMIN_ROLE_SEARCH_CHANGE":return Object.assign({},e,{searchValue:t.value});case"ADMIN_ROLE_ORDERBY":return b.updateOrderBy(e,t);case"ADMIN_ROLE_SET_STATUS":b.updateStatus(e,t);case"ADMIN_ROLE_CLOSE_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!1});case"ADMIN_ROLE_OPEN_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!0,selected:t.item});case"ADMIN_ROLE_CANCEL":return Object.assign({},e,{view:"MAIN",selected:null,inputFields:null});default:return e}},adminpermissions:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"ADMIN_PERMISSION_INIT":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{prefTexts:Object.assign({},e.prefTexts,b.getPrefTexts(t)),prefLabels:Object.assign({},e.prefLabels,b.getPrefLabels(t)),prefOptions:Object.assign({},e.prefOptions,b.getPrefOptions(t)),columns:b.getColumns(t),itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),orderCriteria:[{orderColumn:"ADMIN_PERMISSION_TABLE_NAME",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"ADMIN_PERMISSION_TABLE_NAME"}],paginationSegment:1,selected:null,view:"MAIN",pageName:"ADMIN_PERMISSION",isDeleteModalOpen:!1,errors:null,warns:null,successes:null,searchValue:""}):e;case"ADMIN_PERMISSION_LIST":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),paginationSegment:t.paginationSegment,selected:null,view:"MAIN",isDeleteModalOpen:!1,errors:null,warns:null,successes:null}):e;case"ADMIN_PERMISSION_ITEM":if(null!=t.responseJson&&null!=t.responseJson.params){for(var n={},a=b.getPrefForms(t),r=0;r<a.ADMIN_PERMISSION_FORM.length;r++)if("FORM1"===a.ADMIN_PERMISSION_FORM[r].group){var l=JSON.parse(a.ADMIN_PERMISSION_FORM[r].classModel);if(null!=t.responseJson.params.item&&t.responseJson.params.item.hasOwnProperty(l.field)){if(null!=l.defaultClazz&&(n[a.ADMIN_PERMISSION_FORM[r].name+"-DEFAULT"]=t.responseJson.params.item[l.field].defaultText),null!=l.textClazz)for(var i=0;i<t.responseJson.params.item[l.field].langTexts.length;i++)n[a.ADMIN_PERMISSION_FORM[r].name+"-TEXT-"+t.responseJson.params.item[l.field].langTexts[i].lang]=t.responseJson.params.item[l.field].langTexts[i].text;"Object"==l.type?n[a.ADMIN_PERMISSION_FORM[r].name]="Object":n[a.ADMIN_PERMISSION_FORM[r].name]=t.responseJson.params.item[l.field]}else{var s="";if(null!=a.ADMIN_PERMISSION_FORM[r].value&&""!=a.ADMIN_PERMISSION_FORM[r].value)if(a.ADMIN_PERMISSION_FORM[r].value.includes("{")){var o=JSON.parse(a.ADMIN_PERMISSION_FORM[r].value);if(null!=o.options)for(var c=0;c<o.options.length;c++)null!=o.options[c]&&1==o.options[c].defaultInd&&(s=o.options[c].value);else if(null!=o.referPref){var u=t.appPrefs.prefTexts[o.referPref.prefName][o.referPref.prefItem];if(null!=u&&null!=u.value&&""!=u.value){var m=JSON.parse(u.value);if(null!=m.options)for(var p=0;p<m.options.length;p++)null!=m.options[p]&&1==m.options[p].defaultInd&&(s=m.options[p].value)}}}else s=a.ADMIN_PERMISSION_FORM[r].value;n[a.ADMIN_PERMISSION_FORM[r].name]=s}}return null!=t.responseJson.params.item&&(n.itemId=t.responseJson.params.item.id),Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),selected:t.responseJson.params.item,inputFields:n,applicationSelectList:t.responseJson.params.applicationSelectList,view:"MODIFY"})}return e;case"ADMIN_PERMISSION_INPUT_CHANGE":return b.updateInputChange(e,t);case"ADMIN_PERMISSION_ADD_PARENT":return null!=t.parent?Object.assign({},e,{parent:t.parent}):e;case"ADMIN_PERMISSION_CLEAR_PARENT":return Object.assign({},e,{parent:null});case"ADMIN_PERMISSION_ROLE_PERMISSION":if(null!=t.responseJson&&null!=t.responseJson.params){for(var f={},d=b.getPrefForms(t),E=0;E<d.ADMIN_ROLE_PERMISSION_FORM.length;E++)if("ROLE_PERM_FORM"===d.ADMIN_ROLE_PERMISSION_FORM[E].group){var A=JSON.parse(d.ADMIN_ROLE_PERMISSION_FORM[E].classModel);if(null!=t.responseJson.params.item&&t.responseJson.params.item.hasOwnProperty(A.field)){if(null!=A.defaultClazz&&(f[d.ADMIN_ROLE_PERMISSION_FORM[E].name+"-DEFAULT"]=t.responseJson.params.item[A.field].defaultText),null!=A.textClazz)for(var S=0;S<t.responseJson.params.item[A.field].langTexts.length;S++)f[d.ADMIN_ROLE_PERMISSION_FORM[E].name+"-TEXT-"+t.responseJson.params.item[A.field].langTexts[S].lang]=t.responseJson.params.item[A.field].langTexts[S].text;"Object"==A.type?f[d.ADMIN_ROLE_PERMISSION_FORM[E].name]="Object":f[d.ADMIN_ROLE_PERMISSION_FORM[E].name]=t.responseJson.params.item[A.field]}else{var v="";if(null!=d.ADMIN_ROLE_PERMISSION_FORM[E].value&&""!=d.ADMIN_ROLE_PERMISSION_FORM[E].value)if(d.ADMIN_ROLE_PERMISSION_FORM[E].value.includes("{")){var C=JSON.parse(d.ADMIN_ROLE_PERMISSION_FORM[E].value);if(null!=C.options)for(var h=0;h<C.options.length;h++)null!=C.options[h]&&1==C.options[h].defaultInd&&(v=C.options[h].value);else if(null!=C.referPref){var _=t.appPrefs.prefTexts[C.referPref.prefName][C.referPref.prefItem];if(null!=_&&null!=_.value&&""!=_.value){var g=JSON.parse(_.value);if(null!=g.options)for(var I=0;I<g.options.length;I++)null!=g.options[I]&&1==g.options[I].defaultInd&&(v=g.options[I].value)}}}else v=d.ADMIN_ROLE_PERMISSION_FORM[E].value;f[d.ADMIN_ROLE_PERMISSION_FORM[E].name]=v}}return null!=t.responseJson.params.item?f.itemId=t.responseJson.params.item.id:t.responseJson.params.item={permissionId:t.responseJson.params.permissionId},Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),selected:t.responseJson.params.item,inputFields:f,view:"ROLE_PERMISSION_MODIFY"})}return e;case"ADMIN_PERMISSION_LISTLIMIT":return b.updateListLimit(e,t);case"ADMIN_PERMISSION_SEARCH":return b.updateSearch(e,t);case"ADMIN_PERMISSION_SEARCH_CHANGE":return Object.assign({},e,{searchValue:t.value});case"ADMIN_PERMISSION_ORDERBY":return b.updateOrderBy(e,t);case"ADMIN_PERMISSION_SET_STATUS":b.updateStatus(e,t);case"ADMIN_PERMISSION_CLOSE_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!1});case"ADMIN_PERMISSION_OPEN_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!0,selected:t.item});case"ADMIN_PERMISSION_CANCEL":return Object.assign({},e,{view:"MAIN",selected:null,inputFields:null});default:return e}},adminmenus:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"ADMIN_MENU_INIT":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{prefTexts:Object.assign({},e.prefTexts,b.getPrefTexts(t)),prefLabels:Object.assign({},e.prefLabels,b.getPrefLabels(t)),prefOptions:Object.assign({},e.prefOptions,b.getPrefOptions(t)),columns:b.getColumns(t),itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),orderCriteria:[{orderColumn:"ADMIN_MENU_TABLE_CATEGORY",orderDir:"ASC"},{orderColumn:"ADMIN_MENU_TABLE_NAME",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"ADMIN_MENU_TABLE_NAME"}],paginationSegment:1,selected:null,view:"MAIN",pageName:"ADMIN_MENUS",isDeleteModalOpen:!1,errors:null,warns:null,successes:null,searchValue:""}):e;case"ADMIN_MENU_LIST":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),paginationSegment:t.paginationSegment,selected:null,view:"MAIN",isDeleteModalOpen:!1,errors:null,warns:null,successes:null}):e;case"ADMIN_MENU_ITEM":if(null!=t.responseJson&&null!=t.responseJson.params){var n={},a=b.getPrefForms(t);return n=b.loadInputFields(t.responseJson.params.item,a.ADMIN_MENU_FORM,n,t.appPrefs,"FORM1"),null!=t.responseJson.params.item&&(n.itemId=t.responseJson.params.item.id),Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),selected:t.responseJson.params.item,inputFields:n,view:"MODIFY"})}return e;case"ADMIN_MENU_INPUT_CHANGE":return b.updateInputChange(e,t);case"ADMIN_MENU_CLEAR_FIELD":return b.updateClearField(e,t);case"ADMIN_MENU_LISTLIMIT":return b.updateListLimit(e,t);case"ADMIN_MENU_SEARCH":return b.updateSearch(e,t);case"ADMIN_MENU_SEARCH_CHANGE":return Object.assign({},e,{searchValue:t.value});case"ADMIN_MENU_ORDERBY":return b.updateOrderBy(e,t);case"ADMIN_MENU_SET_STATUS":b.updateStatus(e,t);case"ADMIN_MENU_CLOSE_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!1});case"ADMIN_MENU_OPEN_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!0,selected:t.item});case"ADMIN_MENU_CANCEL":return Object.assign({},e,{view:"MAIN",selected:null,inputFields:null});default:return e}},adminpreferences:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"ADMIN_PREFERENCE_INIT":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{prefTexts:Object.assign({},e.prefTexts,b.getPrefTexts(t)),prefLabels:Object.assign({},e.prefLabels,b.getPrefLabels(t)),prefOptions:Object.assign({},e.prefOptions,b.getPrefOptions(t)),columns:b.getColumns(t),itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),orderCriteria:[{orderColumn:"ADMIN_PREFERENCE_TABLE_CATEGORY",orderDir:"ASC"},{orderColumn:"ADMIN_PREFERENCE_TABLE_TITLE",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"ADMIN_PREFERENCE_TABLE_TITLE"}],paginationSegment:1,selected:null,view:"MAIN",pageName:"ADMIN_PERFERENCE",isDeleteModalOpen:!1,errors:null,warns:null,successes:null,searchValue:"",viewType:null}):e;case"ADMIN_PREFERENCE_LIST":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),paginationSegment:t.paginationSegment,selected:null,view:"MAIN",isDeleteModalOpen:!1,errors:null,warns:null,successes:null}):e;case"ADMIN_PREFERENCE_ITEM":if(null!=t.responseJson&&null!=t.responseJson.params){var n={},a=b.getPrefForms(t);return n=b.loadInputFields(t.responseJson.params.item,a.ADMIN_PREFERENCE_FORM,n,t.appPrefs,"FORM1"),null!=t.responseJson.params.item&&(n.itemId=t.responseJson.params.item.id),Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),selected:t.responseJson.params.item,inputFields:n,view:"MODIFY"})}return e;case"ADMIN_PREFERENCE_INPUT_CHANGE":return b.updateInputChange(e,t);case"ADMIN_PREFERENCE_LISTLIMIT":return b.updateListLimit(e,t);case"ADMIN_PREFERENCE_SEARCH":return b.updateSearch(e,t);case"ADMIN_PREFERENCE_SEARCH_CHANGE":return Object.assign({},e,{searchValue:t.value});case"ADMIN_PREFERENCE_ORDERBY":return b.updateOrderBy(e,t);case"ADMIN_PREFERENCE_GOBACK":return null!=t?Object.assign({},e,{selected:null,isSubViewOpen:!1}):e;case"ADMIN_PREFERENCE_SUBVIEW_INIT":return null!=t.item?Object.assign({},e,{selected:t.item,pageName:"ADMIN_PERFERENCE",view:"SUBVIEW"}):e;case"ADMIN_PREFERENCE_SET_STATUS":b.updateStatus(e,t);case"ADMIN_PREFERENCE_CLOSE_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!1});case"ADMIN_PREFERENCE_OPEN_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!0,selected:t.item});case"ADMIN_PREFERENCE_CANCEL":return Object.assign({},e,{view:"MAIN",selected:null,inputFields:null});default:return e}},adminpreferenceSub:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"ADMIN_PREFERENCE_SUB_INIT":if(null!=t.responseJson&&null!=t.responseJson.params){var n=[],a=[];return"FORM"===t.subType?(n=[{orderColumn:"ADMIN_FORMFIELD_TABLE_TITLE",orderDir:"ASC"}],a=[{searchValue:"",searchColumn:"ADMIN_FORMFIELD_TABLE_TITLE"}]):"LABEL"===t.subType?(n=[{orderColumn:"ADMIN_LABEL_TABLE_TITLE",orderDir:"ASC"}],a=[{searchValue:"",searchColumn:"ADMIN_LABEL_TABLE_TITLE"}]):"TEXT"===t.subType?(n=[{orderColumn:"ADMIN_TEXT_TABLE_TITLE",orderDir:"ASC"}],a=[{searchValue:"",searchColumn:"ADMIN_TEXT_TABLE_TITLE"}]):(n=[{orderColumn:"ADMIN_OPTION_TABLE_TITLE",orderDir:"ASC"}],a=[{searchValue:"",searchColumn:"ADMIN_OPTION_TABLE_TITLE"}]),Object.assign({},e,{prefTexts:Object.assign({},e.prefTexts,b.getPrefTexts(t)),prefLabels:Object.assign({},e.prefLabels,b.getPrefLabels(t)),prefOptions:Object.assign({},e.prefOptions,b.getPrefOptions(t)),columns:b.getColumns(t),itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),orderCriteria:n,searchCriteria:a,paginationSegment:1,selected:null,parent:t.parent,view:"MAIN",subType:t.subType,pageName:"ADMIN_PREFERENCE_SUB",isDeleteModalOpen:!1,errors:null,warns:null,successes:null,searchValue:""})}return e;case"ADMIN_PREFERENCE_SUB_LIST":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),paginationSegment:t.paginationSegment,selected:null,view:"MAIN",isDeleteModalOpen:!1,errors:null,warns:null,successes:null}):e;case"ADMIN_PREFERENCE_SUB_ITEM":if(null!=t.responseJson&&null!=t.responseJson.params){var r={},l=b.getPrefForms(t);return"FORM"===t.subType?r=b.loadInputFields(t.responseJson.params.item,l.ADMIN_FORMFIELD_FORM,r,t.appPrefs,"FORM1"):"LABEL"===t.subType?r=b.loadInputFields(t.responseJson.params.item,l.ADMIN_LABEL_FORM,r,t.appPrefs,"FORM1"):"TEXT"===t.subType?r=b.loadInputFields(t.responseJson.params.item,l.ADMIN_TEXT_FORM,r,t.appPrefs,"FORM1"):"OPTION"===t.subType&&(r=b.loadInputFields(t.responseJson.params.item,l.ADMIN_OPTION_FORM,r,t.appPrefs,"FORM1")),null!=t.responseJson.params.item&&(r.itemId=t.responseJson.params.item.id),Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),selected:t.responseJson.params.item,inputFields:r,view:"MODIFY"})}return e;case"ADMIN_PREFERENCE_SUB_INPUT_CHANGE":return b.updateInputChange(e,t);case"ADMIN_PREFERENCE_SUB_LISTLIMIT":return b.updateListLimit(e,t);case"ADMIN_PREFERENCE_SUB_SEARCH":return b.updateSearch(e,t);case"ADMIN_PREFERENCE_SUB_SEARCH_CHANGE":return Object.assign({},e,{searchValue:t.value});case"ADMIN_PREFERENCE_SUB_ORDERBY":return b.updateOrderBy(e,t);case"ADMIN_PREFERENCE_SUB_GOBACK":return null!=t?Object.assign({},e,{items:null,parent:null,selected:null,inputfields:null,subType:null,view:"MAIN",moveSelectedItem:null}):e;case"ADMIN_PREFERENCE_SUB_MOVE_SELECT":return null!=t.item?Object.assign({},e,{moveSelectedItem:t.item}):e;case"ADMIN_PREFERENCE_SUBVIEW_MOVE_CANCEL":return Object.assign({},e,{moveSelectedItem:null});case"ADMIN_PREFERENCE_SUB_ADD_PARENT":return null!=t.parent?Object.assign({},e,{parent:t.parent}):e;case"ADMIN_PREFERENCE_SUB_CLEAR_PARENT":return Object.assign({},e,{parent:null});case"ADMIN_PREFERENCE_SUB_SET_ERRORS":return Object.assign({},e,{errors:t.errors});case"ADMIN_PREFERENCE_SUB_CLOSE_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!1});case"ADMIN_PREFERENCE_SUB_OPEN_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!0,selected:t.item});case"ADMIN_PREFERENCE_SUB_CANCEL":return Object.assign({},e,{view:"MAIN",selected:null,inputFields:null});default:return e}},admincategory:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"ADMIN_CATEGORY_INIT":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{prefTexts:Object.assign({},e.prefTexts,b.getPrefTexts(t)),prefLabels:Object.assign({},e.prefLabels,b.getPrefLabels(t)),prefOptions:Object.assign({},e.prefOptions,b.getPrefOptions(t)),columns:b.getColumns(t),itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),orderCriteria:[{orderColumn:"ADMIN_CATEGORY_TABLE_NAME",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"ADMIN_CATEGORY_TABLE_NAME"}],paginationSegment:1,selected:null,view:"MAIN",pageName:"ADMIN_CATEGORY",isDeleteModalOpen:!1,errors:null,warns:null,successes:null,searchValue:""}):e;case"ADMIN_CATEGORY_LIST":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),paginationSegment:t.paginationSegment,selected:null,view:"MAIN",isDeleteModalOpen:!1,errors:null,warns:null,successes:null}):e;case"ADMIN_CATEGORY_ITEM":if(null!=t.responseJson&&null!=t.responseJson.params){for(var n={},a=b.getPrefForms(t),r=0;r<a.ADMIN_CATEGORY_FORM.length;r++)if("FORM1"===a.ADMIN_CATEGORY_FORM[r].group){var l=JSON.parse(a.ADMIN_CATEGORY_FORM[r].classModel);if(null!=t.responseJson.params.item&&t.responseJson.params.item.hasOwnProperty(l.field))n[a.ADMIN_CATEGORY_FORM[r].name]=t.responseJson.params.item[l.field];else{var i="";if(null!=a.ADMIN_CATEGORY_FORM[r].value&&""!=a.ADMIN_CATEGORY_FORM[r].value)for(var s=JSON.parse(a.ADMIN_CATEGORY_FORM[r].value),o=0;o<s.options.length;o++)null!=s.options[o]&&1==s.options[o].defaultInd&&(i=s.options[o].value);n[a.ADMIN_CATEGORY_FORM[r].name]=i}}return null!=t.responseJson.params.item&&(n.itemId=t.responseJson.params.item.id),Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),selected:t.responseJson.params.item,inputFields:n,view:"MODIFY"})}return e;case"ADMIN_CATEGORY_INPUT_CHANGE":return b.updateInputChange(e,t);case"ADMIN_CATEGORY_CLEAR_FIELD":return b.updateClearField(e,t);case"ADMIN_CATEGORY_LISTLIMIT":return b.updateListLimit(e,t);case"ADMIN_CATEGORY_SEARCH":return b.updateSearch(e,t);case"ADMIN_CATEGORY_SEARCH_CHANGE":return Object.assign({},e,{searchValue:t.value});case"ADMIN_CATEGORY_ORDERBY":return b.updateOrderBy(e,t);case"ADMIN_CATEGORY_SET_STATUS":b.updateStatus(e,t);case"ADMIN_CATEGORY_CLOSE_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!1});case"ADMIN_CATEGORY_OPEN_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!0,selected:t.item});case"ADMIN_CATEGORY_CANCEL":return Object.assign({},e,{view:"MAIN",selected:null,inputFields:null});default:return e}},adminservice:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"ADMIN_SERVICE_INIT":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),prefTexts:Object.assign({},e.prefTexts,b.getPrefTexts(t)),prefLabels:Object.assign({},e.prefLabels,b.getPrefLabels(t)),prefOptions:Object.assign({},e.prefOptions,b.getPrefOptions(t)),itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),orderCriteria:[{orderColumn:"ADMIN_SERVICES_TABLE_SERVICE_NAME",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"ADMIN_SERVICES_TABLE_SERVICE_NAME"}],paginationSegment:1,selected:null,view:"MAIN",pageName:"ADMIN_SERVICES",isDeleteModalOpen:!1,errors:null,warns:null,successes:null,searchValue:""}):e;case"ADMIN_SERVICE_LIST":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),paginationSegment:t.paginationSegment,selected:null,view:"MAIN",isDeleteModalOpen:!1,errors:null,warns:null,successes:null}):e;case"ADMIN_SERVICE_ITEM":if(null!=t.responseJson&&null!=t.responseJson.params){var n={},a=b.getPrefForms(t);return n=b.loadInputFields(t.responseJson.params.item,a.ADMIN_SERVICES_FORM,n,t.appPrefs,"FORM1"),null!=t.responseJson.params.item&&(n.itemId=t.responseJson.params.item.id),Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),selected:t.responseJson.params.item,inputFields:n,view:"MODIFY"})}return e;case"ADMIN_SERVICE_INPUT_CHANGE":return b.updateInputChange(e,t);case"ADMIN_SERVICE_SELECT_CHANGE":return b.selectChange(e,t);case"ADMIN_SERVICE_CLEAR_FIELD":return b.updateClearField(e,t);case"ADMIN_SERVICE_LISTLIMIT":return b.updateListLimit(e,t);case"ADMIN_SERVICE_SEARCH":return b.updateSearch(e,t);case"ADMIN_SERVICE_SEARCH_CHANGE":return Object.assign({},e,{searchValue:t.value});case"ADMIN_SERVICE_ORDERBY":return b.updateOrderBy(e,t);case"ADMIN_SERVICE_SET_STATUS":b.updateStatus(e,t);case"ADMIN_SERVICE_CLOSE_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!1});case"ADMIN_SERVICE_OPEN_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!0,selected:t.item});case"ADMIN_SERVICE_CANCEL":return Object.assign({},e,{view:"MAIN",selected:null,inputFields:null});default:return e}},admindashboard:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;return"LOAD_INIT_DASHBOARD"===t.type&&null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{prefTexts:Object.assign({},e.prefTexts,b.getPrefTexts(t)),prefLabels:Object.assign({},e.prefLabels,b.getPrefLabels(t)),prefOptions:Object.assign({},e.prefOptions,b.getPrefOptions(t)),columns:b.getColumns(t),itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),orderCriteria:[{orderColumn:"DASHBOARD_TABLE_NAME",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"DASHBOARD_TABLE_NAME"}],paginationSegment:1,selected:null,isModifyOpen:!1,isTeamLinkOpen:!1,pageName:"DASHBOARD",isDeleteModalOpen:!1,errors:null,warns:null,successes:null,searchValue:""}):e},adminbugs:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"LOAD_INIT_ISSUES":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{prefTexts:Object.assign({},e.prefTexts,b.getPrefTexts(t)),prefLabels:Object.assign({},e.prefLabels,b.getPrefLabels(t)),prefOptions:Object.assign({},e.prefOptions,b.getPrefOptions(t)),columns:b.getColumns(t),itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),orderCriteria:[{orderColumn:"ADMIN_ISSUE_TABLE_TITLE",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"ADMIN_ISSUE_TABLE_TITLE"}],selected:null,isModifyOpen:!1}):e;case"LOAD_LIST_ISSUES":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),selected:null,isModifyOpen:!1}):e;case"ISSUES_MODIFY":if(null!=t.responseJson&&null!=t.responseJson.params){for(var n={},a=b.getPrefForms(t),r=0;r<a.ADMIN_ISSUE_PAGE.length;r++)if("FORM1"===a.ADMIN_ISSUE_PAGE[r]){var l=JSON.parse(a.ADMIN_ISSUE_PAGE[r].classModel);if(null!=t.responseJson.params.item&&t.responseJson.params.item.hasOwnProperty(l.field)){if(null!=l.defaultClazz&&(n[a.ADMIN_ISSUE_PAGE[r].name+"-DEFAULT"]=t.responseJson.params.item[l.field].defaultText),null!=l.textClazz)for(var i=0;i<t.responseJson.params.item[l.field].langTexts.length;i++)n[a.ADMIN_ISSUE_PAGE[r].name+"-TEXT-"+t.responseJson.params.item[l.field].langTexts[i].lang]=t.responseJson.params.item[l.field].langTexts[i].text;"Object"==l.type?n[a.ADMIN_ISSUE_PAGE[r].name]="Object":n[a.ADMIN_ISSUE_PAGE[r].name]=t.responseJson.params.item[l.field]}else{var s="";if(null!=a.ADMIN_ISSUE_PAGE[r].value&&""!=a.ADMIN_ISSUE_PAGE[r].value)if(a.ADMIN_ISSUE_PAGE[r].value.includes("{")){var o=JSON.parse(a.ADMIN_ISSUE_PAGE[r].value);if(null!=o.options)for(var c=0;c<o.options.length;c++)null!=o.options[c]&&1==o.options[c].defaultInd&&(s=o.options[c].value)}else s=a.ADMIN_ISSUE_PAGE[r].value;n[a.ADMIN_ISSUE_PAGE[r].name]=s}}return null!=t.responseJson.params.item&&(n.itemId=t.responseJson.params.item.id),Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),selected:t.responseJson.params.item,inputFields:n,isModifyOpen:!0})}return e;case"ISSUES_INPUT_CHANGE":return b.updateInputChange(e,t);case"ISSUES_LISTLIMIT":return b.updateListLimit(e,t);case"ISSUES_SEARCH":return b.updateSearch(e,t);case"ISSUES_SEARCH_CHANGE":return Object.assign({},e,{searchValue:t.value});case"ISSUES_ORDERBY":return b.updateOrderBy(e,t);default:return e}},systemclientdomain:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SYSTEM_CLIENT_DOMAIN_INIT":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),prefTexts:Object.assign({},e.prefTexts,b.getPrefTexts(t)),prefLabels:Object.assign({},e.prefLabels,b.getPrefLabels(t)),prefOptions:Object.assign({},e.prefOptions,b.getPrefOptions(t)),columns:b.getColumns(t),itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),orderCriteria:[{orderColumn:"SYSTEM_CLIENT_DOMAIN_TABLE_NAME",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"SYSTEM_CLIENT_DOMAIN_TABLE_NAME"}],paginationSegment:1,selected:null,inputFields:null,view:"MAIN",pageName:"SYSTEM_CLIENT_DOMAIN",isDeleteModalOpen:!1,errors:null,warns:null,successes:null,searchValue:""}):e;case"SYSTEM_CLIENT_DOMAIN_LIST":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),paginationSegment:t.paginationSegment,selected:null,inputFields:null,view:"MAIN",isDeleteModalOpen:!1,errors:null,warns:null,successes:null}):e;case"SYSTEM_CLIENT_DOMAIN_ITEM":if(null!=t.responseJson&&null!=t.responseJson.params){for(var n={},a=b.getPrefForms(t),r=0;r<a.SYSTEM_CLIENT_DOMAIN_FORM.length;r++)if("FORM1"===a.SYSTEM_CLIENT_DOMAIN_FORM[r].group){var l=JSON.parse(a.SYSTEM_CLIENT_DOMAIN_FORM[r].classModel);if(null!=t.responseJson.params.item&&null!=t.responseJson.params.item[l.field])n[a.SYSTEM_CLIENT_DOMAIN_FORM[r].name]=t.responseJson.params.item[l.field];else{var i="";if(null!=a.SYSTEM_CLIENT_DOMAIN_FORM[r].value&&""!=a.SYSTEM_CLIENT_DOMAIN_FORM[r].value){var s=JSON.parse(a.SYSTEM_CLIENT_DOMAIN_FORM[r].value);if(null!=s.options)for(var o=0;o<s.options.length;o++)null!=s.options[o]&&1==s.options[o].defaultInd&&(i=s.options[o].value);else if(null!=s.referPref){var c=t.appPrefs.prefTexts[s.referPref.prefName][s.referPref.prefItem];if(null!=c&&null!=c.value&&""!=c.value){var u=JSON.parse(c.value);if(null!=u.options)for(var m=0;m<u.options.length;m++)null!=u.options[m]&&1==u.options[m].defaultInd&&(i=u.options[m].value)}}}n[a.SYSTEM_CLIENT_DOMAIN_FORM[r].name]=i}}return null!=t.responseJson.params.item&&(n.itemId=t.responseJson.params.item.id),Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),selected:t.responseJson.params.item,inputFields:n,view:"MODIFY"})}return e;case"SYSTEM_CLIENT_DOMAIN_INPUT_CHANGE":return b.updateInputChange(e,t);case"SYSTEM_CLIENT_DOMAIN_CLEAR_FIELD":return b.updateClearField(e,t);case"SYSTEM_CLIENT_DOMAIN_LISTLIMIT":return b.updateListLimit(e,t);case"SYSTEM_CLIENT_DOMAIN_SEARCH":return b.updateSearch(e,t);case"SYSTEM_CLIENT_DOMAIN_SEARCH_CHANGE":return b.updateSearchChange(e,t);case"SYSTEM_CLIENT_DOMAIN_ORDERBY":return b.updateOrderBy(e,t);case"SYSTEM_CLIENT_DOMAIN_SET_ERRORS":return Object.assign({},e,{errors:t.errors});case"SYSTEM_CLIENT_DOMAIN_CLOSE_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!1});case"SYSTEM_CLIENT_DOMAIN_OPEN_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!0,selected:t.item});case"SYSTEM_CLIENT_DOMAIN_CANCEL":return Object.assign({},e,{view:"MAIN",selected:null,inputFields:null});default:return e}},systemapplication:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SYSTEM_APPLICATION_INIT":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{prefTexts:Object.assign({},e.prefTexts,b.getPrefTexts(t)),prefLabels:Object.assign({},e.prefLabels,b.getPrefLabels(t)),prefOptions:Object.assign({},e.prefOptions,b.getPrefOptions(t)),columns:b.getColumns(t),itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),orderCriteria:[{orderColumn:"SYSTEM_APPLICATION_TABLE_NAME",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"SYSTEM_APPLICATION_TABLE_NAME"}],paginationSegment:1,selected:null,inputFields:null,view:"MAIN",pageName:"SYSTEM_APPLICATION",isDeleteModalOpen:!1,errors:null,warns:null,successes:null,searchValue:""}):e;case"SYSTEM_APPLICATION_LIST":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),paginationSegment:t.paginationSegment,selected:null,inputFields:null,view:"MAIN",isDeleteModalOpen:!1,errors:null,warns:null,successes:null}):e;case"SYSTEM_APPLICATION_ITEM":if(null!=t.responseJson&&null!=t.responseJson.params){for(var n={},a=b.getPrefForms(t),r=0;r<a.SYSTEM_APPLICATION_FORM.length;r++){var l=JSON.parse(a.SYSTEM_APPLICATION_FORM[r].classModel);if(null!=t.responseJson.params.item&&t.responseJson.params.item.hasOwnProperty(l.field)){if(null!=l.defaultClazz&&(n[a.SYSTEM_APPLICATION_FORM[r].name+"-DEFAULT"]=t.responseJson.params.item[l.field].defaultText),null!=l.textClazz)for(var i=0;i<t.responseJson.params.item[l.field].langTexts.length;i++)n[a.SYSTEM_APPLICATION_FORM[r].name+"-TEXT-"+t.responseJson.params.item[l.field].langTexts[i].lang]=t.responseJson.params.item[l.field].langTexts[i].text;"Object"==l.type?n[a.SYSTEM_APPLICATION_FORM[r].name]="Object":n[a.SYSTEM_APPLICATION_FORM[r].name]=t.responseJson.params.item[l.field]}else{var s="";if(null!=a.SYSTEM_APPLICATION_FORM[r].value&&""!=a.SYSTEM_APPLICATION_FORM[r].value)if(a.SYSTEM_APPLICATION_FORM[r].value.includes("{")){var o=JSON.parse(a.SYSTEM_APPLICATION_FORM[r].value);if(null!=o.options)for(var c=0;c<o.options.length;c++)null!=o.options[c]&&1==o.options[c].defaultInd&&(s=o.options[c].value);else if(null!=o.referPref){var u=t.appPrefs.prefTexts[o.referPref.prefName][o.referPref.prefItem];if(null!=u&&null!=u.value&&""!=u.value){var m=JSON.parse(u.value);if(null!=m.options)for(var p=0;p<m.options.length;p++)null!=m.options[p]&&1==m.options[p].defaultInd&&(s=m.options[p].value)}}}else s=a.ADMIN_LANGUAGE_FORM[r].value;n[a.SYSTEM_APPLICATION_FORM[r].name]=s}}return null!=t.responseJson.params.item&&(n.itemId=t.responseJson.params.item.id),Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),selectedUser:t.responseJson.params.item,inputFields:n,view:"MODIFY"})}return e;case"SYSTEM_APPLICATION_INPUT_CHANGE":return b.updateInputChange(e,t);case"SYSTEM_APPLICATION_LISTLIMIT":return b.updateListLimit(e,t);case"SYSTEM_APPLICATION_SEARCH":return b.updateSearch(e,t);case"SYSTEM_APPLICATION_SEARCH_CHANGE":return Object.assign({},e,{searchValue:t.value});case"SYSTEM_APPLICATION_ORDERBY":return b.updateOrderBy(e,t);case"SYSTEM_APPLICATION_SET_STATUS":b.updateStatus(e,t);case"SYSTEM_APPLICATION_CLOSE_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!1});case"SYSTEM_APPLICATION_OPEN_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!0,selected:t.item});case"SYSTEM_APPLICATION_CANCEL":return Object.assign({},e,{view:"MAIN",selected:null,inputFields:null});default:return e}},systemservice:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SYSTEM_SERVICES_INIT":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),prefTexts:Object.assign({},e.prefTexts,b.getPrefTexts(t)),prefLabels:Object.assign({},e.prefLabels,b.getPrefLabels(t)),prefOptions:Object.assign({},e.prefOptions,b.getPrefOptions(t)),columns:b.getColumns(t),itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),orderCriteria:[{orderColumn:"SYSTEM_SERVICES_TABLE_NAME",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"SYSTEM_SERVICES_TABLE_NAME"}],paginationSegment:1,selected:null,inputFields:null,view:"MAIN",pageName:"SYSTEM_SERVICES",isDeleteModalOpen:!1,errors:null,warns:null,successes:null,searchValue:""}):e;case"SYSTEM_SERVICES_LIST":return null!=t.responseJson&&null!=t.responseJson.params?Object.assign({},e,{itemCount:b.getItemCount(t),items:b.getItems(t),listLimit:b.getListLimit(t),listStart:b.getListStart(t),paginationSegment:t.paginationSegment,selected:null,inputFields:null,view:"MAIN",isDeleteModalOpen:!1,errors:null,warns:null,successes:null}):e;case"SYSTEM_SERVICES_ITEM":if(null!=t.responseJson&&null!=t.responseJson.params){for(var n={},a=b.getPrefForms(t),r=0;r<a.SYSTEM_SERVICES_FORM.length;r++)if("FORM1"===a.SYSTEM_SERVICES_FORM[r].group){var l=JSON.parse(a.SYSTEM_SERVICES_FORM[r].classModel);if(null!=t.responseJson.params.item&&null!=t.responseJson.params.item[l.field])n[a.SYSTEM_SERVICES_FORM[r].name]=t.responseJson.params.item[l.field];else{var i="";if(null!=a.SYSTEM_SERVICES_FORM[r].value&&""!=a.SYSTEM_SERVICES_FORM[r].value){var s=JSON.parse(a.SYSTEM_SERVICES_FORM[r].value);if(null!=s.options)for(var o=0;o<s.options.length;o++)null!=s.options[o]&&1==s.options[o].defaultInd&&(i=s.options[o].value);else if(null!=s.referPref){var c=t.appPrefs.prefTexts[s.referPref.prefName][s.referPref.prefItem];if(null!=c&&null!=c.value&&""!=c.value){var u=JSON.parse(c.value);if(null!=u.options)for(var m=0;m<u.options.length;m++)null!=u.options[m]&&1==u.options[m].defaultInd&&(i=u.options[m].value)}}}n[a.SYSTEM_SERVICES_FORM[r].name]=i}}return null!=t.responseJson.params.item&&(n.itemId=t.responseJson.params.item.id),Object.assign({},e,{prefForms:Object.assign({},e.prefForms,b.getPrefForms(t)),selected:t.responseJson.params.item,inputFields:n,view:"MODIFY"})}return e;case"SYSTEM_SERVICES_INPUT_CHANGE":return b.updateInputChange(e,t);case"SYSTEM_SERVICES_CLEAR_FIELD":return b.updateClearField(e,t);case"SYSTEM_SERVICES_LISTLIMIT":return b.updateListLimit(e,t);case"SYSTEM_SERVICES_SEARCH":return b.updateSearch(e,t);case"SYSTEM_SERVICES_SEARCH_CHANGE":return b.updateSearchChange(e,t);case"SYSTEM_SERVICES_ORDERBY":return b.updateOrderBy(e,t);case"SYSTEM_SERVICES_SET_ERRORS":return Object.assign({},e,{errors:t.errors});case"SYSTEM_SERVICES_CLOSE_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!1});case"SYSTEM_SERVICES_OPEN_DELETE_MODAL":return Object.assign({},e,{isDeleteModalOpen:!0,selected:t.item});case"SYSTEM_SERVICES_CANCEL":return Object.assign({},e,{view:"MAIN",selected:null,inputFields:null});default:return e}},stocks:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"STOCK_INPUT_CHANGE":if(null!=t.params){var n=Object.assign({},e);return n.test_field=t.params.value,n}return e;case"STOCK_GET_LIST":if(null!=t.responseJson&&null!=t.responseJson.params){var a=[];null!=t.responseJson.params.STOCKBARS&&(a=t.responseJson.params.STOCKBARS);var r=[];null!=t.responseJson.params.TRADES&&(r=t.responseJson.params.TRADES);var l={};return null!=t.responseJson.params.TRADE&&(l=t.responseJson.params.TRADE),Object.assign({},e,{stockBars:a,trades:r,trade:l})}return e;default:return e}},crypto:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"CRYPTO_INPUT_CHANGE":if(null!=t.params){var n=Object.assign({},e);return n.test_field=t.params.value,n}return e;case"CRYPTO_GET_LIST":if(null!=t.responseJson&&null!=t.responseJson.params){var a=[];null!=t.responseJson.params.CRYPTOBARS&&(a=t.responseJson.params.CRYPTOBARS);var r={};return null!=t.responseJson.params.XBBO&&(r=t.responseJson.params.XBBO),Object.assign({},e,{cryptoBars:a,xbbo:r})}return e;default:return e}},dashboard:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"DASHBOARD_INPUT_CHANGE":if(null!=t.params){var n=Object.assign({},e);return n.test_field=t.params.value,n}return e;case"DASHBOARD_GET":if(null!=t.responseJson&&null!=t.responseJson.params){var a={};null!=t.responseJson.params.CLOCK&&(a=t.responseJson.params.CLOCK);var r={};return null!=t.responseJson.params.ACCOUNT&&(r=t.responseJson.params.ACCOUNT),Object.assign({},e,{clock:a,account:r})}return e;default:return e}},trade:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0,n=1641016800,a={evaluationPeriod:"DAY",orderType:"Market",currencyType:"Dollars",profitLimitType:"Profit Limit Price",trailingStopType:"Trailing Stop Price",rawBuyCondition:"",rawSellCondition:"",startTime:n,endTime:n,status:"Not Running"};switch(t.type){case"TRADE_INPUT_CHANGE":if(null!=t.params){var r={};return null==e.item?r[t.params.field]=t.params.value:(r=Object.assign({},e.item))[t.params.field]=t.params.value,Object.assign({},e,{item:r})}return e;case"TRADE_LIST":if(null!=t.responseJson&&null!=t.responseJson.params){var l={};null!=t.responseJson.params.TRADECOUNT&&(l=t.responseJson.params.TRADECOUNT);var i={};return null!=t.responseJson.params.items&&(i=t.responseJson.params.items),Object.assign({},e,{itemCount:l,items:i,item:{},view:""})}return e;case"TRADE_CUSTOM_TECHNICAL_INDICATORS":return U(U({},e),{},{item:U(U({},e.item),{},{customTechnicalIndicators:t.payload})});case"TRADE_CANCEL_ITEM":var s=Object.assign({},e);return s.view="",s.item={},s;case"TRADE_MODIFY_ITEM":if(null!=t||null!=t){var o=a;return null!=t.action&&null!=t.action&&(o=Object.assign(a,t.action)),Object.assign({},e,{item:o,view:"MODIFY"})}return e;case"TRADE_HISTORICAL_ANALYSIS_VIEW":if(null!=t){var c=a;return null!=t.action&&(c=Object.assign(a,t.action)),Object.assign({},e,{item:c,view:"HISTORICAL_ANALYSIS"})}return e;case"TRADE_DETAIL_VIEW":if(null!=t){var u={};return null!=t.action&&(u=t.action),Object.assign({},e,{item:u,view:"TRADE_DETAIL"})}return e;case"INITIALIZE_TRADE_DETAILS":if(null!=t.action.params){var m={};return null==e.item?m.details=t.actions.params.DETAILS:(m=Object.assign({},e.item)).details=t.action.params.DETAILS,Object.assign({},e,{item:m})}return e;case"INITIALIZE_TRADE_SYMBOL_DATA":if(null!=t.action.params){var p={};return null==e.item?p.symbolData=t.actions.params.SYMBOL_DATA:(p=Object.assign({},e.item)).symbolData=t.action.params.SYMBOL_DATA,Object.assign({},e,{item:p})}return e;case"TRADE_GRAPH_VIEW":if(null!=t){var f={};return null!=t.action&&(f=t.action),Object.assign({},e,{item:f,view:"TRADE_GRAPH"})}return e;case"TRADE_SELECT_VIEW":if(null!=t){var d={};return null!=t.action&&(d=t.action),Object.assign({},e,{field:d,view:"SELECT"})}return e;case"TRADE_SELECT_INPUT_CHANGE":if(null!=t.params){var E={};return null==e.item?E[t.params.field]=t.params.value:(E=Object.assign({},e.item))[t.params.field]=t.params.value,Object.assign({},e,{item:E,view:"MODIFY"})}return e;case"TRADE_GRAPH_ITEM":if(null!=t.responseJson&&null!=t.responseJson.params){var A=[];return null!=t.responseJson.params.SYMBOLS&&(A=t.responseJson.params.SYMBOLS),Object.assign({},e,{symbols:A})}case"TRADE_SAVE_ITEM":if(null!=t.responseJson&&null!=t.responseJson.params){var S={};return null!=t.responseJson.params.item&&(S=t.responseJson.params.item),Object.assign({},e,{item:S,view:""})}return e;default:return e}},orders:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;if("AMOUNT_INPUT_CHANGE"===t.type){if(null!=t.params){var n=Object.assign({},e);return n.test_field=t.params.value,n}return e}return e},database:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};switch(t.type){case"DATABASE_BACKLOAD":default:return e;case"DATABASE_INPUT_CHANGE":if(null!=t.params){var n={};return null==e.item?n[t.params.field]=t.params.value:(n=Object.assign({},e.item))[t.params.field]=t.params.value,Object.assign({},e,{item:n})}return e;case"DATABASE_LIST":if(null!=t.responseJson&&null!=t.responseJson.params){var a={};null!=t.responseJson.params.itemCount&&(a=t.responseJson.params.itemCount);var r=[];return null!=t.responseJson.params.items&&(r=t.responseJson.params.items),Object.assign({},e,{itemCount:a,items:r,item:{},view:""})}return e;case"DATABASE_DETAIL_VIEW":if(null!=t){var l={};return null!=t.action&&(l=t.action),Object.assign({},e,{item:l,view:"DATABASE_DETAIL"})}return e;case"DATABASE_GRAPH_VIEW":if(null!=t){var i={};return null!=t.action&&(i=t.action),Object.assign({},e,{item:i,view:"DATABASE_GRAPH"})}return e;case"DATABASE_MODIFY_VIEW":if(null!=t){var s=Object.assign({},k);return null!=t.action&&null!=t.action&&(s=Object.assign(s,t.action)),Object.assign({},e,{item:s,view:"DATABASE_MODIFY"})}return e;case"DATABASE_INITIALIZE_TECHNICAL_INDICATORS":return B(B({},e),{},{item:B(B({},e.item),{},{technicalIndicators:t.payload})});case"DATABASE_INITIALIZE_SNAPSHOTS":return B(B({},e),{},{item:B(B({},e.item),{},{snapshots:t.payload})});case"DATABASE_INITIALIZE_SNAPSHOT_DETAILS":return B(B({},e),{},{item:B(B({},e.item),{},{effectiveDetails:t.payload})});case"DATABASE_SNAPSHOT_GRAPH":return B(B({},e),{},{item:B(B({},t.payload.snapshot),{},{effectiveDetails:t.payload.details}),view:"DATABASE_GRAPH"});case"DATABASE_CHANGE_ITEM":return B(B({},e),{},{item:t.payload});case"DATABASE_SNAPSHOT_VIEW":return B(B({},e),{},{view:"DATABASE_SNAPSHOT"});case"MODIFY_SNAPSHOT":var o=t.payload.id,c=t.payload.startTime,u=t.payload.endTime;return B(B({},e),{},{item:B(B({},e.item),{},{snapshots:e.item.snapshots.map((function(e){return e.id===o?B(B({},e),{},{firstCheck:c,lastCheck:u}):e}))})});case"DATABASE_CANCEL_ITEM":var m=Object.assign({},e,{item:{},view:""});return m}},historicalAnalysis:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"HISTORICAL_ANALYSIS_INPUT_CHANGE":if(null!=t.params){var n={};return null==e.item?n[t.params.field]=t.params.value:(n=Object.assign({},e.item))[t.params.field]=t.params.value,Object.assign({},e,{item:n})}return e;case"HISTORICAL_ANALYSIS_LIST":if(null!=t.responseJson&&null!=t.responseJson.params){var a={};return null!=t.responseJson.params.items&&(a=t.responseJson.params.items),Object.assign({},e,{items:a,item:{},view:""})}return e;case"HISTORICAL_ANALYSIS_HISTORICAL_DETAIL_VIEW":if(null!=t){var r={};return null!=t.action&&(r=t.action),Object.assign({},e,{item:r,view:"HISTORICAL_DETAIL"})}return e;case"HISTORICAL_ANALYSIS_SAVE_ITEM":if(null!=t.responseJson&&null!=t.responseJson.params){var l={};return null!=t.responseJson.params.item&&(l=t.responseJson.params.item),Object.assign({},e,{item:l,view:""})}return e;case"HISTORICAL_ANALYSIS_CANCEL_ITEM":var i=Object.assign({},e);return i.view="",i.item={},i;case"HISTORICAL_ANALYSIS_GRAPH_VIEW":if(null!=t){var s={};return null!=t.action&&(s=t.action),Object.assign({},e,{item:s,view:"HISTORICAL_ANALYSIS_GRAPH"})}return e;case"HISTORICAL_ANALYSIS_DETAIL_VIEW":if(null!=t){var o={};return null!=t.action&&(o=t.action),Object.assign({},e,{item:o,view:"HISTORICAL_ANALYSIS_DETAIL"})}return e;case"INITIALIZE_HISTORICAL_ANALYSIS_DETAILS":if(null!=t.action.params){var c={};if(null===e.item||void 0===e.item)c.details=t.actions.params.DETAILS;else{var u=t.action.params.DETAILS;c=Object.assign({},e.item,{details:u})}return Object.assign({},e,{item:c})}return e;case"INITIALIZE_HISTORICAL_ANALYSIS_SYMBOL_DATA":if(null!=t.action.params){var m={};return null===e.item||void 0===e.item?m.symbolData=t.actions.params.SYMBOL_DATA:(m=Object.assign({},e.item)).symbolData=t.action.params.SYMBOL_DATA,Object.assign({},e,{item:m})}return e;default:return e}}});var V=n(3894),H=n(5391);var J=n(8216),Y=n(9711);const q=function(e){var t=nc();if(""!=t&&null!=e){var n=!1;("TRACE"!==t||"TRACE"!==e.level&&"DEBUG"!==e.level&&"INFO"!==e.level&&"WARN"!==e.level&&"ERROR"!==e.level)&&("DEBUG"!==t||"ERROR"!==e.level&&"DEBUG"!==e.level&&"INFO"!==e.level&&"WARN"!==e.level)&&("INFO"!==t||"ERROR"!==e.level&&"WARN"!==e.level&&"INFO"!==e.level)&&("WARN"!==t||"ERROR"!==e.level&&"WARN"!==e.level)?"ERROR"===t&&"ERROR"===e.level&&(n=!0):n=!0,n&&(null!=e.msgObj?console.log(e.loc+"__"+e.level+"__"+e.msg+"  "+e.msgObj):console.log(e.loc+"__"+e.level+"__"+e.msg))}};function W(e){var t={};if(null!=e){null==e.requestParams?q({level:"TRACE",loc:"api::callService",msg:"Params are missing"}):t=e.requestParams,t.metrics={};var n=new Date;return t.metrics.browserStart=n.getTime(),t.metrics.browserZone=(new Date).toString().match(/([A-Z]+[+-][0-9]+.*)/)[1],q({level:"TRACE",loc:"api::callService",msg:"Request "+JSON.stringify(e)}),new Promise((function(t,n){var a=""+e.URI,r=new Headers;r.set("Content-type","application/json"),null!=e.auth&&r.set("Authorization","Basic "+e.auth),fetch(a,{method:"POST",credentials:"same-origin",headers:r,body:JSON.stringify({params:e.requestParams})}).then((function(n){if(n.status>=400){var a={status:"ERROR",protocalError:n.status};q({level:"TRACE",loc:"api::callService",msg:"Received "+e.requestParams.service+" "+e.requestParams.action,msgObj:n.status}),t(a)}else q({level:"TRACE",loc:"api::callService",msg:"Response "+e.requestParams.service+" "+e.requestParams.action+" success with JSON response"}),t(n.json())})).catch((function(e){q({level:"TRACE",loc:"api::callService",msg:"Request failed",msgObj:e}),t()}))}))}q({level:"TRACE",loc:"api::callService",msg:"Params are missing"})}function z(){return function(e){var t={action:"INIT",service:"PUBLIC_SVC"};t.prefFormKeys=new Array("LOGIN_FORM","REGISTRATION_FORM","FORGOTPASSWORD_FORM","PASSWORD_CHANGE_FORM"),t.prefTextKeys=new Array("GLOBAL_PAGE","LOGIN_FORM","REGISTRATION_FORM","FORGOTPASSWORD_FORM","PASSWORD_CHANGE_FORM"),t.prefLabelKeys=new Array("LOGIN_FORM","REGISTRATION_FORM","FORGOTPASSWORD_FORM"),t.prefOptionKeys=new Array("REGISTRATION_FORM","GLOBAL_PAGE"),t.prefGlobal=new Array("LANGUAGES"),t.menuNames=new Array("PUBLIC_MENU_RIGHT");var n={};return n.requestParams=t,n.URI="/api/public/callService",W(n).then((function(t){q({level:"TRACE",loc:"PUBLIC_SVC::INIT::initPublic",msg:"Request "+JSON.stringify(t)}),e({type:"GLOBAL_INIT",responseJson:t})})).catch((function(e){throw e}))}}const K=function(e,t){null!=e&&null!=e.protocalError&&401==e.protocalError?t({type:"PROCESS_LOGOUT"}):t({type:"SHOW_STATUS_ERROR",error:[{code:"CONNECTIVITYFAILED",message:"Connectivity issue"}]})};function X(e,t){return function(n){n({type:"VIEW_PORT_CHANGE",width:e,height:t})}}var Z=n(5697),$=n.n(Z),Q=n(2778),ee=n(3663),te=n(682),ne=n(8325),ae=n(1244),re="undefined"==typeof arguments?void 0:arguments,le=function(e,t,n){q({level:"TRACE",loc:"validateFieldTXT::params",msg:JSON.stringify(t)+" "+n});var a=!0,r=e.state.inputFields[n],l=!1,i={};if(t.required&&(null==r||null!=r&&""==r?(a=!1,l=!0,i[t.name]="Required"):i[t.name]=""),0==l&&null!=t.validation&&""!=t.validation){var s=JSON.parse(t.validation);if(null!=s.regex&&""!=s.regex){var o=new RegExp(s.regex);if(null!=o&&null!=o.exec(r)){if(i[t.name]="",null!=s.onFail)for(var c=s.onFail,u=0;u<c.length;u++)i[c[u].link]="SUCCESS"}else{if(null!=s.onFail)for(var m=s.onFail,p=0;p<m.length;p++){var f=new RegExp(m[p].regex);null!=f&&null==f.exec(r)?i[m[p].link]="ERROR":i[m[p].link]="SUCCESS"}a=!1,i[t.name]=s.errorMsg}}else if(null!=s.operator&&"equals"===s.operator)if(null!=s.matchField){var d="";null!=e.prefix&&(d=e.prefix.concat("-").concat(s.matchField));var E=e.state.inputFields[d];null!=E&&r===E?i[t.name]="":(a=!1,i[t.name]=s.errorMsg)}}return{isValid:a,errorMap:i}},ie=function(e,t){var n=!0,a={};if(t.required){var r=e[t.name];null==r||null!=r&&""==r?(n=!1,a[t.name]="Required"):a[t.name]=""}return{isValid:n,errorMap:a}},se=function(e,t,n,a){var r=!0,l={};if(t.required)for(var i=0;i<n.length;i++){var s=e[t.name.concat("-").concat(n[i].code)];if(null!=n[i].title.langTexts)for(var o=0;o<n[i].title.langTexts.length;o++)n[i].title.langTexts[o].lang==a&&n[i].code==a&&(null==s||null!=s&&""==s?(r=!1,l[t.name]="Required"):l[t.name]="")}return{isValid:r,errorMap:l}},oe=function(e,t){var n=!0,a={};if(t.required){var r=e[t.name];null==r||null!=r&&""==r?(n=!1,a[t.name]="Required"):a[t.name]=""}return{isValid:n,errorMap:a}},ce=function(e){var t=e.field,n=e.value,a=e.fieldName,r=e.langRequired,l=e.transactionType,i=!0,s=!1,o={},c=null;if(null!=t.optionalParams&&""!=t.optionalParams){var u=t.optionalParams;null!=(u=JSON.parse(u))&&null!=u.validateOn&&(c=u.validateOn)}if(null!=c&&!c.includes(l))return{isValid:i,errorMap:o};if(t.required&&(null==r||null!=r&&1==r)&&(null==n||null!=n&&""==n?(i=!1,s=!0,null!=a?o[a]="Required":o[t.name]="Required"):null!=a?o[a]="":o[t.name]=""),0==s&&null!=t.validation&&""!=t.validation){var m=JSON.parse(t.validation);if(null!=m.regex&&""!=m.regex){var p=new RegExp(m.regex);if(null!=p&&null!=p.exec(n)){if(o[t.name]="",null!=m.onFail)for(var f=m.onFail,d=0;d<f.length;d++)o[f[d].link]="SUCCESS"}else{if(null!=m.onFail)for(var E=m.onFail,A=0;A<E.length;A++){var S=new RegExp(E[A].regex);null!=S&&null==S.exec(n)?o[E[A].link]="ERROR":o[E[A].link]="SUCCESS"}i=!1,null!=a?o[a]=m.errorMsg:o[t.name]=m.errorMsg}}else if(null!=m.operator&&"equals"===m.operator)if(null!=m.matchField){var v="";null!=params.prefix&&(v=params.prefix.concat("-").concat(m.matchField));var C=params.state[v];null!=C&&n===C?null!=a?o[a]="":o[t.name]="":(i=!1,null!=a?o[a]=m.errorMsg:o[t.name]=m.errorMsg)}}return{isValid:i,errorMap:o}},ue=function(e){var t=e.field,n=e.value,a=e.fieldName,r=e.langRequired,l=!0,i=!1,s={};if(t.required&&(null==r||null!=r&&1==r)&&(null==n||null!=n&&""==n?(l=!1,i=!0,null!=a?s[a]="Required":s[t.name]="Required"):null!=a?s[a]="":s[t.name]=""),0==i&&null!=t.validation&&""!=t.validation){var o=JSON.parse(t.validation);if(null!=o.regex&&""!=o.regex){var c=new RegExp(o.regex);if(null!=c&&null!=c.exec(n)){if(s[t.name]="",null!=o.onFail)for(var u=o.onFail,m=0;m<u.length;m++)s[u[m].link]="SUCCESS"}else{if(null!=o.onFail)for(var p=o.onFail,f=0;f<p.length;f++){var d=new RegExp(p[f].regex);null!=d&&null==d.exec(n)?s[p[f].link]="ERROR":s[p[f].link]="SUCCESS"}l=!1,null!=a?s[a]=o.errorMsg:s[t.name]=o.errorMsg}}else if(null!=o.operator&&"equals"===o.operator)if(null!=o.matchField){var E="";null!=params.prefix&&(E=params.prefix.concat("-").concat(o.matchField));var A=params.state[E];null!=A&&n===A?null!=a?s[a]="":s[t.name]="":(l=!1,null!=a?s[a]=o.errorMsg:s[t.name]=o.errorMsg)}}return{isValid:l,errorMap:s}},me=function(e){var t=e.field,n=e.value,a=!0,r={};return t.required&&(null==n||null!=n&&""==n?(a=!1,r[t.name]="Required"):r[t.name]=""),{isValid:a,errorMap:r}},pe=function(e){var t=e.field,n=e.value,a=e.fieldName,r=e.langRequired,l=!0,i={};return t.required&&(null==r||null!=r&&1==r)&&(null==n||null!=n&&(""==n||0==n)?(l=!1,null!=a?i[a]="Required":i[t.name]="Required"):null!=a?i[a]="":i[t.name]=""),{isValid:l,errorMap:i}},fe=function(e){var t=e.field,n=e.inputFields,a=e.languages,r=!0,l={};if(t.required)for(var i=0;i<a.length;i++)if(a[i].defaultLang){var s=n[t.name.concat("-TEXT-").concat(a[i].code)];null==s||null!=s&&""==s?(r=!1,l[t.name.concat("-TEXT-").concat(a[i].code)]="Required"):l[t.name.concat("-TEXT-").concat(a[i].code)]=""}return{isValid:r,errorMap:l}},de=function(e){var t=e.field,n=e.value,a=e.fieldName,r=e.langRequired,l=!0,i=!1,s={};if(t.required&&(null==r||null!=r&&1==r)&&(null===n||null!=n&&""===n?(l=!1,i=!0,null!=a?s[a]="Required":s[t.name]="Required"):null!=a?s[a]="":s[t.name]=""),0==i&&null!=t.validation&&""!=t.validation){var o=JSON.parse(t.validation);if(null!=o.regex&&""!=o.regex){var c=new RegExp(o.regex);if(null!=c&&null!=c.exec(n)){if(s[t.name]="",null!=o.onFail)for(var u=o.onFail,m=0;m<u.length;m++)s[u[m].link]="SUCCESS"}else{if(null!=o.onFail)for(var p=o.onFail,f=0;f<p.length;f++){var d=new RegExp(p[f].regex);null!=d&&null==d.exec(n)?s[p[f].link]="ERROR":s[p[f].link]="SUCCESS"}l=!1,null!=a?s[a]=o.errorMsg:s[t.name]=o.errorMsg}}else if(null!=o.operator&&"equals"===o.operator)if(null!=o.matchField){var E="";null!=params.prefix&&(E=params.prefix.concat("-").concat(o.matchField));var A=params.state[E];null!=A&&n===A?null!=a?s[a]="":s[t.name]="":(l=!1,null!=a?s[a]=o.errorMsg:s[t.name]=o.errorMsg)}}return{isValid:l,errorMap:s}};const Ee=function(e){var t=!0,n={};q({level:"TRACE",loc:"validateFiels::params",msg:JSON.stringify(e)});for(var a=0,r=e.fields.length;a<r;a++){var l=e.fields[a];if(!(null!=e.fieldList&&e.fieldList.indexOf(l.name)<0)&&l.rendered){var i=l.name;switch(null!=e.prefix&&(i=e.prefix.concat("-").concat(i)),l.fieldType){case"MTXT":var s=validateFieldMTXT(e,l,e.languages);0==s.isValid&&(t=s.isValid),n=Object.assign({},n,s.errorMap);break;case"TXT":var o=le(e,l,i);0==o.isValid&&(t=o.isValid),n=Object.assign({},n,o.errorMap);break;case"TXTAREA":var c=ie(e,l);0==c.isValid&&(t=c.isValid),n=Object.assign({},n,c.errorMap);break;case"BLN":case"MGRP":default:break;case"LTXT":var u=se(e,l,e.languages,e.lang);0==u.isValid&&(t=u.isValid),n=Object.assign({},n,u.errorMap);break;case"MDLSNG":var m=oe(e,l);0==m.isValid&&(t=m.isValid),n=Object.assign({},n,m.errorMap)}}}return{isValid:t,errorMap:n}},Ae=function(e,t,n,a){var r=!0,l={},i="CREATE";if(null!=t.itemId&&""!=t.itemId&&(i="MODIFY"),null==e||null==t)return{isValid:!1};for(var s=[],o=0,c=e.length;o<c;o++)if(e[o].rendered){if(null!=a&&""!=a&&e[o].group!=a)continue;if(null!=e[o].subGroup&&""!=e[o].subGroup)continue;switch(e[o].fieldType){case"MGRP":s.push(e[o]);break;case"MTXT":var u=ce({field:e[o],value:t[e[o].name.concat("-DEFAULT")],fieldName:e[o].name.concat("-DEFAULT")});0==u.isValid&&(r=u.isValid),l=Object.assign({},l,u.errorMap);var m=fe({field:e[o],inputFields:t,languages:n});0==m.isValid&&(r=m.isValid),l=Object.assign({},l,m.errorMap);break;case"TXT":var p=ce({field:e[o],value:t[e[o].name],transactionType:i});0==p.isValid&&(r=p.isValid),l=Object.assign({},l,p.errorMap);break;case"TXTAREA":var f=ue({field:e[o],value:t[e[o].name]});0==f.isValid&&(r=f.isValid),l=Object.assign({},l,f.errorMap);break;case"INT":var d=de({field:e[o],value:t[e[o].name]});0==d.isValid&&(r=d.isValid),l=Object.assign({},l,d.errorMap);break;case"BLN":case"DATE":default:break;case"MDLSNG":var E=me({field:e[o],value:t[e[o].name]});0==E.isValid&&(r=E.isValid),l=Object.assign({},l,E.errorMap);break;case"SLT":var A=pe({field:e[o],value:t[e[o].name]});0==A.isValid&&(r=A.isValid),l=Object.assign({},l,A.errorMap)}}if(s.length>0)for(var S=0;S<s.length;S++){var v="",C="";if(null!=s[S].classModel&&s[S].classModel.includes("{")){var h=JSON.parse(s[S].classModel);v=h.groupName,C=h.groupType}if("MULTI"===C)for(var _=0;_<n.length;_++){var g=!1;n[_].defaultLang&&(g=!0);for(var I=0;I<e.length;I++)if(e[I].subGroup===v){var N=e[I].fieldType,O=e[I].name+"-"+n[_].code;switch(N){case"TXT":var T=ce({field:e[I],value:t[O],fieldName:O,langRequired:g});0==T.isValid&&(r=T.isValid),l=Object.assign({},l,T.errorMap);break;case"SLT":var b=pe({field:e[I],value:t[O],fieldName:O,langRequired:g});0==b.isValid&&(r=b.isValid),l=Object.assign({},l,b.errorMap)}}}else for(var M=0;M<e.length;M++){if(e[M].group===v)switch(e[M].fieldType){case"TXT":var R=ce({field:e[M],value:t[e[M].name]});0==R.isValid&&(r=R.isValid),l=Object.assign({},l,R.errorMap);break;case"SLT":var L=pe({field:e[M],value:t[e[M].name]});0==L.isValid&&(r=L.isValid),l=Object.assign({},l,L.errorMap)}}}return{isValid:r,errorMap:l}},Se=function(e){for(var t={},n=0,a=e.fields.length;n<a;n++){var r=e.fields[n];if(r.rendered){var l=r.name;switch(null!=e.prefix&&(l=e.prefix.concat("-").concat(l)),e.fields[n].fieldType){case"MTXT":for(var i={},s=0;s<e.languages.length;s++)if(null!=e.languages[s].title.langTexts)for(var o=0;o<e.languages[s].title.langTexts.length;o++)i[e.languages[s].code]=e.state.inputFields[l.concat("-").concat(e.languages[s].code)];t[e.fields[n].name]=i;break;case"TXT":case"TXTAREA":case"DATE":case"MDLSNG":t[e.fields[n].name]=e.state.inputFields[l];break;case"BLN":"radioH"==e.fields[n].htmlType&&(t[e.fields[n].name]=jQuery("#radio-".concat(l).concat(" label.active input")).val());break;case"MBLN":if("radioH"==e.fields[n].htmlType){for(var c={},u=0;u<e.languages.length;u++)if(null!=e.languages[u].title.langTexts)for(var m=0;m<e.languages[u].title.langTexts.length;m++)c[e.languages[u].code]=jQuery("#radio-".concat(l).concat("-").concat(e.languages[u].code).concat(" label.active input")).val();t[e.fields[n].name]=c}break;case"SLT":t[e.fields[n].name]=jQuery("#".concat(l)).val();break;case"LTXT":for(var p={},f=0;f<e.languages.length;f++)if(null!=e.languages[f].title.langTexts)for(var d=0;d<e.languages[f].title.langTexts.length;d++)p[e.languages[f].code]=jQuery("#".concat(l).concat("-").concat(e.languages[f].code)).val();t[e.fields[n].name]=p}}}return t},ve=function(e,t,n){null==n&&(n="R");var a=!1;return null!=e&&null!=t&&null!=e[t]&&("W"===n&&"W"===e[t].rights?a=!0:"R"!==n||"R"!==e[t].rights&&"W"!==e[t].rights||(a=!0)),a},Ce=function(e,t){var n=e.title.defaultText;if(null!=e.title.langTexts)for(var a=0;a<e.title.langTexts.length;a++)e.title.langTexts[a].lang==t&&(n=e.title.langTexts[a].text);return n},he=function(e,t){var n;return function(a){clearTimeout(n),n=setTimeout((function(t){n=null,e.apply(undefined,re)}),t)}};function _e(e){var t=e.menus,n=e.appPrefs,a=e.permissions,r=e.activeTab,l=(e.changeTab,e.backToTab,e.headerToolTip),i=e.user,s=e.profileMenu,o=[];null!=t&&(o=ge(o,t,a,i,r)),null!=i&&(null!=s?o=ge(o,s,a,i,r):o.push(g.createElement(Q.Z,{key:"UP",title:g.createElement("span",null,g.createElement("i",{className:"fa fa-bars fa-1","aria-hidden":"true"})," ",g.createElement("span",{className:"navText"},i.username)),id:"UP"},g.createElement(Q.Z.Item,{key:"UP-1",href:"/member-profile"},"Profile"),g.createElement(Q.Z.Item,{key:"UP-2",href:"/member-logout"},"Logout"))));var c="";return null!=n&&""!=n.headerName&&(c=n.headerName),null!=l&&""!=l||(l="Environment undetermined"),g.createElement(ee.Z,{collapseOnSelect:!0,expand:"lg",bg:"dark",variant:"dark"},g.createElement(te.Z,null,g.createElement(ee.Z.Brand,{href:"#page-top"},c),g.createElement(ee.Z.Toggle,{"aria-controls":"responsive-navbar-nav"}),g.createElement(ee.Z.Collapse,{id:"responsive-navbar-nav"},g.createElement(ne.Z,{className:"me-auto"},o))))}var ge=function(e,t,n,a,r){for(var l=0;l<t.length;l++)if((null==n||ve(n,t[l].permissionCode,"R"))&&t[l].values[0].rendered){var i=[];if(null!=t[l].children)for(var s=t[l].children,o=0;o<s.length;o++)(null==n||ve(n,s[o].permissionCode,"R"))&&s[o].values[0].rendered&&i.push(g.createElement(Q.Z.Item,{key:t[l].code+"-"+s[o].menuId,href:s[o].values[0].routeWeb},s[o].values[0].value));if(i.length>0){var c="";if(null!=t[l].optionalParams&&""!=t[l].optionalParams){var u=JSON.parse(t[l].optionalParams);null!=u.override&&"value"===u.override&&"user"===u.object&&null!=u.field&&null!=a&&(c=a[u.field])}else c=t[l].values[0].value;e.push(g.createElement(Q.Z,{key:t[l].menuId,title:g.createElement("span",null,g.createElement("i",{className:"fa fa-bars fa-1","aria-hidden":"true"})," ",g.createElement("span",{className:"navText"},c)),id:t[l].code},i))}else{var m="";null!=t[l].values[0].image&&(t[l].values[0].image.startsWith("fa")?m=g.createElement("i",{className:t[l].values[0].iconWeb,"aria-hidden":"true"}):(m=g.createElement("img",{src:"/img/"+t[l].values[0].iconWeb+"_outline.png",height:"20",width:"20"}),r===t[l].values[0].href&&(m=g.createElement("img",{src:"/img/"+t[l].values[0].iconWeb+".png",height:"25",width:"25"}))));var p="";if(null!=t[l].optionalParams&&""!=t[l].optionalParams){var f=JSON.parse(t[l].optionalParams);null!=f.override&&"value"===f.override&&"user"===f.object&&null!=f.field&&null!=a&&(p=a[f.field])}else p=t[l].values[0].value;e.push(g.createElement(ne.Z.Link,{key:t[l].menuId,href:t[l].values[0].routeWeb},g.createElement(ae.Z,null,m,g.createElement("span",{className:"navText"}," ",p))))}}return e};_e.propTypes={appPrefs:$().object,permissions:$().object,menus:$().array,activeTab:$().string,changeTab:$().func,backToTab:$().string,headerToolTip:$().string,user:$().object,profileMenu:$().array};var Ie=function(e){var t=e.name,n=e.label,a=e.placeHolder,r=e.value,l=e.errors,i=e.warns,s=e.successes,o=e.inputType,c=e.min,u=e.max,m=e.rendered,p=e.required,f=e.inputChange,d=e.onBlur,E=e.wrapperClass,A=e.comment;null==E&&(E="form-group"),null!=o&&0!=o.length||(o="text");var S="";null!=A&&""!=A&&(S=A);var v="",C="";null!=l&&null!=l[t]&&""!=l[t]&&(E+=" has-error has-feedback",C=g.createElement("span",{className:"glyphicon glyphicon-remove form-control-feedback"}),v=g.createElement("div",{id:t+"-error",className:"control-label has-error"},l[t]));var h="",_="";null!=i&&null!=i[t]&&""!=i[t]&&(E+=" has-error has-feedback",_=g.createElement("span",{className:"glyphicon glyphicon-remove form-control-feedback"}),h=g.createElement("label",{id:t+"-warn",className:"control-label has-warn",htmlFor:t},i[t]));var I="";null!=s&&null!=s[t]&&""!=s[t]&&(E+=" has-success has-feedback",I=g.createElement("label",{id:t+"-success",className:"control-label has-success",htmlFor:t},s[t]));var N="";return("boolean"==typeof p&&p||"string"==typeof p&&"true"==p)&&(N=" *"),null==m||0==m.length?m=!0:"string"==typeof m&&(m="true"==m),m?g.createElement("div",{className:E},g.createElement("label",{htmlFor:t},n,N),g.createElement("input",{type:o,id:t,name:t,min:c,max:u,className:"form-control",autoComplete:"new-password",autoCapitalize:"off",onChange:f,onBlur:d,placeholder:a,value:r}),S,C,v,_,h,"",I):g.createElement("div",null)};Ie.propTypes={name:$().string.isRequired,label:$().string,placeHolder:$().string,value:$().oneOfType([$().string,$().number]),errors:$().object,warns:$().object,successes:$().object,inputType:$().string,min:$().string,max:$().string,rendered:$().oneOfType([$().string,$().bool]),required:$().oneOfType([$().string,$().bool]),inputChange:$().func,onBlur:$().func,wrapperClass:$().string,comment:$().string};const Ne=Ie;var Oe=function(e){var t=e.name,n=e.value,a=e.onClick,r=e.className;return null==r&&(r="form-control btn"),g.createElement("input",{type:"submit",name:t,id:t,className:r,value:n,onClick:a})};Oe.propTypes={name:$().string.isRequired,value:$().string,className:$().string,onClick:$().func};const Te=Oe;var be=function(e){var t=e.name,n=e.label,a=e.onChange;return g.createElement("div",{className:"form-group text-center"},g.createElement("input",{type:"checkbox",id:t,name:t,onChange:a}),g.createElement("label",{htmlFor:t},n))};be.propTypes={name:$().string,label:$().string,onChange:$().func};var Me=function(e){e.name;var t=e.label,n=e.onClick,a=e.linkClass,r="";return null!=a&&(r=a),g.createElement("div",{className:"form-group"},g.createElement("div",{className:"col-lg-12"},g.createElement("div",{className:"text-center"},g.createElement("a",{className:r,onClick:n},t))))};Me.propTypes={name:$().string.isRequired,label:$().string,onClick:$().func,linkClass:$().string};const Re=Me;var Le=function(e){var t=e.name,n=e.alphaCheckCss,a=e.alphaCheckValue,r=e.capitalCheckCss,l=e.capitalCheckValue,i=e.numberCheckCss,s=e.numberCheckValue,o=e.specialCheckCss,c=e.specialCheckValue,u=e.countCheckCss,m=e.countCheckValue,p=t.concat("-PASSWORD_CHART_WRAP"),f="";null!=a&&(f=g.createElement("div",{className:n},a," "));var d="";null!=l&&(d=g.createElement("div",{className:r},l," "));var E="";null!=s&&(E=g.createElement("div",{className:i},s," "));var A="";null!=c&&(A=g.createElement("div",{className:o},c," "));var S="";return null!=m&&(S=g.createElement("div",{className:u},m," ")),g.createElement("div",{id:p},g.createElement("div",{className:"row"},f,d,E,A,S))};Le.propTypes={name:$().string.isRequired,alphaCheckCss:$().string,alphaCheckValue:$().string,capitalCheckCss:$().string,capitalCheckValue:$().string,numberCheckCss:$().string,numberCheckValue:$().string,specialCheckCss:$().string,specialCheckValue:$().string,countCheckCss:$().string,countCheckValue:$().string};const ye=Le;function Pe(e){var t=e.currentState,n=e.fields,a=e.texts,r=e.labels,l=e.onChangeLogin,i=e.onChangeRegistration,s=(e.fieldChangeEvent,e.onForgotPassword),o=e.handleChange,c=e.fieldBlurEvent,u=e.buttonClick,m=[],p=[],f="login-form",d="",E="",A="",S=a.LOGIN_FORM,v=a.REGISTRATION_FORM,C=a.FORGOTPASSWORD_FORM;if("login"===t.view)!function(){d="active";for(var e=n.LOGIN_FORM,t=r.LOGIN_FORM,a=0;a<e.length;a++)"TXT"===e[a].fieldType&&m.push(g.createElement(Ne,{key:"LOGIN_FORM-"+e[a].name,id:"LOGIN_FORM-"+e[a].name,name:"LOGIN_FORM-"+e[a].name,placeHolder:e[a].label,inputType:e[a].htmlType,inputChange:o,onBlur:c}));for(var f=function(e){t[e].rendered&&m.push(g.createElement(Te,{key:t[e].name,id:t[e].name,name:t[e].name,value:t[e].value,onClick:function(){return u(t[e].name)},className:"form-control"}))},A=0;A<t.length;A++)f(A);m.push(g.createElement(Re,{key:S.LOGIN_FORM_FORGOT_PASSWORD.name,id:S.LOGIN_FORM_FORGOT_PASSWORD.name,name:S.LOGIN_FORM_FORGOT_PASSWORD.name,label:S.LOGIN_FORM_FORGOT_PASSWORD.value,onClick:s})),p.push(g.createElement("div",{key:S.LOGIN_FORM_HEADER.name,className:"col-xs-6"},g.createElement("a",{href:"#",className:d,onClick:l,id:S.LOGIN_FORM_HEADER.name},S.LOGIN_FORM_HEADER.value))),p.push(g.createElement("div",{key:v.REGISTRATION_FORM_HEADER.name,className:"col-xs-6"},g.createElement("a",{href:"#",className:E,onClick:i,id:v.REGISTRATION_FORM_HEADER.name},v.REGISTRATION_FORM_HEADER.value)))}();else if("forgotPassword"===t.view){A="active";var h=n.FORGOTPASSWORD_PAGE,_=r.FORGOTPASSWORD_PAGE;if(null!=h&&null!=_){for(var I=0;I<h.length;I++)"TXT"===h[I].fieldType&&m.push(g.createElement(Ne,{key:"FORGOTPASSWORD_FORM-"+h[I].name,id:"FORGOTPASSWORD_FORM-"+h[I].name,name:"FORGOTPASSWORD_FORM-"+h[I].name,placeHolder:h[I].label,inputType:h[I].htmlType,onChange:o,onBlur:c}));for(var N=0;N<_.length;N++)_[N].rendered&&m.push(g.createElement(Te,{key:_[N].name,id:_[N].name,name:_[N].name,value:_[N].value,onClick:u,className:"form-control"}))}p.push(g.createElement("div",{key:S.LOGIN_FORM_HEADER.name,className:"col-xs-6"},g.createElement("a",{href:"#",className:d,onClick:l,id:S.LOGIN_FORM_HEADER.name},S.LOGIN_FORM_HEADER.value))),p.push(g.createElement("div",{key:C.FORGOTPASSWORD_FORM_HEADER.name,className:"col-xs-6"},g.createElement("a",{href:"#",className:A,onClick:l,id:C.FORGOTPASSWORD_FORM_HEADER.name},C.FORGOTPASSWORD_FORM_HEADER.value)))}else!function(){E="active",f="registration-form";for(var e=n.REGISTRATION_PAGE,a=r.REGISTRATION_PAGE,s=0;s<e.length;s++)if("TXT"===e[s].fieldType&&m.push(g.createElement(Ne,{key:"REGISTRATION_FORM-"+e[s].name,id:"REGISTRATION_FORM-"+e[s].name,name:"REGISTRATION_FORM-"+e[s].name,placeHolder:e[s].label,inputType:e[s].htmlType,error:t.errorMap[e[s].name],onChange:o,onBlur:c})),"password"===e[s].htmlType)if(null==e[s].optionalParams){var A="text-success";null!=t.errorMap.REGISTRATION_FORM_ALPHA_CHECK&&"ERROR"===t.errorMap.REGISTRATION_FORM_ALPHA_CHECK&&(A="text-danger");var C="text-success";null!=t.errorMap.REGISTRATION_FORM_CAPITAL_CHECK&&"ERROR"===t.errorMap.REGISTRATION_FORM_CAPITAL_CHECK&&(C="text-danger");var h="text-success";null!=t.errorMap.REGISTRATION_FORM_NUMBER_CHECK&&"ERROR"===t.errorMap.REGISTRATION_FORM_NUMBER_CHECK&&(h="text-danger");var _="text-success";null!=t.errorMap.REGISTRATION_FORM_SPECIAL_CHECK&&"ERROR"===t.errorMap.REGISTRATION_FORM_SPECIAL_CHECK&&(_="text-danger");var I="text-success";null!=t.errorMap.REGISTRATION_FORM_COUNT_CHECK&&"ERROR"===t.errorMap.REGISTRATION_FORM_COUNT_CHECK&&(I="text-danger"),m.push(g.createElement(ye,{key:"{registrationFields[f].name}-METER",name:e[s].name,alphaCheckCss:A,alphaCheckValue:v.REGISTRATION_FORM_ALPHA_CHECK.value,capitalCheckCss:C,capitalCheckValue:v.REGISTRATION_FORM_CAPITAL_CHECK.value,numberCheckCss:h,numberCheckValue:v.REGISTRATION_FORM_NUMBER_CHECK.value,specialCheckCss:_,specialCheckValue:v.REGISTRATION_FORM_SPECIAL_CHECK.value,countCheckCss:I,countCheckValue:v.REGISTRATION_FORM_COUNT_CHECK.value}))}else e[s].optionalParams;for(var N=function(e){a[e].rendered&&m.push(g.createElement(Te,{key:a[e].name,id:a[e].name,name:a[e].name,value:a[e].value,onClick:function(t){return u(t,a[e].value)},className:"form-control"}))},O=0;O<a.length;O++)N(O);p.push(g.createElement("div",{key:S.LOGIN_FORM_HEADER.name,className:"col-xs-6"},g.createElement("a",{href:"#",className:d,onClick:l,id:S.LOGIN_FORM_HEADER.name},S.LOGIN_FORM_HEADER.value))),p.push(g.createElement("div",{key:v.REGISTRATION_FORM_HEADER.name,className:"col-xs-6"},g.createElement("a",{href:"#",className:E,onClick:i,id:v.REGISTRATION_FORM_HEADER.name},v.REGISTRATION_FORM_HEADER.value)))}();return g.createElement("div",{className:"container"},g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm-6"}),g.createElement("div",{id:"content_column",className:"col-sm-6 toasthub-login-top"},g.createElement("div",{className:"panel panel-login"},g.createElement("div",{className:"panel-heading"},g.createElement("div",{className:"row"},p))),g.createElement("div",{id:"login-status",role:"alert"}),g.createElement("div",{className:"panel-body panel-body-login"},g.createElement("div",{className:"row"},g.createElement("div",{className:"col-lg-12"},g.createElement("div",{id:f},m)))))))}Pe.propTypes={currentState:$().object.isRequired,errorMap:$().object,fields:$().object.isRequired,texts:$().object,labels:$().object,onChangeLogin:$().func,onChangeRegistration:$().func,onForgotPassword:$().func,fieldChangeEvent:$().func,fieldBlurEvent:$().func,handleChange:$().func,buttonClick:$().func};var De=n(7501);function Fe(e){return function(t){t({type:"USERMGNT_SET_VIEW",view:e})}}function Be(e){return function(t){t({type:"USERMGNT_SET_FIELD",params:e})}}function we(e){var t=e.message;return g.createElement("div",null,g.createElement("div",null," ",t," "))}function ke(){var e=this,t=(0,J.v9)((function(e){return e.member})),n=(0,J.v9)((function(e){return e.appPrefs})),a=(0,J.I0)();return null!=n&&null!=n.prefForms&&null!=n.prefTexts&&null!=n.prefLabels?g.createElement(Pe,{currentState:t,fields:n.prefForms,texts:n.prefTexts,labels:n.prefLabels,onChangeLogin:function(){a(Fe("login"))},onChangeRegistration:function(){a(Fe("registration"))},onForgotPassword:function(){a(Fe("forgotPassword"))},fieldChangeEvent:function(e){q({level:"TRACE",loc:"LoginContainer::fieldChangeEvent",msg:"field "+e.target.id})},fieldBlurEvent:function(t){var a,r="";"NATIVE"===n.codeType?(a=t.nativeEvent.id.split("-"),r=t.nativeEvent.text):(a=t.target.id.split("-"),r=t.target.value);var l={};if("REGISTRATION_FORM"===a[0]){({})[fieldName]=r;var i=Ee({state:e.state,fields:n.prefForms[a[0]],lang:n.lang,languages:n.prefGlobal.LANGUAGES,group:"MAIN",prefix:a[0],fieldList:[a[1]]});l.isValid=i.isValid;var s=Object.assign({},e.state.errorMap,i.errorMap);l.errorMap=s,e.setState(Object.assign({},e.state,l))}},buttonClick:function(r){if(q({level:"TRACE",loc:"LoginContainer::buttonClick::fieldname",msg:r}),q({level:"TRACE",loc:"LoginContainer::buttonClick::memberState",msg:JSON.stringify(t)}),q({level:"TRACE",loc:"LoginContainer::buttonClick::appPrefs",msg:JSON.stringify(n)}),"LOGIN_FORM_SUBMIT_BUTTON"===r)if(1==Ee({state:t,fields:n.prefForms.LOGIN_FORM,lang:n.lang,languages:n.prefGlobal.LANGUAGES,group:"MAIN",prefix:"LOGIN_FORM"}).isValid){var l=Se({state:t,fields:n.prefForms.LOGIN_FORM,lang:n.lang,languages:n.prefGlobal.LANGUAGES,prefix:"LOGIN_FORM"});a(function(e,t){return function(n){var a={action:"LOGINAUTHENTICATE",service:"LOGIN_SVC",prefFormKeys:["LOGIN_FORM"]};a.lang=t;var r={};return r.requestParams=a,r.auth=(0,De.encode)(e.LOGIN_FORM_USERNAME+":"+e.LOGIN_FORM_PASSWORD),r.URI="/api/usermgmt/callService",W(r).then((function(e){null!=e&&null!=e.status&&"SUCCESS"===e.status&&null==e.protocalError&&null==e.errors?(n({type:"SAVE_SESSION",responseJson:e}),n({type:"CLEAR_STATUS",responseJson:e})):null!=e&&null!=e.errors?(e.status="ERROR",n({type:"SHOW_STATUS_ERROR",error:[e.errors]}),n({type:"PROCESS_LOGOUT"})):null!=e&&null!=e.protocalError&&(e.protocalError>=401?n({type:"SHOW_STATUS_ERROR",error:["User or password is incorrect."]}):n({type:"SHOW_STATUS_ERROR",error:[e.protocalError]}))})).catch((function(e){throw e}))}}(l,n.lang))}else q({level:"TRACE",loc:"LoginContainer::buttonClick",msg:"Password is not valid "});else if("REGISTRATION_FORM_SUBMIT_BUTTON"===r){var i=Ee({state:t,fields:n.prefForms.REGISTRATION_PAGE,lang:n.lang,languages:n.prefGlobal.LANGUAGES,group:"MAIN",prefix:"REGISTRATION_FORM"});if(1==i.isValid){var s=Se({state:t,fields:n.prefForms.REGISTRATION_PAGE,lang:n.lang,languages:n.prefGlobal.LANGUAGES,prefix:"REGISTRATION_FORM"});a(function(e,t){return function(n){var a={action:"REGISTERFULL",service:"LOGIN_SVC",prefFormKeys:["REGISTRATION_FORM"]};a.inputFields=e,a.lang=t;var r={};return r.requestParams=a,r.URI="/api/login/callService",W(r).then((function(e){var t={};if(null!=e&&null!=e.params&&null!=e.params.status)if(null!=e.params.status.error)n({type:"SHOW_STATUS_ERROR",error:e.params.status.error});else if(null!=e.params.status.info){for(var a=e.params.status.info,r=0;r<a.length;r++)"success"===a[r].code&&(t.currentPage="login");n({type:"SHOW_STATUS",info:e.params.status.info})}})).catch((function(e){throw e}))}}(s,n.lang))}else{var o={};o.isValid=i.isValid,o.errorMap=i.errorMap,e.setState(Object.assign({},e.state,o))}}else if("FORGOTPASSWORD_FORM_SUBMIT_BUTTON"===r){var c=Ee({state:t,fields:n.prefForms.FORGOTPASSWORD_PAGE,lang:n.lang,languages:n.prefGlobal.LANGUAGES,group:"MAIN",prefix:"FORGOTPASSWORD_FORM"});if(1==c.isValid){var u=Se({state:t,fields:n.prefForms.FORGOTPASSWORD_PAGE,lang:n.lang,languages:n.prefGlobal.LANGUAGES,prefix:"FORGOTPASSWORD_FORM"});a(function(e,t){return function(n){var a={action:"FORGOTPASSWORD",service:"LOGIN_SVC",prefFormKeys:["FORGOTPASSWORD_FORM"]};a.inputFields=e,a.lang=t;var r={};return r.requestParams=a,r.URI="/api/login/callService",W(r).then((function(e){var t={};if(null!=e&&null!=e.params&&null!=e.params.status)if(null!=e.params.status.error)n({type:"SHOW_STATUS_ERROR",error:e.params.status.error});else if(null!=e.params.status.info){for(var a=e.params.status.info,r=0;r<a.length;r++)"success"===a[r].code&&(t.currentPage="login");n({type:"PROCESS_NAV_CHANGE",params:t}),n({type:"SHOW_STATUS",info:e.params.status.info})}})).catch((function(e){throw e}))}}(u,n.lang))}else{var m={};m.isValid=c.isValid,m.errorMap=c.errorMap,e.setState(Object.assign({},t,m))}}},handleChange:function(e,t){null!=e&&null!=e.target?a(Be({field:[e.target.id],value:e.target.value})):a(Be({field:[t],value:e}))},changeView:function(e){a(Fe(e))}}):g.createElement(we,null," App Forms are missing ")}function Ge(e){return{type:"CLEAR_STATUS",params:e}}function Ue(){var e=(0,J.v9)((function(e){return e.status})),t=(0,J.I0)(),n=[];if(null!=e.error)for(var a=0;a<e.error.length;a++)n.push(g.createElement("div",{key:"error"+a,className:"alert alert-danger",role:"alert"},g.createElement("span",{className:"glyphicon glyphicon-exclamation-sign","aria-hidden":"true"}),g.createElement("span",{className:"sr-only"},"Error:"),e.error[a].message));if(null!=e.info)for(var r=0;r<e.info.length;r++)n.push(g.createElement("div",{key:"info-"+r,id:"info-"+r,className:"alert alert-success",role:"alert"},e.info[r].message));if(null!=e.warn)for(var l=0;l<e.warn.length;l++)n.push(g.createElement("div",{key:"warn-"+l,id:"warn-"+l,className:"alert alert-warning",role:"alert"},e.warn[l].message));return null==e.error&&null==e.info&&null==e.warn||setTimeout((function(){t(Ge())}),5e3),g.createElement("div",{className:"toastHub-status"}," ",n," ")}we.propTypes={message:$().string},Ue.propTypes={prefGlobal:$().object,error:$().array,info:$().array,warn:$().array,lang:$().string,actions:$().object};var je=n(6974);function xe(){return g.createElement("div",null," Loading.... ")}function Ve(e){var t=e.lang;return function(e){var n={action:"INIT_PROFILE",service:"MEMBER_SVC"};n.prefFormKeys=new Array("MEMBER_PROFILE_FORM"),n.prefTextKeys=new Array("MEMBER_PROFILE_PAGE"),n.prefLabelKeys=new Array("MEMBER_PROFILE_PAGE"),n.lang=t;var a={};return a.requestParams=n,a.URI="/api/member/callService",W(a).then((function(t){null!=t&&null==t.protocalError?e({type:"LOAD_INIT_MEMBER_PROFILE",responseJson:t}):K(t,e)})).catch((function(e){throw e}))}}function He(e){var t=e.state;return function(e){var n={action:"SAVE_PROFILE",service:"MEMBER_SVC"};n.inputFields=t.inputFields;var a={};return a.requestParams=n,a.URI="/api/member/callService",W(a).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?(e({type:"MEMBER_PROFILE_UPDATE",memberState:t}),e({type:"SHOW_STATUS",info:n.infos})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",error:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function Je(e){var t=e.id,n=e.appPrefs;return function(e){var a={action:"ITEM",service:"MEMBER_PROFILE_SVC"};a.prefFormKeys=new Array("MEMBER_PROFILE_FORM"),null!=t&&(a.itemId=t);var r={};return r.requestParams=a,r.URI="/api/member/callService",W(r).then((function(t){null!=t&&null==t.protocalError?e({type:"MEMBER_PROFILE_ITEM",responseJson:t,appPrefs:n}):K(t,e)})).catch((function(e){throw e}))}}function Ye(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"MEMBER_PROFILE_INPUT_CHANGE",params:a})}}function qe(e){var t=e.field,n=e.value;return function(e){var a={};a.field=t,a.value=n,e({type:"MEMBER_PROFILE_INPUT_CHANGE",params:a})}}function We(e){var t=e.state,n=e.orderCriteria;return function(e){e({type:"MEMBER_PROFILE_ORDERBY",orderCriteria:n}),e(list({state:t,orderCriteria:n}))}}function ze(){return function(e){e({type:"MEMBER_PROFILE_CLEAR_ITEM"})}}function Ke(e){return function(t){var n={};n.field=e,t({type:"MEMBER_PROFILE_CLEAR_FIELD",params:n})}}function Xe(e){var t=e.errors;return function(e){e({type:"MEMBER_PROFILE_SET_ERRORS",errors:t})}}function Ze(e){var t=e.item;return function(e){e({type:"MEMBER_PROFILE_OPEN_DELETE_MODAL",item:t})}}function $e(){return function(e){e({type:"MEMBER_PROFILE_CLOSE_DELETE_MODAL"})}}$().object.isRequired,$().func,$().object;var Qe=function(e){var t=e.field,n=e.inputChange,a=e.onBlur,r=e.itemState,l=e.lang,i=t.name;null!=l&&(i=t.name+"-"+l);var s="";if(""!=t.classModel){var o=JSON.parse(t.classModel);null!=r.item&&null!=r.item[o.field]&&(s=r.item[o.field])}var c="";if(""!=t.validation){var u=JSON.parse(t.validation);null!=u.comment&&(c=u.comment)}return g.createElement(Ne,{name:i,inputType:t.htmlType,label:t.label,rendered:t.rendered,required:t.required,errors:r.errors,successes:r.successes,warns:r.warns,inputChange:function(e){return n("TEXT",i,"",e)},value:null!=r.inputFields&&null!=r.inputFields[i]?r.inputFields[i]:s,comment:c,onBlur:null!=a?function(){return a(t)}:null})};Qe.propTypes={itemState:$().object.isRequired,field:$().object.isRequired,inputChange:$().func.isRequired,onBlur:$().func,lang:$().string};const et=Qe;var tt=function(e){var t=e.name,n=e.label,a=e.placeHolder,r=e.value,l=e.errors,i=e.warns,s=e.successes,o=e.rows,c=e.cols,u=e.rendered,m=e.required,p=e.inputChange,f=e.onBlur,d=e.wrapperClass,E=e.comment;null==d&&(d="form-group"),null!=o&&0!=o.length||(o=2),null!=c&&0!=c.length||(c=50);var A="";null!=E&&""!=E&&(A=E);var S="",v="";null!=l&&null!=l[t]&&""!=l[t]&&(d+=" has-error has-feedback",v=g.createElement("span",{className:"glyphicon glyphicon-remove form-control-feedback"}),S=g.createElement("div",{id:t+"-error",className:"control-label has-error"},l[t]));var C="",h="";null!=i&&null!=i[t]&&""!=i[t]&&(d+=" has-error has-feedback",h=g.createElement("span",{className:"glyphicon glyphicon-remove form-control-feedback"}),C=g.createElement("label",{id:t+"-warn",className:"control-label has-warn",htmlFor:t},i[t]));var _="";null!=s&&null!=s[t]&&""!=s[t]&&(d+=" has-success has-feedback",_=g.createElement("label",{id:t+"-success",className:"control-label has-success",htmlFor:t},s[t]));var I="";return("boolean"==typeof m&&m||"string"==typeof m&&"true"==m)&&(I=" *"),null==u||0==u.length?u=!0:"string"==typeof u&&(u="true"==u),u?g.createElement("div",{className:d},g.createElement("label",{htmlFor:t},n,I),g.createElement("textarea",{id:t,name:t,rows:o,cols:c,className:"form-control",onChange:p,onBlur:f,placeholder:a,value:r}),A,v,S,h,C,"",_):g.createElement("div",null)};tt.propTypes={name:$().string.isRequired,label:$().string,placeHolder:$().string,value:$().string,errors:$().object,warns:$().object,successes:$().object,rows:$().number,cols:$().number,rendered:$().oneOfType([$().string,$().bool]),required:$().oneOfType([$().string,$().bool]),inputChange:$().func,onBlur:$().func,wrapperClass:$().string,comment:$().string};const nt=tt;var at=function(e){var t=e.field,n=e.inputChange,a=e.onBlur,r=e.itemState,l=e.lang,i=t.name;null!=l&&(i=t.name+"-"+l);var s="";if(""!=t.classModel){var o=JSON.parse(t.classModel);null!=r.selected&&null!=r.selected[o.field]&&(s=r.selected[o.field])}var c="";if(""!=t.validation){var u=JSON.parse(t.validation);null!=u.comment&&(c=u.comment)}return g.createElement(nt,{name:i,label:t.label,rendered:t.rendered,required:t.required,errors:r.errors,successes:r.successes,rows:t.rows,cols:t.cols,warns:r.warns,inputChange:function(e){return n("TEXT",i,"",e)},value:null!=r.inputFields&&null!=r.inputFields[i]?r.inputFields[i]:s,comment:c,onBlur:null!=a?a(t):null})};at.propTypes={itemState:$().object.isRequired,field:$().object.isRequired,inputChange:$().func,onBlur:$().func,lang:$().string};const rt=at;var lt=function(e){var t=e.itemState,n=e.field,a=e.inputChange,r=e.appPrefs,l=e.wrapperClass;null==l&&(l="form-group");var i=null;null!=t&&null!=t.errors&&(i=t.errors);var s=null;null!=t&&null!=t.warns&&(s=t.warns);var o=null;null!=t&&null!=t.successes&&(o=t.successes);var c="";if(""!=n.classModel){var u=JSON.parse(n.classModel);null!=t.selected&&null!=t.selected[u.field]&&(c=t.selected[u.field].defaultText)}var m=n.name+"-DEFAULT",p=n.name+"-TEXT",f=JSON.parse(n.label),d=t.inputFields,E=[];if(null!=r&&null!=r.prefGlobal&&null!=r.prefGlobal.LANGUAGES&&r.prefGlobal.LANGUAGES.length>0)for(var A=0;A<r.prefGlobal.LANGUAGES.length;A++){var S=Ce(r.prefGlobal.LANGUAGES[A],r.lang),v=!1;r.prefGlobal.LANGUAGES[A].defaultLang&&(v=!0),n.rendered&&function(){var e=f.textLabel+" "+S,t=p+"-"+r.prefGlobal.LANGUAGES[A].code;E.push(g.createElement(Ne,{key:A,name:t,inputType:n.htmlType,label:e,required:v,errors:i,warns:s,successes:o,inputChange:function(e){return a("TEXT",t,"",e)},value:null!=d&&null!=d[t]?d[t]:""}))}()}var C=!0;return null!=n.rendered&&0!=n.rendered.length&&(C=("string"!=typeof n.rendered||"false"!=n.rendered)&&n.rendered),C?g.createElement("div",{className:"panel panel-default"},g.createElement("div",{className:"panel-heading"}," ",f.label," "),g.createElement("div",{className:"panel-body"},g.createElement(Ne,{name:m,inputType:n.htmlType,label:f.defaultLabel,rendered:n.rendered,required:n.required,errors:i,warns:s,successes:o,inputChange:function(e){return a("TEXT",m,"",e)},value:null!=d&&null!=d[m]?d[m]:c}),E)):g.createElement("div",null)};lt.propTypes={itemState:$().object.isRequired,field:$().object.isRequired,inputChange:$().func.isRequired,appPrefs:$().object.isRequired,wrapperClass:$().string};const it=lt;var st=n(3157),ot=n(6906);function ct(e){return ct="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ct(e)}var ut=function(e){var t=e.name,n=e.label,a=(e.defaultOption,e.value),r=e.errors,l=e.warns,i=e.successes,s=e.rendered,o=e.required,c=e.inputChange,u=(e.onBlur,e.options),m=e.loadOptions,p=e.wrapperClass,f=e.isAsync,d=e.isDisabled;null==p&&(p="form-group");var E="",A="";null!=r&&null!=r[t]&&""!=r[t]&&(p+=" has-error has-feedback",A=g.createElement("span",{className:"glyphicon glyphicon-remove form-control-feedback"}),E=g.createElement("div",{id:t+"-error",className:"control-label has-error"},r[t]));var S="",v="";null!=l&&null!=l[t]&&l[t]>0&&(p+=" has-error has-feedback",v=g.createElement("span",{className:"glyphicon glyphicon-remove form-control-feedback"}),S=g.createElement("label",{id:t+"-warn",className:"control-label has-warn",htmlFor:t},l[t]));var C="",h="";null!=i&&i[t]>0&&(p+=" has-error has-feedback",h=g.createElement("span",{className:"glyphicon glyphicon-remove form-control-feedback"}),C=g.createElement("label",{id:t+"-success",className:"control-label has-success",htmlFor:t},i[t]));var _="";return("boolean"==typeof o&&o||"string"==typeof o&&"true"==o)&&(_=" *"),null==s||0==s.length?s=!0:"string"==typeof s&&(s="true"==s),ct(m),s?d?g.createElement("div",{className:p},g.createElement("label",{htmlFor:t},n,_),g.createElement("div",null,a)):f?g.createElement("div",{className:p},g.createElement("label",{htmlFor:t},n,_),g.createElement(ot.Z,{cacheOptions:!0,id:t,name:t,defaultValue:a,onSelectResetsInput:!1,onBlurResetsInput:!1,onInputChange:function(e){return c("INPUT",t,e)},onChange:function(e){return c("SELECT",t,e)},loadOptions:function(e,n){return m(e,n,t)}}),A,E,v,S,h,C):g.createElement("div",{className:p},g.createElement("label",{htmlFor:t},n,_),g.createElement(st.ZP,{id:t,name:t,defaultValue:a,onChange:function(e){return c("SELECT",t,e)},options:u}),A,E,v,S,h,C):g.createElement("div",null)};ut.propTypes={name:$().string.isRequired,label:$().string.isRequired,defaultOption:$().string,value:$().oneOfType([$().string,$().number]),errors:$().object,warns:$().object,successes:$().object,rendered:$().oneOfType([$().string,$().bool]),required:$().oneOfType([$().string,$().bool]),loadOptions:$().func,inputChange:$().func.isRequired,onBlur:$().func,options:$().arrayOf($().object),wrapperClass:$().string,isAsync:$().bool,isDisabled:$().bool};const mt=ut;var pt=function(e){var t=e.itemState,n=e.field,a=e.options,r=e.loadOptions,l=e.inputChange,i=e.lang,s=e.isAsync,o=n.name;null!=i&&(o=n.name+"-"+i);var c=!1,u={},m="";if(""!=n.classModel){var p=JSON.parse(n.classModel);null!=t.selected&&null!=t.selected[p.field]&&(m=t.selected[p.field]),0==p.allowModify&&"MODIFY"==t.view&&null!=t.selected&&null!=t.selected[p.displayField]&&(c=!0,u=t.selected[p.displayField])}var f=[];null!=a?f=a:""!=n.value&&(f=JSON.parse(n.value).options);for(var d=0;d<f.length;d++)if(f[d].value==m){u=f[d];break}return g.createElement(mt,{isAsync:s,name:o,label:n.label,required:n.required,errors:t.errors,successes:t.successes,warns:t.warns,options:f,loadOptions:r,inputChange:l,value:u,isDisabled:c})};pt.propTypes={itemState:$().object.isRequired,field:$().object.isRequired,options:$().array,inputChange:$().func.isRequired,loadOptions:$().func,lang:$().string,isAsync:$().bool};const ft=pt;var dt=function(e){var t=e.itemState,n=e.field,a=e.inputChange,r=e.wrapperClass,l=e.lang,i=e.options,s=n.name;null!=l&&(s=n.name+"-"+l),null==r&&(r="form-group text-center");var o="",c="";null!=t&&null!=t.errors&&null!=t.errors[s]&&""!=t.errors[s]&&(r+=" has-error has-feedback",c=g.createElement("span",{className:"glyphicon glyphicon-remove form-control-feedback"}),o=g.createElement("div",{id:s+"-error",className:"control-label has-error"},t.errors[s]));var u="",m="";null!=t&&null!=t.warns&&null!=t.warns[s]&&t.warns[s]>0&&(r+=" has-error has-feedback",m=g.createElement("span",{className:"glyphicon glyphicon-remove form-control-feedback"}),u=g.createElement("label",{id:s+"-warn",className:"control-label has-warn",htmlFor:s},t.warns[s]));var p="",f="";null!=t&&null!=t.successes&&t.successes[s]>0&&(r+=" has-error has-feedback",f=g.createElement("span",{className:"glyphicon glyphicon-remove form-control-feedback"}),p=g.createElement("label",{id:s+"-success",className:"control-label has-success",htmlFor:s},t.successes[s]));var d,E;if(null==i||null!=i&&0==i.length)if(null!=n.value){var A=JSON.parse(n.value);i=A.options}else i=[{value:!0,label:"Yes"},{value:!1,label:"No",defaultInd:!0}];if(""!=n.classModel){var S=JSON.parse(n.classModel);null!=t.selected&&null!=t.selected[S.field]&&(d=t.selected[S.field])}if(null==(E=null!=t.inputFields&&null!=t.inputFields[s]?t.inputFields[s]:d)){for(var v=!1,C=0;C<i.length;C++)1==i[C].defaultInd&&(E=i[C].value,v=!0);v||(E=!1)}for(var h=[],_=function(e){var t="btn btn-radio btn-sm notActive";E==i[e].value&&(t="btn btn-radio btn-sm active"),h.push(g.createElement("a",{key:e,className:t,"data-toggle":s,"data-title":i[e].label,onClick:function(){return a("SWITCH",s,i[e].value)}},i[e].label))},I=0;I<i.length;I++)_(I);var N="";("boolean"==typeof n.required&&n.required||"string"==typeof n.required&&"true"==n.required)&&(N=" *");var O=!0;null!=n.rendered&&0!=n.rendered.length&&(O=("string"!=typeof n.rendered||"false"!=n.rendered)&&n.rendered);var T=s+"-SWITCH";return O?g.createElement("div",{className:"form-group"},g.createElement("label",{htmlFor:s},n.label,N),g.createElement("div",{className:"input-group"},g.createElement("div",{id:T,className:"btn-group"},h),g.createElement("input",{type:"hidden",name:s,id:s}),c,o,m,u,f,p)):g.createElement("div",null)};dt.propTypes={itemState:$().object.isRequired,field:$().object.isRequired,inputChange:$().func.isRequired,wrapperClass:$().string,lang:$().string,options:$().array};const Et=dt;var At=n(9198),St=n.n(At),vt=(n(9339),n(381)),Ct=n.n(vt),ht=function(e){var t=e.name,n=e.label,a=(e.placeHolder,e.value),r=e.errors,l=e.warns,i=e.successes,s=e.rendered,o=e.required,c=e.inputChange,u=(e.onBlur,e.wrapperClass),m=e.comment;null==u&&(u="form-group");var p="",f="";null!=r&&null!=r[t]&&""!=r[t]&&(u+=" has-error has-feedback",f=g.createElement("span",{className:"glyphicon glyphicon-remove form-control-feedback"}),p=g.createElement("div",{id:t+"-error",className:"control-label has-error"},r[t]));var d="",E="";null!=l&&null!=l[t]&&""!=l[t]&&(u+=" has-error has-feedback",E=g.createElement("span",{className:"glyphicon glyphicon-remove form-control-feedback"}),d=g.createElement("label",{id:t+"-warn",className:"control-label has-warn",htmlFor:t},l[t]));var A="";null!=i&&null!=i[t]&&""!=i[t]&&(u+=" has-error has-feedback",A=g.createElement("label",{id:t+"-success",className:"control-label has-success",htmlFor:t},i[t]));var S="";("boolean"==typeof o&&o||"string"==typeof o&&"true"==o)&&(S=" *"),null==s||0==s.length?s=!0:"string"==typeof s&&(s="true"==s);var v=null;return v=null!=a&&""!=a?Ct()(a).toDate():Ct()().toDate(),s?g.createElement("div",{className:u},g.createElement("label",{htmlFor:t},n,S),g.createElement("div",null,g.createElement(St(),{className:"form-control",selected:v,dateFormat:"MM-dd-yyyy",onChange:c})),f,p,E,d,"",A):g.createElement("div",null)};ht.propTypes={name:$().string.isRequired,label:$().string,placeHolder:$().string,value:$().string,errors:$().object,warns:$().object,successes:$().object,rendered:$().oneOfType([$().string,$().bool]),required:$().oneOfType([$().string,$().bool]),inputChange:$().func.isRequired,onBlur:$().func,wrapperClass:$().string,comment:$().string};const _t=ht;var gt=function(e){var t=e.itemState,n=e.field,a=e.inputChange,r=e.onBlur,l=e.lang,i=n.name;null!=l&&(i=n.name+"-"+l);var s="";if(""!=n.classModel){var o=JSON.parse(n.classModel);null!=t&&null!=t.inputFields&&null!=t.inputFields[o.field]&&(s=t.inputFields[o.field])}var c="";if(""!=n.validation){var u=JSON.parse(n.validation);null!=u.comment&&(c=u.comment)}var m=null;null!=t&&null!=t.errors&&(m=t.errors);var p=null;null!=t&&null!=t.warns&&(p=t.warns);var f=null;return null!=t&&null!=t.successes&&(f=t.successes),g.createElement(_t,{name:i,label:n.label,rendered:n.rendered,required:n.required,errors:m,successes:f,warns:p,inputChange:function(e){return a("DATE",i,"",e)},value:null!=t.inputFields&&null!=t.inputFields[i]?t.inputFields[i]:s,comment:c,onBlur:null!=r?r(n):null})};gt.propTypes={itemState:$().object.isRequired,field:$().object.isRequired,inputChange:$().func.isRequired,onBlur:$().func,lang:$().string};const It=gt;var Nt=function(e){var t=e.itemState,n=e.id,a=e.label,r=e.defaultOption,l=(e.value,e.rendered),i=e.required,s=e.inputChange,o=(e.onBlur,e.options),c=e.wrapperClass,u=e.inline;null==c&&(c="form-group"),u=null!=u&&"true"==u;var m="",p="";null!=t&&null!=t.errors&&null!=t.errors[n]&&""!=t.errors[n]&&(c+=" has-error has-feedback",p=g.createElement("span",{className:"glyphicon glyphicon-remove form-control-feedback"}),m=g.createElement("div",{id:n+"-error",className:"control-label has-error"},t.errors[n]));var f="",d="";null!=t&&null!=t.warns&&null!=t.warns[n]&&t.warns[n]>0&&(c+=" has-error has-feedback",d=g.createElement("span",{className:"glyphicon glyphicon-remove form-control-feedback"}),f=g.createElement("label",{id:n+"-warn",className:"control-label has-warn",htmlFor:n},t.warns[n]));var E="",A="";null!=t&&null!=t.successes&&t.successes[name]>0&&(c+=" has-error has-feedback",A=g.createElement("span",{className:"glyphicon glyphicon-remove form-control-feedback"}),E=g.createElement("label",{id:n+"-success",className:"control-label has-success",htmlFor:n},t.successes[n]));var S="";return("boolean"==typeof i&&i||"string"==typeof i&&"true"==i)&&(S=" *"),null==l||0==l.length?l=!0:"string"==typeof l&&(l="true"==l),l?u?g.createElement("div",{className:c},g.createElement("div",{className:"row"},g.createElement("div",{className:"col-md-3"},a,S),g.createElement("div",{className:"col-md-9"},g.createElement(st.ZP,{id:n+"-multiSelect",name:n+"-multiSelect",defaultValue:r,isMulti:!0,onChange:function(e){return s("MULTISELECT",n,e)},options:o}))),p,m,d,f,A,E):g.createElement("div",{className:c},g.createElement("label",{htmlFor:name},a,S),g.createElement(st.ZP,{id:n+"-multiSelect",name:n+"-multiSelect",defaultValue:r,isMulti:!0,onChange:function(e){return s("MULTISELECT",n,e)},options:o}),p,m,d,f,A,E):g.createElement("div",null)};Nt.propTypes={itemState:$().object.isRequired,id:$().string.isRequired,label:$().string.isRequired,defaultOption:$().oneOfType([$().string,$().array]),value:$().oneOfType([$().string,$().number]),rendered:$().oneOfType([$().string,$().bool]),required:$().oneOfType([$().string,$().bool]),inputChange:$().func.isRequired,onBlur:$().func,options:$().arrayOf($().object),wrapperClass:$().string,inline:$().string};const Ot=Nt;var Tt=function(e){var t=e.itemState,n=e.field,a=e.options,r=e.inputChange,l=e.lang,i=e.defaultOption,s=n.name;return null!=l&&(s=n.name+"-"+l),g.createElement(Ot,{itemState:t,name:s,label:n.label,options:a,inputChange:r,defaultOption:i})};Tt.propTypes={itemState:$().object.isRequired,field:$().object.isRequired,options:$().array,defaultOption:$().array,inputChange:$().func.isRequired,lang:$().string};const bt=Tt;function Mt(e){var t=e.itemState,n=e.formName,a=e.formTitle,r=(e.formGroup,e.appPrefs),i=e.onSave,s=e.onCancel,o=e.inputChange,c=e.onClick,u=e.loadOptions;(null==a||null!=a&&""==a)&&(a="Form Title");var m="";null!=t.selected&&null!=t.selected.created&&(m=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(t.selected.created).toDate()),m=g.createElement("div",null,"Created: ",m));var p="";null!=t.selected&&null!=t.selected.modified&&(p=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(t.selected.modified).toDate()),p=g.createElement("div",null,"Last Modified: ",p));var f=[],d=[],E=[];if(null!=t.prefForms&&null!=t.prefForms[n]){for(var A=0;A<t.prefForms[n].length;A++)if(null==t.prefForms[n][A].subGroup||""==t.prefForms[n][A].subGroup){var S=t.prefForms[n][A].fieldType;!function(){switch(S){case"MGRP":d.push(t.prefForms[n][A]);break;case"TXT":case"INT":f.push(g.createElement("div",{key:A,className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(et,{field:t.prefForms[n][A],itemState:t,inputChange:o}))));break;case"TXTAREA":f.push(g.createElement("div",{key:A,className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(rt,{field:t.prefForms[n][A],itemState:t,inputChange:o}))));break;case"MTXT":f.push(g.createElement("div",{key:A,className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(it,{field:t.prefForms[n][A],itemState:t,inputChange:o,appPrefs:r}))));break;case"SLT":if(E=[],""!=t.prefForms[n][A].value){var e=JSON.parse(t.prefForms[n][A].value);if(null!=e.options)E=e.options;else if(null!=e.referPref){var a=r.prefTexts[e.referPref.prefName][e.referPref.prefItem];if(null!=a&&null!=a.value&&""!=a.value){var l=JSON.parse(a.value);null!=l.options&&(E=l.options)}}else if(null!=e.referPrefGlobal){var i=r.prefGlobal[e.referPrefGlobal];if(null!=i&&"LANGUAGES"===e.referPrefGlobal)for(var s=0;s<i.length;s++){var m={};m.value=i[s].code;for(var p=0;p<i[s].title.langTexts.length;p++)i[s].title.langTexts[p].lang===r.lang&&(m.label=i[s].title.langTexts[p].text);E.push(m)}}}f.push(g.createElement("div",{key:A,className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(ft,{field:t.prefForms[n][A],itemState:t,inputChange:o,options:E}))));break;case"SLTMULTI":if(E=[],""!=t.prefForms[n][A].value){var v=JSON.parse(t.prefForms[n][A].value);if(null!=v.options)E=v.options;else if(null!=v.referPref){var C=r.prefTexts[v.referPref.prefName][v.referPref.prefItem];if(null!=C&&null!=C.value&&""!=C.value){var h=JSON.parse(C.value);null!=h.options&&(E=h.options)}}else null!=v.optionRef&&(E=t[v.optionRef])}var _=[];if(null!=t.inputFields[t.prefForms[n][A].name]&&""!=t.inputFields[t.prefForms[n][A].name])for(var I=t.inputFields[t.prefForms[n][A].name],N=0;N<I.length;N++)for(var O=0;O<E.length;O++)I[N].value==E[O].value&&_.push(E[O]);f.push(g.createElement("div",{key:A,className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(bt,{field:t.prefForms[n][A],itemState:t,inputChange:o,options:E,defaultOption:_}))));break;case"BTN":var T="TEST";if(null!=t.prefForms[n][A].classModel){var b=JSON.parse(t.prefForms[n][A].classModel);null!=b.code&&"function"==b.type&&(T=b.code)}f.push(g.createElement("div",{key:A,className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement("button",{type:"button",className:"btn btn-primary",onClick:function(){return c(T)}},t.prefForms[n][A].label))));break;case"BLN":var M=[];if(""!=t.prefForms[n][A].value){var R=JSON.parse(t.prefForms[n][A].value);if(null!=R.options)M=R.options;else if(null!=R.referPref){var L=r.prefTexts[R.referPref.prefName][R.referPref.prefItem];if(null!=L&&null!=L.value&&""!=L.value){var y=JSON.parse(L.value);null!=y.options&&(M=y.options)}}}f.push(g.createElement("div",{key:A,className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(Et,{field:t.prefForms[n][A],itemState:t,inputChange:o,options:M}))));break;case"DATE":f.push(g.createElement("div",{key:A,className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(It,{field:t.prefForms[n][A],itemState:t,inputChange:o}))));break;case"ASLT":f.push(g.createElement("div",{key:A,className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(ft,{isAsync:!0,field:t.prefForms[n][A],itemState:t,inputChange:o,loadOptions:u}))))}}()}if(d.length>0)for(var v=0;v<d.length;v++){var C="",h="",_=d[v].label;if(null!=d[v].classModel&&d[v].classModel.includes("{")){var I=JSON.parse(d[v].classModel);C=I.groupName,h=I.groupType}if("MULTI"===h)for(var N=0;N<r.prefGlobal.LANGUAGES.length;N++){for(var O="subGroup-"+r.prefGlobal.LANGUAGES[N].code,T=[],b=0;b<t.prefForms[n].length;b++){if(t.prefForms[n][b].subGroup===C)switch(t.prefForms[n][b].fieldType){case"TXT":T.push(g.createElement("div",{key:b,className:"row"},g.createElement("div",{className:"col-sm-12"},g.createElement(et,{field:t.prefForms[n][b],lang:r.prefGlobal.LANGUAGES[N].code,itemState:t,inputChange:o}))));break;case"SLT":var M=[];if(""!=t.prefForms[n][b].value)M=JSON.parse(t.prefForms[n][b].value).options;T.push(g.createElement("div",{key:b,className:"row"},g.createElement("div",{className:"col-sm-12"},g.createElement(ft,{field:t.prefForms[n][b],lang:r.prefGlobal.LANGUAGES[N].code,itemState:t,inputChange:o,options:M}))));break;case"BLN":var R=[];if(""!=t.prefForms[n][b].value){var L=JSON.parse(t.prefForms[n][b].value);if(null!=L.options)R=L.options;else if(null!=L.referPref){var y=r.prefTexts[L.referPref.prefName][L.referPref.prefItem];if(null!=y&&null!=y.value&&""!=y.value){var P=JSON.parse(y.value);null!=P.options&&(R=P.options)}}}T.push(g.createElement("div",{key:b,className:"row"},g.createElement("div",{className:"col-sm-12"},g.createElement(Et,{field:t.prefForms[n][b],lang:r.prefGlobal.LANGUAGES[N].code,itemState:t,inputChange:o,options:R}))))}}var D=_+" "+Ce(r.prefGlobal.LANGUAGES[N],r.lang);r.prefGlobal.LANGUAGES[N].defaultLang&&(D+=" *"),f.push(g.createElement("div",{key:O,className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement("div",{className:"panel panel-default"},g.createElement("div",{className:"panel-heading"}," ",D," "),g.createElement("div",{className:"panel-body"},T)))))}else{for(var F=0;F<t.prefForms[n].length;F++){if(t.prefForms[n][F].group===C)switch(t.prefForms[n][F].fieldType){case"TXT":subGroupList.push(g.createElement("div",{key:F,className:"row"},g.createElement("div",{className:"col-sm-12"},g.createElement(et,{field:prefForms[n][F],lang:r.prefGlobal.LANGUAGES[l].code,itemState:t,inputChange:o}))));break;case"SLT":var B=[];if(""!=t.prefForms[n][F].value)B=JSON.parse(t.prefForms[n][F].value).options;subGroupList.push(g.createElement("div",{key:F,className:"row"},g.createElement("div",{className:"col-sm-12"},g.createElement(ft,{field:t.prefForms[n][F],lang:r.prefGlobal.LANGUAGES[l].code,itemState:t,inputChange:o,options:B}))));break;case"BLN":var w=[];if(""!=t.prefForms[n][F].value){var k=JSON.parse(t.prefForms[n][F].value);if(null!=k.options)w=k.options;else if(null!=k.referPref){var G=r.prefTexts[k.referPref.prefName][k.referPref.prefItem];if(null!=G&&null!=G.value&&""!=G.value){var U=JSON.parse(G.value);null!=U.options&&(w=U.options)}}}subGroupList.push(g.createElement("div",{key:F,className:"row"},g.createElement("div",{className:"col-sm-12"},g.createElement(Et,{field:t.prefForms[n][F],lang:r.prefGlobal.LANGUAGES[l].code,itemState:t,inputChange:o,options:w}))))}}f.push(g.createElement("div",{key,className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement("div",{className:"panel panel-default"},g.createElement("div",{className:"panel-heading"}," ",_," "),g.createElement("div",{className:"panel-body"},subGroupList)))))}}}return g.createElement("div",{className:"container"},g.createElement("div",{className:"col-lg-12"},g.createElement("h4",{className:"modal-title"},a),m,p,f,g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement("button",{id:t.pageName+"-BUTTON-SAVE",type:"button",className:"btn btn-primary",onClick:function(){return i()}},"Save"),g.createElement("button",{id:t.pageName+"-BUTTON-CANCEL",type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return s()}},"Cancel")))))}function Rt(e){var t=e.itemState,n=e.appPrefs,a=e.onSave,r=e.onCancel,l=e.inputChange;e.onBlur;return g.createElement(Mt,{itemState:t,formName:"MEMBER_PROFILE_FORM",formTitle:"Profile",formGroup:"FORM1",appPrefs:n,onSave:a,onCancel:r,inputChange:l})}function Lt(e){return Lt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Lt(e)}Mt.propTypes={itemState:$().object.isRequired,formName:$().string.isRequired,formTitle:$().string,formGroup:$().string.isRequired,appPrefs:$().object.isRequired,onSave:$().func.isRequired,onCancel:$().func.isRequired,inputChange:$().func.isRequired,onClick:$().func,loadOptions:$().func},Rt.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onSave:$().func,onCancel:$().func,inputChange:$().func,onBlur:$().func};var yt=function(e){var t=e.state,n=e.actions,a=e.dispatch,r=e.field,l=e.event,i=[];if(r===t.pageName+"-SEARCHBY"){if(null!=l)for(var s=0;s<l.length;s++){var o={};o.searchValue=t.searchValue,o.searchColumn=l[s].value,i.push(o)}}else for(var c=0;c<t.searchCriteria.length;c++){var u={};u.searchValue=t.searchValue,u.searchColumn=t.searchCriteria[c].searchColumn,i.push(u)}a(n.search({state:t,searchCriteria:i}))};const Pt={onListLimitChange:function(e){var t=e.state,n=e.actions,a=e.dispatch,r=e.appPrefs,l=(e.fieldName,e.event),i=20;i="Native"===r.codeType?l.nativeEvent.text:l.target.value;var s=parseInt(i);a(n.listLimit({state:t,listLimit:s}))},onPaginationClick:function(e){var t=e.state,n=e.actions,a=e.dispatch,r=e.value;q({level:"TRACE",loc:"BaseContainer::onPaginationClick",msg:"fieldName "+r});var l=t.listStart,i=1,s=1;""!=t.paginationSegment&&(s=t.paginationSegment),l=((i="prev"===r?s-1:"next"===r?s+1:r)-1)*t.listLimit,a(n.list({state:t,listStart:l,paginationSegment:i}))},onSearchChange:function(e){var t=e.state,n=e.actions,a=e.dispatch,r=e.appPrefs,l=e.field,i=e.event;if("keypress"===i.type)"Enter"===i.key&&yt({state:t,actions:n,dispatch:a,field:l,event:i});else{var s="";"NATIVE"===r.codeType?s=i.nativeEvent.text:null!=i&&(s=null!=i.target?i.target.value:i),a(n.searchChange({field:l,value:s}))}},onSearchClick:yt,onOrderBy:function(e){var t=e.state,n=e.actions,a=e.dispatch,r=(e.field,e.event);q({level:"TRACE",loc:"BaseContainer::onOrderBy",msg:"orderby"});var l=[];if(null!=r)for(var i=0;i<r.length;i++){var s={};r[i].label.includes("ASC")?(s.orderColumn=r[i].value,s.orderDir="ASC"):r[i].label.includes("DESC")?(s.orderColumn=r[i].value,s.orderDir="DESC"):s.orderColumn=r[i].value,l.push(s)}else{var o={orderColumn:t.pageName+"_TABLE_NAME",orderDir:"ASC"};l.push(o)}a(n.orderBy({state:t,orderCriteria:l}))},inputChange:function(e){e.state;var t=e.actions,n=e.dispatch,a=e.appPrefs,r=e.type,l=e.field,i=e.value,s=e.event,o="";if(o=null==i||""==i?"Native"===a.codeType?s.nativeEvent.text:null!=s?null!=s.target?s.target.value:s:i:i,"DATE"===r)o=s.toISOString(),n(t.inputChange(l,o));else if("TEXT"===r)n(t.inputChange(l,o));else if("SWITCH"===r)n(t.inputChange(l,o));else if("SELECT"===r||"MULTISELECT"===r){var c=i;"object"===Lt(o)&&null!=o.value&&(c=o.value),n(t.selectChange({field:l,value:c}))}else"SELECTCLICK"===r?n(t.selectClick({field:l,value:i})):"SELECTUPDATE"===r&&n(t.selectListUpdate({field:l,value:o}))},onSave:function(e){var t=e.state,n=e.actions,a=e.dispatch,r=e.appPrefs,l=e.form;q({level:"TRACE",loc:"BaseContainer::onSave",msg:"test"});var i=Ae(t.prefForms[l],t.inputFields,r.prefGlobal.LANGUAGES);i.isValid?a(n.saveItem({state:t})):a(n.setStatus({successes:null,errors:i.errorMap}))},closeModal:function(e){var t=e.actions;(0,e.dispatch)(t.closeDeleteModal())},onCancel:function(e){var t=e.state,n=e.actions,a=e.dispatch;q({level:"TRACE",loc:"BaseContainer::onCancel",msg:"test"}),a(n.cancel({state:t}))},goBack:function(e){var t=e.navigate;q({level:"TRACE",loc:"BaseContainer::goBack",msg:"test"}),t(-1)},onOptionBase:function(e){var t=e.state,n=e.actions,a=e.dispatch,r=e.code,l=e.appPrefs,i=e.item;switch(q({level:"TRACE",loc:"BaseContainer::onOptionBase",msg:" code "+r}),r){case"MODIFY":var s=null;return null!=i&&null!=i.id&&(s=i.id),a(n.modifyItem({state:t,id:s,appPrefs:l})),!0;case"DELETE":return a(n.openDeleteModal({item:i})),!0;case"DELETEFINAL":return a(n.deleteItem({state:t,id:i.id})),!0}},onBlur:function(e){var t=e.state,n=e.actions,a=e.dispatch,r=e.field,l=r.name;if(""!=r.optionalParams){var i=JSON.parse(r.optionalParams);if(null!=i.onBlur)if(null!=i.onBlur.validation&&"matchField"==i.onBlur.validation){if(""!=r.validation){var s=JSON.parse(r.validation);if(null!=s[i.onBlur.validation]&&null!=s[i.onBlur.validation].id)if(t.inputFields[s[i.onBlur.validation].id]==t.inputFields[l]){if(null!=s[i.onBlur.validation].successMsg){var o=t.successes;null==o&&(o={}),o[l]=s[i.onBlur.validation].successMsg,a(n.setStatus({successes:o,errors:null}))}}else if(null!=s[i.onBlur.validation].failMsg){var c=t.errors;null==c&&(c={}),c[l]=s[i.onBlur.validation].failMsg,a(n.setStatus({successes:null,errors:errors.errorMap}))}}}else i.onBlur.func}}};const Dt=function(){var e=(0,J.v9)((function(e){return e.member})),t=(0,J.v9)((function(e){return e.session})),n=((0,J.v9)((function(e){return e.appMenus})),(0,J.v9)((function(e){return e.appPrefs}))),a=(0,J.I0)();return(0,g.useEffect)((function(){a(Ve({lang:t.selected.lang}))}),[]),q({level:"TRACE",loc:"ProfileContainer::render",msg:"Hi there"}),null!=e.item?g.createElement(Rt,{itemState:e,appPrefs:n,onSave:function(){Pt.onSave({state:e,actions:r,dispatch:a,appPrefs:n,form:"MEMBER_PROFILE_FORM"})},onCancel:function(){Pt.onCancel({state:e,actions:r,dispatch:a})},inputChange:function(t,l,i,s){Pt.inputChange({state:e,actions:r,dispatch:a,appPrefs:n,type:t,field:l,value:i,event:s})}}):g.createElement("div",null," Loading... ")};function Ft(e){var t=e.itemState;e.appPrefs,e.inputChange,e.onClick;null!=t&&null!=t.test_field&&t.test_field;(0,je.s0)(),window.location.pathname;var n="Closed";return null!=t&&null!=t.clock&&1==t.clock.isOpen&&(n="Open"),g.createElement("div",null,g.createElement("div",null," Welcome "),g.createElement("div",null," Market is currently: ",n," "))}Ft.propTypes={itemState:$().object.isRequired,appPrefs:$().object,inputChange:$().func,onClick:$().func};const Bt=function(){var e=(0,J.v9)((function(e){return e.dashboard})),t=(0,J.v9)((function(e){return e.appPrefs})),n=(0,J.I0)();return(0,g.useEffect)((function(){n((function(e){var t={requestParams:{}};t.requestParams.action="DASHBOARD",t.requestParams.service="DASHBOARD",t.URI="/api/public/callService";var n=""+t.URI,a=new Headers;a.set("Content-type","application/json"),null!=t.auth&&a.set("Authorization","Basic "+t.auth),fetch(n,{method:"POST",credentials:"same-origin",headers:a,body:JSON.stringify({params:t.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(t){e({type:"DASHBOARD_GET",responseJson:t}),null!=info&&e({type:"SHOW_STATUS",info})})).catch((function(e){}))}))}),[]),null!=e?g.createElement(Ft,{itemState:e,appPrefs:t}):g.createElement("div",null," Loading... ")};function wt(e){e.currentState,e.fields,e.texts,e.labels,e.onChangeLogin,e.onChangeRegistration,e.fieldChangeEvent,e.onForgotPassword,e.fieldBlurEvent,e.buttonClick,e.handleChange,e.changeView;return g.createElement("div",null,g.createElement("div",null," Logout Page "))}wt.propTypes={currentState:$().object,fields:$().object,texts:$().object,labels:$().object,onChangeLogin:$().func,onChangeRegistration:$().func,onForgotPassword:$().func,fieldChangeEvent:$().func,fieldBlurEvent:$().func,buttonClick:$().func,handleChange:$().func,changeView:$().func};const kt=function(){(0,J.v9)((function(e){return e.session})),(0,J.v9)((function(e){return e.appPrefs}));var e=(0,J.I0)();return q({level:"TRACE",loc:"LogoutContainer::mount",msg:"Logging out"}),(0,g.useEffect)((function(){e((function(e){var t={action:"LOGOUT",service:"MEMBER_SVC"},n={};return n.requestParams=t,n.URI="/api/member/callService",W(n).then((function(t){null!=t&&null==t.protocalError&&("SUCCESS"==t.status?e({type:"PROCESS_LOGOUT",responseJson:t}):null!=t.errors&&e({type:"SHOW_STATUS_ERROR",errors:t.errors}))})).catch((function(e){throw e}))}))}),[]),g.createElement(wt,null)};function Gt(e){return g.createElement("div",null,e.children,g.createElement("div",{id:"MemberArea"}))}function Ut(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"CRYPTO_INPUT_CHANGE",params:a})}}function jt(e){var t=e.itemState,n=(e.appPrefs,e.inputChange),a=e.onClick,r="";null!=t&&null!=t.test_field&&(r=t.test_field);(0,je.s0)(),window.location.pathname;var l=[];if(null!=t&&null!=t.cryptoBars&&t.cryptoBars.length>0)for(var i=0;i<t.cryptoBars.length;i++){var s=[],o=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"short",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(t.cryptoBars[i].timestamp).toDate());s.push(g.createElement("td",{key:"TIMESTAMP"},o)),s.push(g.createElement("td",{key:"OPEN"},t.cryptoBars[i].open)),s.push(g.createElement("td",{key:"HIGH"},t.cryptoBars[i].high)),s.push(g.createElement("td",{key:"LOW"},t.cryptoBars[i].low)),s.push(g.createElement("td",{key:"CLOSE"},t.cryptoBars[i].close)),s.push(g.createElement("td",{key:"TRADECOUNT"},t.cryptoBars[i].tradecount)),s.push(g.createElement("td",{key:"VWAP"},t.cryptoBars[i].vwap)),s.push(g.createElement("td",{key:"VOLUME"},t.cryptoBars[i].volume)),l.push(g.createElement("tr",{key:i},s))}else l.push(g.createElement("tr",{key:"1"},g.createElement("td",{id:"EMPTY"},"Empty")));var c=g.createElement("tbody",null,l),u=[];if(null!=t&&null!=t.xbbo){var m=[],p=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"short",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(t.xbbo.timestamp).toDate());m.push(g.createElement("td",{key:"TIMESTAMP"},p)),m.push(g.createElement("td",{key:"PRICE"},t.xbbo.askExchange)),m.push(g.createElement("td",{key:"TRADEID"},t.xbbo.askPrice)),m.push(g.createElement("td",{key:"EXCHANGE"},t.xbbo.askSize)),m.push(g.createElement("td",{key:"SIZE"},t.xbbo.bidExchange)),m.push(g.createElement("td",{key:"CONDITIONS"},t.xbbo.bidPrice)),m.push(g.createElement("td",{key:"TAPE"},t.xbbo.bidSize)),u.push(g.createElement("tr",{key:"TRADE"},m))}else u.push(g.createElement("tr",{key:"1"},g.createElement("td",{id:"EMPTY"},"Empty")));var f=g.createElement("tbody",null,u);return g.createElement("div",null,g.createElement("div",null," Crypto "),g.createElement("div",null,g.createElement("label",{htmlFor:"TestField"},"Crypto Name"),g.createElement("input",{type:"Text",id:"TestField",name:"TestField",className:"form-control",autoComplete:"new-password",autoCapitalize:"off",onChange:n,value:r})),g.createElement("div",null,g.createElement("input",{type:"submit",name:"TestButton",id:"TestButton",className:"form-control",value:"Get Crypto",onClick:a})),g.createElement("div",null," Crypto Bars"),g.createElement("table",{className:"table table-striped"},g.createElement("thead",null,g.createElement("tr",null,g.createElement("th",{scope:"col"},"TimeStamp"),g.createElement("th",{scope:"col"},"Open"),g.createElement("th",{scope:"col"},"High"),g.createElement("th",{scope:"col"},"Low"),g.createElement("th",{scope:"col"},"Close"),g.createElement("th",{scope:"col"},"Trade Count"),g.createElement("th",{scope:"col"},"VWap"),g.createElement("th",{scope:"col"},"Volume"))),c),g.createElement("div",null," Best Bid"),g.createElement("table",{className:"table table-striped"},g.createElement("thead",null,g.createElement("tr",null,g.createElement("th",{scope:"col"},"TimeStamp"),g.createElement("th",{scope:"col"},"Ask Exchange"),g.createElement("th",{scope:"col"},"Ask Price"),g.createElement("th",{scope:"col"},"Ask Size"),g.createElement("th",{scope:"col"},"Bid Exchange"),g.createElement("th",{scope:"col"},"Bid Price"),g.createElement("th",{scope:"col"},"Bid Size"))),f))}function xt(){var e=(0,J.v9)((function(e){return e.crypto})),t=(0,J.v9)((function(e){return e.appPrefs})),n=(0,J.I0)();return null!=e?g.createElement(jt,{itemState:e,appPrefs:t,inputChange:function(e){return t="TEXT",a="test_field",l=e,i="",i=null!=(r="")&&""!=r||null==l?r:null!=l.target?l.target.value:l,void("DATE"===t?(i=l.toISOString(),n(Ut(a,i))):("TEXT"===t||"SWITCH"===t)&&n(Ut(a,i)));var t,a,r,l,i},onClick:function(){var t;n((t=e.test_field,function(e){var n={requestParams:{}};n.requestParams.action="CRYPTO_LIST",n.requestParams.cryptoName=t,n.URI="/api/public/callService";var a=""+n.URI,r=new Headers;r.set("Content-type","application/json"),null!=n.auth&&r.set("Authorization","Basic "+n.auth),fetch(a,{method:"POST",credentials:"same-origin",headers:r,body:JSON.stringify({params:n.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(t){e({type:"CRYPTO_GET_LIST",responseJson:t}),null!=info&&e({type:"SHOW_STATUS",info})})).catch((function(e){}))}))}}):g.createElement("div",null," Loading... ")}Gt.propTypes={children:$().array},jt.propTypes={itemState:$().object.isRequired,appPrefs:$().object,inputChange:$().func,onClick:$().func},xt.propTypes={appPrefs:$().object,actions:$().object,stocksState:$().object,session:$().object};$().object.isRequired,$().object.isRequired,$().object,$().func,$().func,$().func;function Vt(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"TRADE_INPUT_CHANGE",params:a})}}function Ht(){return function(e){var t={requestParams:{}};t.requestParams.service="TA_TRADE_SVC",t.requestParams.action="LIST",t.URI="/api/member/callService";var n=""+t.URI,a=new Headers;a.set("Content-type","application/json"),null!=t.auth&&a.set("Authorization","Basic "+t.auth),fetch(n,{method:"POST",credentials:"same-origin",headers:a,body:JSON.stringify({params:t.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(t){e({type:"TRADE_LIST",responseJson:t}),null!=info&&e({type:"SHOW_STATUS",info})})).catch((function(e){}))}}function Jt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var a,r,l=[],i=!0,s=!1;try{for(n=n.call(e);!(i=(a=n.next()).done)&&(l.push(a.value),!t||l.length!==t);i=!0);}catch(e){s=!0,r=e}finally{try{i||null==n.return||n.return()}finally{if(s)throw r}}return l}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return Yt(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Yt(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Yt(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function qt(e){var t=e.itemState,n=(e.appPrefs,e.onOption),a=[];null!==t&&void 0!==t.items&&t.items.length>0?function(){for(var e=g.createElement("i",{className:"spinner-border spinner-border-sm",title:"Loading..."}),r=function(r){var l=t.items[r],i=Jt((0,g.useState)(!1),2),s=i[0],o=i[1],c=Jt((0,g.useState)(!1),2),u=c[0],m=c[1],p=[];p.push(g.createElement("td",{key:"NAME"},l.name)),p.push(g.createElement("td",{key:"BUYCONDITION"},l.rawBuyCondition)),p.push(g.createElement("td",{key:"SELLCONDITION"},l.rawSellCondition)),p.push(g.createElement("td",{key:"PROFIT"},Math.round((l.totalValue-l.budget)/l.budget*1e3)/10,"%")),p.push(g.createElement("td",{key:"CONTROL"},0===l.firstCheck?0:Math.round((l.lastCheckPrice-l.firstCheckPrice)/l.firstCheckPrice*1e3)/10,"%")),p.push(g.createElement("td",{key:"STATUS"},l.status)),p.push(g.createElement("td",{key:"MODIFY"},function(){if("ERROR"===l.status)return g.createElement("i",{className:"fa fas fa-exclamation-triangle",title:"Error",onClick:function(){alert(l.statusMessage)}})}()," ",g.createElement("i",{className:"fa fa-edit fa-1",title:"Modify",onClick:function(){return n("MODIFY",l)}})," ",g.createElement("i",{className:"fa fa-clipboard fa-1",title:"Historical_Analysis",onClick:function(){return n("HISTORICAL_ANALYSIS_VIEW",l)}})," ",u?e:g.createElement("i",{className:"fa fa-solid fa-bars",title:"Details",onClick:function(){n("TRADE_DETAIL_VIEW",l),m(!0)}})," ",s?e:g.createElement("i",{className:"fa fas fa-chart-bar",title:"Graph",onClick:function(){n("TRADE_GRAPH_VIEW",l),o(!0)}})," ",g.createElement("i",{className:"fa fa-trash fa-1",title:"Delete",onClick:function(){return n("DELETE",l)}}))),a.push(g.createElement("tr",{key:r},p))},l=0;l<t.items.length;l++)r(l)}():a.push(g.createElement("tr",{key:"1"},g.createElement("td",{id:"EMPTY"},"Empty")));var r=g.createElement("tbody",null,a);return g.createElement("div",{className:"container"},g.createElement("div",{className:"row"},g.createElement("p",{className:"text-center fs-3 fw-bold"}," Automated Trades ")),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm-9"}),g.createElement("div",{className:"col-sm-3"},g.createElement("i",{className:"fa fa-plus-square fa-1 float-end",title:"Modify",onClick:function(){return n("MODIFY")}})),g.createElement("table",{className:"table table-striped"},g.createElement("thead",null,g.createElement("tr",null,g.createElement("th",{scope:"col"},"Name"),g.createElement("th",{scope:"col"},"Buy Condition"),g.createElement("th",{scope:"col"},"Sell Condition"),g.createElement("th",{scope:"col"},"Profit"),g.createElement("th",{scope:"col"},"Control"),g.createElement("th",{scope:"col"},"Status"),g.createElement("th",{scope:"col"}))),r)))}function Wt(e){var t=e.itemState,n=(e.appPrefs,e.onOption),a=[];if(null!=t&&null!=t.item.details&&t.item.details.length>0){t.item.details.sort((function(e,t){return e.placedAt<t.placedAt?1:e.placedAt>t.placedAt?-1:0}));for(var r=0;r<t.item.details.length;r++){var l=t.item.details[r],i=[];i.push(g.createElement("td",{key:"ORDERSIDE"},l.orderSide)),i.push(g.createElement("td",{key:"DOLLARAMOUNT"},l.dollarAmount)),i.push(g.createElement("td",{key:"SHAREAMOUNT"},l.shareAmount)),i.push(g.createElement("td",{key:"PLACEDAT"},Ct()(new Date(1e3*l.placedAt)).format("MMM Do, YYYY, h:mm:ss a"))),i.push(g.createElement("td",{key:"FILLEDAT"},Ct()(new Date(1e3*l.filledAt)).format("MMM Do, YYYY, h:mm:ss a"))),i.push(g.createElement("td",{key:"TOTALVALUE"},l.totalValue)),i.push(g.createElement("td",{key:"AVAILABLEBUDGET"},l.availableBudget)),i.push(g.createElement("td",{key:"SHARESHELD"},l.sharesHeld)),i.push(g.createElement("td",{key:"FILLPRICE"},l.assetPrice)),i.push(g.createElement("td",{key:"ORDERCONDITION"},l.rawOrderCondition)),a.push(g.createElement("tr",{key:r},i))}}else a.push(g.createElement("tr",{key:"1"},g.createElement("td",{id:"EMPTY"},"Empty")));var s=g.createElement("tbody",null,a);return g.createElement("div",{className:"container"},g.createElement("div",{className:"row"},g.createElement("p",{className:"text-center fs-3 fw-bold"}," Trade Details ")),g.createElement("button",{onClick:function(){return n("CANCEL")}},"Back"),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm-3"}),g.createElement("table",{className:"table table-striped"},g.createElement("thead",null,g.createElement("tr",null,g.createElement("th",{scope:"col"},"Order Side"),g.createElement("th",{scope:"col"},"Dollar Amount"),g.createElement("th",{scope:"col"},"Share Amount"),g.createElement("th",{scope:"col"},"Placed At"),g.createElement("th",{scope:"col"},"Filled At"),g.createElement("th",{scope:"col"},"Total Value"),g.createElement("th",{scope:"col"},"Available Budget"),g.createElement("th",{scope:"col"},"Shares Held"),g.createElement("th",{scope:"col"},"Fill Price"),g.createElement("th",{scope:"col"},"Order Condition"))),s)))}function zt(e){var t=e.itemState,n=e.inputChange,a=e.onOption,r=0,l="",i="",s=0,o="",c="",u="Not Running",m=0,p=0,f=0,d=0,E="Default",A="Default",S="",v="DAY",C="",h="";null!=t.item&&(null!=t.item.id&&(r=t.item.id),null!=t.item.name&&(l=t.item.name),null!=t.item.symbol&&(i=t.item.symbol),null!=t.item.trailingStopAmount&&(m=t.item.trailingStopAmount),null!=t.item.profitLimitAmount&&(p=t.item.profitLimitAmount),null!=t.item.iterations&&(f=t.item.iterations),null!=t.item.status&&(u=t.item.status),null!=t.item.budget&&(d=t.item.budget),null!=t.item.orderType&&(A=t.item.orderType),null!=t.item.orderSide&&(E=t.item.orderSide),null!=t.item.currencyType&&(S=t.item.currencyType),null!=t.item.currencyAmount&&(s=t.item.currencyAmount),null!=t.item.profitLimitType&&(c=t.item.profitLimitType),null!=t.item.trailingStopType&&(o=t.item.trailingStopType),null!=t.item.evaluationPeriod&&(v=t.item.evaluationPeriod),null!=t.item.rawBuyCondition&&(C=t.item.rawBuyCondition),null!=t.item.rawSellCondition&&(h=t.item.rawSellCondition));var _=function(e){switch(e){case"Dollars":return"Shares";case"Shares":return"Dollars";case"Profit Limit Price":return"Profit Limit Percent";case"Profit Limit Percent":return"Profit Limit Price";case"Trailing Stop Price":return"Trailing Stop Percent";case"Trailing Stop Percent":return"Trailing Stop Price";default:return""}},I=function(e){return E===e?"true":"false"};function N(e){return g.createElement("li",{className:"nav-item",role:"presentation"},g.createElement("button",{className:(t=e.value,E===t?"nav-link active":"nav-link"),id:"orderSide","data-mdb-toggle":"pill",role:"tab","aria-selected":I(e.value),value:e.value,onClick:n},e.value));var t}for(var O=[{label:"Running",value:"Running"},{label:"Not Running",value:"Not Running"}],T=[],b=0;b<O.length;b++){var M="";null==O[b].label&&null!=O[b].defaultText?M=O[b].defaultText:null!=O[b].label&&(M=O[b].label),T.push(g.createElement("option",{key:b,value:O[b].value},M))}for(var R=[{label:"Market",value:"Market"},{label:"Trailing Stop",value:"Trailing Stop"},{label:"Profit Limit",value:"Profit Limit"},{label:"Trailing Stop & Profit Limit",value:"Trailing Stop & Profit Limit"}],L=[],y=0;y<R.length;y++){var P="";null==R[y].label&&null!=R[y].defaultText?P=R[y].defaultText:null!=R[y].label&&(P=R[y].label),L.push(g.createElement("option",{key:y,value:R[y].value},P))}for(var D=[{label:"DAY",value:"DAY"},{label:"MINUTE",value:"MINUTE"}],F=[],B=0;B<D.length;B++){var w="";null==D[B].label&&null!=D[B].defaultText?w=D[B].defaultText:null!=D[B].label&&(w=D[B].label),F.push(g.createElement("option",{key:B,value:D[B].value},w))}var k="Add Item";return"MODIFY"==t.view&&(k="Modify Item"),g.createElement("div",{className:"container"},g.createElement("div",{className:"row"},g.createElement("div",null,k)),g.createElement("div",{className:"row"},g.createElement("ul",{className:"nav nav-pills nav-fill mb-3",id:"tabs",role:"tablist"},g.createElement(N,{value:"Buy"}),g.createElement(N,{value:"Sell"}),g.createElement(N,{value:"Bot"})),g.createElement("div",null,g.createElement("label",{htmlFor:"Name"},"Name"),g.createElement("input",{type:"Text",id:"name",name:"name",className:"form-control",autoCapitalize:"off",onChange:n,value:l})),g.createElement("div",null,g.createElement("label",{htmlFor:"Symbol"},"Symbol"),g.createElement("input",{type:"Text",id:"symbol",name:"symbol",className:"form-control",autoCapitalize:"off",onChange:n,value:i})),g.createElement("div",null,g.createElement("label",{htmlFor:"OrderType"},"Order Type"),g.createElement("select",{id:"orderType",name:"orderType",value:A,className:"form-control",onChange:n},L)),g.createElement("div",null,g.createElement("label",{htmlFor:"EvaluationPeriod"},"Evaluation Period"),g.createElement("select",{id:"evaluationPeriod",name:"evaluationPeriod",value:v,className:"form-control",onChange:n},F)),g.createElement("div",null,g.createElement("button",{onClick:n,id:"currencyType",value:_(S)},S),g.createElement("input",{type:"Number",id:"currencyAmount",name:"currencyAmount",className:"form-control",autoCapitalize:"off",onChange:n,value:s})),function(){if(A.includes("Profit Limit"))return g.createElement("div",null,g.createElement("button",{onClick:n,id:"profitLimitType",value:_(c)},c),g.createElement("input",{type:"Number",id:"profitLimitAmount",name:"profitLimitAmount",className:"form-control",autoCapitalize:"off",onChange:n,value:p}))}(),function(){if(A.includes("Trailing Stop"))return g.createElement("div",null,g.createElement("button",{onClick:n,id:"trailingStopType",value:_(o)},o),g.createElement("input",{type:"Number",id:"trailingStopAmount",name:"trailingStopAmount",className:"form-control",autoCapitalize:"off",onChange:n,value:m}))}(),function(){if("Buy"===E||"Sell"===E)return g.createElement("div",null,g.createElement("label",{htmlFor:"Iterations"},"Iterations"),g.createElement("input",{id:"iterations",name:"iterations",value:f,className:"form-control",onChange:n}))}(),function(){if("Bot"===E)return g.createElement("div",null,g.createElement("label",{htmlFor:"Budget"},"Budget"),g.createElement("input",{id:"budget",name:"budget",value:d,className:"form-control",onChange:n}))}(),function(){if("Buy"===E||"Bot"===E)return g.createElement("div",null,g.createElement("i",{className:"fa fa-plus-square fa-1 float-start",title:"Select Algorithm",onClick:function(){a("SELECT_VIEW","rawBuyCondition")}}),g.createElement("label",{htmlFor:"BuyCondition"},"Buy Condition"),g.createElement("input",{type:"Text",id:"rawBuyCondition",name:"buyCondition",className:"form-control",autoCapitalize:"off",onChange:n,value:C}))}(),function(){if("Sell"===E||"Bot"===E)return g.createElement("div",null,g.createElement("i",{className:"fa fa-plus-square fa-1 float-start",title:"Select Algorithm",onClick:function(){a("SELECT_VIEW","rawSellCondition")}}),g.createElement("label",{htmlFor:"SellCondition"},"Sell Condition"),g.createElement("input",{type:"Text",id:"rawSellCondition",name:"sellCondition",className:"form-control",autoCapitalize:"off",onChange:n,value:h}))}(),g.createElement("div",null,g.createElement("label",{htmlFor:"Status"},"Status"),g.createElement("select",{id:"status",name:"status",value:u,className:"form-control",onChange:n},T))),g.createElement("br",null),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm"},g.createElement("input",{type:"submit",name:"SaveButton",id:"SaveButton",className:"form-control btn-primary",value:"Save",onClick:function(){return a("SAVE")}})),function(){if(r>0)return g.createElement("div",null,g.createElement("input",{type:"submit",name:"ResetButton",id:"ResetButton",className:"form-control btn-primary",value:"Reset",onClick:function(){return a("RESET",t.item)}}))}(),g.createElement("div",{className:"col-sm"},g.createElement("input",{type:"submit",name:"CancelButton",id:"CancelButton",className:"form-control",value:"Cancel",onClick:function(){return a("CANCEL")}}))))}function Kt(e){var t=e.itemState,n=(e.appPrefs,e.inputChange),a=e.onOption,r=1641016800,l=1641016800;return null!=t.item&&(null!=t.item.startTime&&(r=t.item.startTime),null!=t.item.endTime&&(l=t.item.endTime)),g.createElement("div",{className:"container"},g.createElement("div",{className:"row"},g.createElement("div",null,"Historical Analysis")),g.createElement("div",{className:"row"},g.createElement("div",null,g.createElement("label",null,"Start Date"),g.createElement("input",{type:"date",min:"2022-01-01",max:"2022-12-31",id:"startTime",name:"startTime",className:"startTime",onChange:n,value:Ct()(new Date(1e3*r)).format("YYYY-MM-DD")}),g.createElement("div",{id:"End-Date"},g.createElement("label",null,"End Date"),g.createElement("input",{type:"date",min:"2022-01-01",max:"2022-12-31",id:"endTime",name:"endTime",className:"endTime",onChange:n,value:Ct()(new Date(1e3*l)).format("YYYY-MM-DD")})))),g.createElement("br",null),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm"},g.createElement("input",{type:"submit",name:"HistoricalAnalysisButton",id:"HistoricalAnalysisButton",className:"form-control btn-primary",value:"Historically Analyze",onClick:function(){a("HISTORICALLY_ANALYZE_SWING_TRADE",t.item)}})),g.createElement("div",{className:"col-sm"},g.createElement("input",{type:"submit",name:"CancelButton",id:"CancelButton",className:"form-control",value:"Cancel",onClick:function(){return a("CANCEL")}}))))}n(1877);var Xt=n(5376);function Zt(e){var t=e.itemState,n=e.onOption,a=[],r=[],l=[],i="";return null!=t&&null!=t.item&&(null!=t.item.symbolData&&t.item.symbolData.forEach((function(e){null!=e[0]&&null!=e[1]&&r.push({x:e[0],y:e[1]})})),i=t.item.totalValue>t.item.budget?"rgb(170, 250, 167)":"rgb(250, 150, 157)",null!=t.item.details&&t.item.details.forEach((function(e){null!=e.assetPrice&&null!=e.filledAt&&("BUY"==e.orderSide&&l.push("rgb(34, 179, 29)"),"SELL"==e.orderSide&&l.push("rgb(237, 14, 22)"),a.push({x:e.filledAt,y:e.assetPrice}))}))),g.createElement("div",null,g.createElement("button",{onClick:function(){return n("CANCEL")}},"Back"),g.createElement(Xt.x1,{data:{datasets:[{label:"Symbol History",type:"line",data:r.sort((function(e,t){return e.x>t.x?1:e.x<t.x?-1:0})),xAxisID:"Time",yAxisID:"Price",borderColor:i,spanGaps:!0},{label:"Trade History",type:"scatter",data:a,xAxisID:"Time",yAxisID:"Price",pointBackgroundColor:l}]},options:{animation:!1,parsing:!1,datasets:{scatter:{pointRadius:5},line:{pointRadius:0}},scales:{Time:{axis:"x",type:"linear",display:"auto",title:{display:!0,text:"Time"}},Price:{axis:"y",type:"linear",display:"auto",title:{display:!0,text:"Price"}}}}}))}function $t(e){var t=e.onOption,n=e.itemState,a=(e.inputChange,[]);if(null!=n&&null!=n.items&&n.items.length>0)for(var r=function(e){var r=[];r.push(g.createElement("td",{key:"NAME"},n.items[e].name)),r.push(g.createElement("td",{key:"KEY"},n.items[e].technicalIndicatorKey)),r.push(g.createElement("td",{key:"EVALPERIOD"},n.items[e].evaluationPeriod)),r.push(g.createElement("td",{key:"MODIFY"},g.createElement("i",{className:"fa fa-edit fa-1",title:"Modify",onClick:function(){return t("MODIFY_VIEW",n.items[e])}})," ",g.createElement("i",{className:"fa fa-solid fa-bars",title:"SymbolView",onClick:function(){return t("DETAIL_VIEW",n.items[e])}})," ",g.createElement("i",{className:"fa fa-solid fa-bars",title:"SymbolView",onClick:function(){return t("SNAPSHOT_VIEW",n.items[e])}})," ",g.createElement("i",{className:"fa fa-trash fa-1",title:"Delete",onClick:function(){return t("DELETE",n.items[e])}}))),a.push(g.createElement("tr",{key:e},r))},l=0;l<n.items.length;l++)r(l);else a.push(g.createElement("tr",{key:"1"},g.createElement("td",{id:"EMPTY"},"Empty")));var i=g.createElement("tbody",null,a);return g.createElement("div",{className:"container"},g.createElement("div",{className:"row"},g.createElement("p",{className:"text-center fs-3 fw-bold"}," Algorithm Analysis ")),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm-9"}),g.createElement("div",{className:"col-sm-3"},g.createElement("i",{className:"fa fa-plus-square fa-1 float-end",title:"Modify",onClick:function(){return t("MODIFY_VIEW",null)}})),g.createElement("table",{className:"table table-striped"},g.createElement("thead",null,g.createElement("tr",null,g.createElement("th",{scope:"col"},"Name"),g.createElement("th",{scope:"col"},"Key"),g.createElement("th",{scope:"col"},"Evaluation Period"),g.createElement("th",{scope:"col"}))),i)))}function Qt(e){var t=e.itemState,n=e.onOption,a=e.selectInputChange,r=[];null!=t&&null!=t.item.customTechnicalIndicators&&t.item.customTechnicalIndicators.length>0?function(){for(var e=t.field,n=t.item[e],l=function(l){var i=[],s=t.item.customTechnicalIndicators[l];i.push(g.createElement("td",{key:"NAME"},s.name)),i.push(g.createElement("td",{key:"KEY"},s.technicalIndicatorKey)),i.push(g.createElement("td",{key:"EVALPERIOD"},s.evaluationPeriod)),i.push(g.createElement("td",{key:"SELECT"},g.createElement("i",{className:"fa fa-plus-square fa-1 float-start",title:"Select Algorithm",onClick:function(){a(e,n+" "+s.name+" ")}}))),r.push(g.createElement("tr",{key:l},i))},i=0;i<t.item.customTechnicalIndicators.length;i++)l(i)}():r.push(g.createElement("tr",{key:"1"},g.createElement("td",{id:"EMPTY"},"Empty")));var l=g.createElement("tbody",null,r);return g.createElement("div",{className:"container"},g.createElement("div",{className:"row"},g.createElement("p",{className:"text-center fs-3 fw-bold"}," Algorithm Analysis ")),g.createElement("button",{onClick:function(){return n("MODIFY",t.item)}},"Back"),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm-9"}),g.createElement("div",{className:"col-sm-3"}),g.createElement("table",{className:"table table-striped"},g.createElement("thead",null,g.createElement("tr",null,g.createElement("th",{scope:"col"},"Name"),g.createElement("th",{scope:"col"},"Key"),g.createElement("th",{scope:"col"},"Evaluation Period"),g.createElement("th",{scope:"col"}))),l)))}const en=function(){var e=(0,J.v9)((function(e){return e.trade})),t=(0,J.v9)((function(e){return e.appPrefs})),n=(0,J.I0)();function a(t,a){switch(t){case"MODIFY":return n(function(e){return function(t){t({type:"TRADE_MODIFY_ITEM",action:e})}}(a)),!0;case"DELETE":return n(function(e){return function(t){var n={requestParams:{}};n.requestParams.service="TA_TRADE_SVC",n.requestParams.action="DELETE",n.requestParams.itemId=e.id,n.URI="/api/member/callService";var a=""+n.URI,r=new Headers;r.set("Content-type","application/json"),null!=n.auth&&r.set("Authorization","Basic "+n.auth),fetch(a,{method:"POST",credentials:"same-origin",headers:r,body:JSON.stringify({params:n.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(e){t(Ht()),null!=info&&t({type:"SHOW_STATUS",info})})).catch((function(e){}))}}(a)),!0;case"RESET":return n(function(e){return function(t){var n={requestParams:{}};n.requestParams.action="RESET_TRADE",n.requestParams.service="TA_TRADE_SVC",n.requestParams.itemId=e.id,n.URI="/api/member/callService";var a=""+n.URI,r=new Headers;r.set("Content-type","application/json"),null!=n.auth&&r.set("Authorization","Basic "+n.auth),fetch(a,{method:"POST",credentials:"same-origin",headers:r,body:JSON.stringify({params:n.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(e){null!=e&&null!=e.status&&"SUCCESS"==e.status?t(Ht()):null!=e&&null!=e.status&&(alert(e.status),t({type:"SHOW_STATUS",error:e.errors}))})).catch((function(e){}))}}(a)),!0;case"SAVE":return null!=e.item&&n(function(e){return function(t){var n={requestParams:{}};n.requestParams.action="SAVE",n.requestParams.service="TA_TRADE_SVC",n.requestParams.item=e,n.URI="/api/member/callService";var a=""+n.URI,r=new Headers;r.set("Content-type","application/json"),null!=n.auth&&r.set("Authorization","Basic "+n.auth),fetch(a,{method:"POST",credentials:"same-origin",headers:r,body:JSON.stringify({params:n.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(e){null!=e&&null!=e.status&&"SUCCESS"==e.status?t(Ht()):null!=e&&null!=e.status&&(alert(e.status),t({type:"SHOW_STATUS",error:e.errors}))})).catch((function(e){}))}}(e.item)),!0;case"HISTORICALLY_ANALYZE_DAY_TRADE":return n(function(e){return function(t){var n={requestParams:{}};n.requestParams.action="HISTORICALLY_ANALYZE_DAY_TRADE",n.requestParams.service="TA_HISTORICALLY_ANALYZE_SVC",n.requestParams.item=e,n.URI="/api/member/callService";var a=""+n.URI,r=new Headers;r.set("Content-type","application/json"),null!=n.auth&&r.set("Authorization","Basic "+n.auth),fetch(a,{method:"POST",credentials:"same-origin",headers:r,body:JSON.stringify({params:n.requestParams})}).then((function(e){if(!(e.status>=400))return e.json()})).then((function(){t(Ht())})).catch((function(){}))}}(a)),!0;case"HISTORICALLY_ANALYZE_SWING_TRADE":return null!=e.item&&n(function(e){return function(t){var n={requestParams:{}};n.requestParams.action="HISTORICAL_ANALYSIS",n.requestParams.service="TA_TRADE_SVC",n.requestParams.item=e,n.URI="/api/member/callService";var a=""+n.URI,r=new Headers;r.set("Content-type","application/json"),null!=n.auth&&r.set("Authorization","Basic "+n.auth),fetch(a,{method:"POST",credentials:"same-origin",headers:r,body:JSON.stringify({params:n.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(e){null!=e&&null!=e.status&&"SUCCESS"==e.status?t(Ht()):null!=e&&null!=e.status&&(alert(e.status),t({type:"SHOW_STATUS",error:e.errors}))})).catch((function(e){}))}}(e.item)),!0;case"HISTORICAL_ANALYSIS_VIEW":return n(function(e){return function(t){t({type:"TRADE_HISTORICAL_ANALYSIS_VIEW",action:e})}}(a)),!0;case"TRADE_DETAIL_VIEW":return n(function(e){return function(t){var n={requestParams:{}};n.requestParams.action="GET_TRADE_DETAILS",n.requestParams.service="TA_TRADE_SVC",n.requestParams.itemId=e.id,n.URI="/api/member/callService";var a=""+n.URI,r=new Headers;r.set("Content-type","application/json"),null!=n.auth&&r.set("Authorization","Basic "+n.auth),fetch(a,{method:"POST",credentials:"same-origin",headers:r,body:JSON.stringify({params:n.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(n){null!=n&&null!=n.status&&"SUCCESS"==n.status?(t({type:"TRADE_DETAIL_VIEW",action:e}),t({type:"INITIALIZE_TRADE_DETAILS",action:n})):null!=n&&null!=n.status&&(alert(n.status),t({type:"SHOW_STATUS",error:n.errors}))})).catch((function(e){}))}}(a)),!0;case"TRADE_GRAPH_VIEW":return n(function(e){return function(t){var n={requestParams:{}};n.requestParams.action="GET_GRAPH_DATA",n.requestParams.service="TA_TRADE_SVC",n.requestParams.itemId=e.id,n.URI="/api/member/callService";var a=""+n.URI,r=new Headers;r.set("Content-type","application/json"),null!=n.auth&&r.set("Authorization","Basic "+n.auth),fetch(a,{method:"POST",credentials:"same-origin",headers:r,body:JSON.stringify({params:n.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(n){null!=n&&null!=n.status&&"SUCCESS"==n.status?(t({type:"TRADE_GRAPH_VIEW",action:e}),t({type:"INITIALIZE_TRADE_DETAILS",action:n}),t({type:"INITIALIZE_TRADE_SYMBOL_DATA",action:n})):null!=n&&null!=n.status&&(alert(n.status),t({type:"SHOW_STATUS",error:n.errors}))})).catch((function(e){}))}}(a)),!0;case"SELECT_VIEW":return n((r=a,function(e){e({type:"TRADE_SELECT_VIEW",action:r})})),n((function(e){var t={requestParams:{}};t.requestParams.service="TA_CACHE_SVC",t.requestParams.action="LIST",t.URI="/api/member/callService";var n=""+t.URI,a=new Headers;a.set("Content-type","application/json"),null!=t.auth&&a.set("Authorization","Basic "+t.auth),fetch(n,{method:"POST",credentials:"same-origin",headers:a,body:JSON.stringify({params:t.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(t){var n=t.params.items;e({type:"TRADE_CUSTOM_TECHNICAL_INDICATORS",payload:n}),null!=info&&e({type:"SHOW_STATUS",info})})).catch((function(e){}))})),!0;case"CANCEL":return n((function(e){e({type:"TRADE_CANCEL_ITEM",action:{}})})),!0}var r}function r(e){var t="";if(null!=e){t=null!=e.target?"Number"===e.target.type?parseInt(e.target.value,0):"date"==e.target.type?parseInt(e.target.valueAsNumber/1e3):e.target.value:e;var a=e.target.id;"operand-button"===e.target.id&&(a="operand"),n(Vt(a,t))}}if((0,g.useEffect)((function(){n(Ht())}),[]),null==e)return g.createElement("div",null," Loading... ");switch(e.view){case"SELECT":return g.createElement(Qt,{itemState:e,selectInputChange:function(e,t){n(function(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"TRADE_SELECT_INPUT_CHANGE",params:a})}}(e,t))},onOption:a});case"ADD":case"MODIFY":return g.createElement(zt,{itemState:e,appPrefs:t,inputChange:r,onOption:a});case"HISTORICAL_ANALYSIS":return g.createElement(Kt,{itemState:e,appPrefs:t,inputChange:r,onOption:a});case"TRADE_DETAIL":return g.createElement(Wt,{itemState:e,appPrefs:t,inputChange:r,onOption:a});case"TRADE_GRAPH":return g.createElement(Zt,{itemState:e,appPrefs:t,onOption:a});default:return g.createElement(qt,{itemState:e,appPrefs:t,onOption:a})}};function tn(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"DATABASE_INPUT_CHANGE",params:a})}}function nn(){return function(e){var t={requestParams:{}};t.requestParams.service="TA_CACHE_SVC",t.requestParams.action="LIST",t.URI="/api/member/callService";var n=""+t.URI,a=new Headers;a.set("Content-type","application/json"),null!=t.auth&&a.set("Authorization","Basic "+t.auth),fetch(n,{method:"POST",credentials:"same-origin",headers:a,body:JSON.stringify({params:t.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(t){e({type:"DATABASE_LIST",responseJson:t}),null!=info&&e({type:"SHOW_STATUS",info})})).catch((function(e){}))}}function an(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var a,r,l=[],i=!0,s=!1;try{for(n=n.call(e);!(i=(a=n.next()).done)&&(l.push(a.value),!t||l.length!==t);i=!0);}catch(e){s=!0,r=e}finally{try{i||null==n.return||n.return()}finally{if(s)throw r}}return l}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return rn(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return rn(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function rn(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function ln(e){var t=e.onOption,n=e.itemState,a=(e.inputChange,[]);if(null!=n&&null!=n.item&&null!=n.item.technicalIndicators&&n.item.technicalIndicators.length>0){var r=n.item.technicalIndicators.slice();r.sort((function(e,t){var n=e.symbol,a=t.symbol;return n.localeCompare(a)}));for(var l=function(e){var n=r[e];if(null==n)return"continue";var l,i=an((0,g.useState)(n.updating),2),s=i[0],o=i[1],c=[];c.push(g.createElement("td",{key:"SYMBOL"},n.symbol)),c.push(g.createElement("td",{key:"FIRST_CHECK"},Ct()(new Date(1e3*n.firstCheck)).format("MMM Do, YYYY"))),c.push(g.createElement("td",{key:"LAST_CHECK"},Ct()(new Date(1e3*n.lastCheck)).format("MMM Do, YYYY"))),c.push(g.createElement("td",{key:"FLASH_PERCENT"},Math.round(n.flashed/n.checked*1e3)/10)),c.push(g.createElement("td",{key:"AVG_SUCCESS_PERCENT"},(l=0,n.effectiveDetails.forEach((function(e){l+=e.successPercent})),""+Math.round(l/n.effectiveDetails.length*10)/10))),c.push(g.createElement("td",{key:"GRAPH_VIEW"},g.createElement("i",{className:"fa fas fa-chart-bar",title:"DetailView",onClick:function(){return t("GRAPH_VIEW",n)}})," ",g.createElement("i",{className:s?"spinner-border spinner-border-sm":"fa fas fa-bolt",title:s?"Loading...":"Backload",onClick:function(){s||(t("BACKLOAD",n),o(!0))}})," ")),a.push(g.createElement("tr",{key:e},c))},i=0;i<r.length;i++)l(i)}else a.push(g.createElement("tr",{key:"1"},g.createElement("td",{id:"EMPTY"},"Empty")));var s=g.createElement("tbody",null,a);return g.createElement("div",{className:"container"},g.createElement("div",{className:"row"},g.createElement("p",{className:"text-center fs-3 fw-bold"}," Algorithm Analysis ")),g.createElement("button",{onClick:function(){return t("CANCEL")}},"Back"),g.createElement("div",{className:"row"},g.createElement("table",{className:"table table-striped"},g.createElement("thead",null,g.createElement("tr",null,g.createElement("th",{scope:"col"},"Symbol"),g.createElement("th",{scope:"col"},"First Check"),g.createElement("th",{scope:"col"},"Last Check"),g.createElement("th",{scope:"col"},"Flash %"),g.createElement("th",{scope:"col"},"Avg. Success %"),g.createElement("th",{scope:"col"}))),s)))}function sn(e){var t=e.itemState,n=e.inputChange,a=e.onOption,r=e.manuallyInputChange,l="",i="",s="",o="Default",c=0,u=0,m=0,p=0,f=0,d=[];function E(e){return g.createElement("li",{className:"nav-item",role:"presentation"},g.createElement("button",{className:o===e?"nav-link active":"nav-link",id:"technicalIndicatorType","data-mdb-toggle":"pill",role:"tab","aria-selected":o===e?"true":"false",value:e,onClick:n},e))}null!=t.item&&(null!=t.item.name&&(l=t.item.name),null!=t.item.evaluationPeriod&&(i=t.item.evaluationPeriod),null!=t.item.symbol&&(s=t.item.symbol),null!=t.item.technicalIndicatorType&&(o=t.item.technicalIndicatorType),null!=t.item.shortSMAEvaluationDuration&&(c=t.item.shortSMAEvaluationDuration),null!=t.item.longSMAEvaluationDuration&&(f=t.item.longSMAEvaluationDuration),null!=t.item.lbbEvaluationDuration&&(u=t.item.lbbEvaluationDuration),null!=t.item.ubbEvaluationDuration&&(m=t.item.ubbEvaluationDuration),null!=t.item.standardDeviations&&(p=t.item.standardDeviations),null!=t.item.effectiveSymbols&&(d=t.item.effectiveSymbols.slice()));for(var A=[{label:"DAY",value:"DAY"},{label:"MINUTE",value:"MINUTE"}],S=[],v=0;v<A.length;v++){var C="";null==A[v].label||null!=A[v].label&&(C=A[v].label),S.push(g.createElement("option",{key:v,value:A[v].value},C))}var h="Add Item";return"MODIFY"==t.view&&(h="Modify Item"),g.createElement("div",{className:"container"},g.createElement("div",{className:"row"},g.createElement("div",null,h)),g.createElement("div",{className:"row"},g.createElement("ul",{className:"nav nav-pills nav-fill mb-3",id:"tabs",role:"tablist"},E("GoldenCross"),E("LowerBollingerBand"),E("UpperBollingerBand")),g.createElement("div",null,g.createElement("label",{htmlFor:"name"},"Name"),g.createElement("input",{type:"Text",id:"name",name:"name",className:"form-control",autoCapitalize:"off",onChange:function(e){e.target.value.indexOf(" ")>-1||e.target.value.indexOf("|")>-1||e.target.value.indexOf("&")>-1||n(e)},value:l})),g.createElement("div",null,g.createElement("label",{htmlFor:"EvaluationPeriod"},"Evaluation Period"),g.createElement("select",{id:"evaluationPeriod",name:"evaluationPeriod",value:i,className:"form-control",onChange:n},S)),g.createElement("div",null,g.createElement("label",{htmlFor:"symbol"},"Symbol"),g.createElement("i",{className:"fa fa-plus-square fa-1 float-end",title:"Add Symbol",onClick:function(){""!==s&&null!==s&&(d.push(s),r("effectiveSymbols",d),r("symbol",""))}}),g.createElement("input",{type:"Text",id:"symbol",name:"symbol",className:"form-control",autoCapitalize:"off",onChange:n,value:s})),function(){if("GoldenCross"===o)return g.createElement("div",null,g.createElement("label",{htmlFor:"shortSMAEvaluationDuration"},"Short SMA Type"),g.createElement("input",{type:"Text",id:"shortSMAEvaluationDuration",name:"shortSMAEvaluationDuration",className:"form-control",autoCapitalize:"off",onChange:function(e){var t=e.target.value.substring(0,e.target.value.length-i.length-1),n=Number(t);Number.isNaN(n)||e.target.value.endsWith("-"+i.toLowerCase())&&r("shortSMAEvaluationDuration",n)},value:c+"-"+i.toLowerCase()}),g.createElement("label",{htmlFor:"longSMAEvaluationDuration"},"Long SMA Type"),g.createElement("input",{type:"Text",id:"longSMAEvaluationDuration",name:"longSMAEvaluationDuration",className:"form-control",autoCapitalize:"off",onChange:function(e){var t=e.target.value.substring(0,e.target.value.length-i.length-1),n=Number(t);Number.isNaN(n)||e.target.value.endsWith("-"+i.toLowerCase())&&(console.log("changing to - "+t),r("longSMAEvaluationDuration",n))},value:f+"-"+i.toLowerCase()}))}(),function(){if("LowerBollingerBand"===o)return g.createElement("div",null,g.createElement("label",{htmlFor:"lbbEvaluationDuration"},"LBB Type"),g.createElement("input",{type:"Text",id:"lbbEvaluationDuration",name:"lbbEvaluationDuration",className:"form-control",autoCapitalize:"off",onChange:function(e){var t=e.target.value.substring(0,e.target.value.length-i.length-1),n=Number(t);e.target.value.endsWith("-"+i.toLowerCase())&&r("lbbEvaluationDuration",n)},value:u+"-"+i.toLowerCase()}),g.createElement("label",{htmlFor:"standardDeviations"},"Standard Deviations"),g.createElement("input",{type:"Number",id:"standardDeviations",name:"standardDeviations",className:"form-control",autoCapitalize:"off",onChange:n,value:p}))}(),function(){if("UpperBollingerBand"===o)return g.createElement("div",null,g.createElement("label",{htmlFor:"ubbEvaluationDuration"},"UBB Type"),g.createElement("input",{type:"Text",id:"ubbEvaluationDuration",name:"ubbEvaluationDuration",className:"form-control",autoCapitalize:"off",onChange:function(e){var t=e.target.value.substring(0,e.target.value.length-i.length-1);e.target.value.endsWith("-"+i.toLowerCase())&&r("ubbEvaluationDuration",t)},value:m+"-"+i.toLowerCase()}),g.createElement("label",{htmlFor:"standardDeviations"},"Standard Deviations"),g.createElement("input",{type:"Number",id:"standardDeviations",name:"standardDeviations",className:"form-control",autoCapitalize:"off",onChange:n,value:p}))}(),g.createElement("div",null,g.createElement("label",{htmlFor:"Current Symbols"},"Current Symbols"),g.createElement("ul",null,function(){for(var e=[],t=function(t){e.push(g.createElement("li",{key:t},d[t]," ",g.createElement("i",{className:"fa fa-trash fa-1",title:"Delete",onClick:function(){d.splice(t,1),r("effectiveSymbols",d)}})))},n=0;n<d.length;n++)t(n);return e}()))),g.createElement("br",null),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm"},g.createElement("input",{type:"submit",name:"SaveButton",id:"SaveButton",className:"form-control btn-primary",value:"Save",onClick:function(){return a("SAVE")}})),g.createElement("div",{className:"col-sm"},g.createElement("input",{type:"submit",name:"CancelButton",id:"CancelButton",className:"form-control",value:"Cancel",onClick:function(){return a("CANCEL")}}))))}function on(e){var t=e.itemState,n=e.onOption,a=[],r=[];if(null!=t&&null!=t.item&&null!=t.item.effectiveDetails){var l=t.item.effectiveDetails.slice().sort((function(e,t){return e.successPercent>t.successPercent?1:e.successPercent<t.successPercent?-1:0})),i=25;l.length<100&&(i=Math.round(l.length/4));var s=Math.ceil(100*l[0].successPercent)/100,o=Math.ceil(100*l[l.length-1].successPercent)/100-s,c=Math.round(o/i*100)/100,u=0;a.push({x:s-c,y:0}),r.push({x:s-c,y:0});for(var m=0;m<=i;m++){for(var p=0;u<l.length&&l[u].successPercent<=s+m*c;)p++,u++;a.push({x:s+m*c,y:p/l.length*100}),r.push({x:s+m*c,y:u/l.length*100})}}return g.createElement("div",null,g.createElement("button",{onClick:function(){return n("CANCEL")}},"Back"),g.createElement(Xt.kL,{datasetIdKey:"id",data:{datasets:[{type:"line",id:1,label:"Success Percent Distribution Spread",data:a,xAxisID:"SuccessPercent",yAxisID:"DistributionPercent",borderColor:"red"},{type:"line",id:2,label:"Cumulative Success Percent Distribution Spread",data:r,xAxisID:"SuccessPercent",yAxisID:"DistributionPercent",borderColor:"blue"}]},options:{animation:!1,datasets:{line:{pointRadius:5}},scales:{SuccessPercent:{axis:"x",type:"linear",display:"auto",title:{display:!0,text:"Success %"}},DistributionPercent:{axis:"y",type:"linear",display:"auto",title:{display:!0,text:"Distribution %"}}}}}))}var cn=n(5141);function un(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var a,r,l=[],i=!0,s=!1;try{for(n=n.call(e);!(i=(a=n.next()).done)&&(l.push(a.value),!t||l.length!==t);i=!0);}catch(e){s=!0,r=e}finally{try{i||null==n.return||n.return()}finally{if(s)throw r}}return l}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return mn(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return mn(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function mn(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function pn(e){var t=e.onOption,n=e.itemState,a=(e.inputChange,e.buildThunk),r=[];if(null!=n&&null!=n.item&&null!=n.item.snapshots&&n.item.snapshots.length>0){var l=n.item.snapshots.slice();l.sort((function(e,t){var n=e.symbol,a=t.symbol;return n.localeCompare(a)}));for(var i=function(e){var n=l[e],i=n.firstCheck,s=n.lastCheck;if(null==n)return"continue";var o=un((0,g.useState)(n.updating),2),c=o[0],u=o[1],m=[];m.push(g.createElement("td",{key:"SYMBOL"},n.symbol)),m.push(g.createElement("td",{key:"DATE_RANGE"},g.createElement(cn.Z,{value:[new Date(1e3*i),new Date(1e3*s)],onChange:function(e){var t=n.id,r=0,l=0;null!==e&&(r=e[0].getTime()/1e3,l=e[1].getTime()/1e3);a({type:"MODIFY_SNAPSHOT",payload:{id:t,startTime:r,endTime:l}})}}))),m.push(g.createElement("td",{key:"FLASH_PERCENT"},Math.round(n.flashed/n.checked*1e3)/10)),m.push(g.createElement("td",{key:"AVG_SUCCESS_PERCENT"},n.averageSuccessPercent)),m.push(g.createElement("td",{key:"GRAPH_VIEW"},g.createElement("i",{className:"fa fas fa-chart-bar",title:"DetailView",onClick:function(){return t("SNAPSHOT_GRAPH_VIEW",n)}})," ",g.createElement("i",{className:c?"spinner-border spinner-border-sm":"fa fas fa-bolt",title:c?"Loading...":"Backload",onClick:function(){c||(t("MODIFY_SNAPSHOT",n),u(!0))}})," ")),r.push(g.createElement("tr",{key:e},m))},s=0;s<l.length;s++)i(s)}else r.push(g.createElement("tr",{key:"1"},g.createElement("td",{id:"EMPTY"},"Empty")));var o=g.createElement("tbody",null,r);return g.createElement("div",{className:"container"},g.createElement("div",{className:"row"},g.createElement("p",{className:"text-center fs-3 fw-bold"}," Algorithm Analysis ")),g.createElement("button",{onClick:function(){return t("CANCEL")}},"Back"),g.createElement("div",{className:"row"},g.createElement("table",{className:"table table-striped"},g.createElement("thead",null,g.createElement("tr",null,g.createElement("th",{scope:"col"},"Symbol"),g.createElement("th",{scope:"col"},"Date Range"),g.createElement("th",{scope:"col"},"Flash %"),g.createElement("th",{scope:"col"},"Avg. Success %"),g.createElement("th",{scope:"col"}))),o)))}const fn=function(){var e=(0,J.v9)((function(e){return e.database})),t=(0,J.I0)();function n(n,a){switch(n){case"SAVE":return null!=e.item&&t(function(e){return function(t){var n={requestParams:{}};n.requestParams.action="SAVE",n.requestParams.service="TA_CUSTOM_TECHNICAL_INDICATOR_SVC";var a=Object.assign({},e);a.shortSMAType=a.shortSMAType+"-"+a.evaluationPeriod.toLowerCase(),a.longSMAType=a.longSMAType+"-"+a.evaluationPeriod.toLowerCase(),a.lbbType=a.lbbType+"-"+a.evaluationPeriod.toLowerCase(),a.ubbType=a.ubbType+"-"+a.evaluationPeriod.toLowerCase(),n.requestParams.item=a,n.URI="/api/member/callService";var r=""+n.URI,l=new Headers;l.set("Content-type","application/json"),null!=n.auth&&l.set("Authorization","Basic "+n.auth),fetch(r,{method:"POST",credentials:"same-origin",headers:l,body:JSON.stringify({params:n.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(e){null!=e&&null!=e.status&&"SUCCESS"==e.status?t(nn()):null!=e&&null!=e.status&&(alert(e.status),t({type:"SHOW_STATUS",error:e.errors}))})).catch((function(e){}))}}(e.item)),!0;case"DELETE":return t(function(e){return function(t){var n={requestParams:{}};n.requestParams.action="DELETE",n.requestParams.service="TA_CUSTOM_TECHNICAL_INDICATOR_SVC",n.requestParams.itemId=e.id,n.URI="/api/member/callService";var a=""+n.URI,r=new Headers;r.set("Content-type","application/json"),null!=n.auth&&r.set("Authorization","Basic "+n.auth),fetch(a,{method:"POST",credentials:"same-origin",headers:r,body:JSON.stringify({params:n.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(e){null!=e&&null!=e.status&&"SUCCESS"==e.status?t(nn()):null!=e&&null!=e.status&&(alert(e.status),t({type:"SHOW_STATUS",error:e.errors}))})).catch((function(e){}))}}(a)),!0;case"BACKLOAD":return t(function(e){return function(t){var n={requestParams:{}};n.requestParams.action="BACKLOAD",n.requestParams.service="TA_CACHE_SVC",n.requestParams.itemId=e.id,n.requestParams.startTime=Math.round((new Date).getTime()/1e3)-432e4,n.URI="/api/member/callService";var a=""+n.URI,r=new Headers;r.set("Content-type","application/json"),null!=n.auth&&r.set("Authorization","Basic "+n.auth),fetch(a,{method:"POST",credentials:"same-origin",headers:r,body:JSON.stringify({params:n.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(e){null!=e&&null!=e.status&&"SUCCESS"==e.status?t(nn()):null!=e&&null!=e.status&&(alert(e.status),t({type:"SHOW_STATUS",error:e.errors}))})).catch((function(e){}))}}(a)),!0;case"CREATE_GLOBALS":return t((function(e){var t={requestParams:{}};t.requestParams.action="CREATE_GLOBALS",t.requestParams.service="TA_CACHE_SVC",t.URI="/api/member/callService";var n=""+t.URI,a=new Headers;a.set("Content-type","application/json"),null!=t.auth&&a.set("Authorization","Basic "+t.auth),fetch(n,{method:"POST",credentials:"same-origin",headers:a,body:JSON.stringify({params:t.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(t){null!=t&&null!=t.status&&"SUCCESS"==t.status?e((function(e){e({type:"DATABASE_CANCEL_ITEM"})})):null!=t&&null!=t.status&&"ACTIONFAILED"==t.status&&e({type:"SHOW_STATUS",error:t.errors})})).catch((function(e){}))})),!0;case"GET_SYMBOL":return t((l=a.tradeSignal,i=a.symbol,function(e){var t={requestParams:{}};t.requestParams.action="ITEM",t.requestParams.service="TA_CACHE_SVC",t.requestParams.SYMBOL=i,t.requestParams.TRADE_SIGNAL=l,t.URI="/api/member/callService";var n=""+t.URI,a=new Headers;a.set("Content-type","application/json"),null!=t.auth&&a.set("Authorization","Basic "+t.auth),fetch(n,{method:"POST",credentials:"same-origin",headers:a,body:JSON.stringify({params:t.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(t){e({type:"DATABASE_CACHE",responseJson:t}),null!=info&&e({type:"SHOW_STATUS",info})})).catch((function(e){}))})),!0;case"GRAPH_VIEW":return t(function(e){return function(t){t({type:"DATABASE_GRAPH_VIEW",action:e})}}(a)),!0;case"SNAPSHOT_GRAPH_VIEW":return t((r=a,function(e){var t={requestParams:{action:"GET_SNAPSHOT_DETAILS",service:"TA_CACHE_SVC",itemId:r.id},URI:"/api/member/callService"},n=""+t.URI,a=new Headers;a.set("Content-type","application/json"),null!=t.auth&&a.set("Authorization","Basic "+t.auth),fetch(n,{method:"POST",credentials:"same-origin",headers:a,body:JSON.stringify({params:t.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(t){if(null!=t&&null!=t.status&&"SUCCESS"==t.status){var n=t.params.items;e({type:"DATABASE_SNAPSHOT_GRAPH",payload:{details:n,snapshot:r}})}else null!=t&&null!=t.status&&(alert(t.status),e({type:"SHOW_STATUS",error:t.errors}))})).catch((function(e){}))})),!0;case"DETAIL_VIEW":return t(function(e){return function(t){var n={requestParams:{}};n.requestParams.action="INITIALIZE_TECHNICAL_INDICATORS",n.requestParams.service="TA_CACHE_SVC",n.requestParams.itemId=e.id,n.URI="/api/member/callService";var a=""+n.URI,r=new Headers;r.set("Content-type","application/json"),null!=n.auth&&r.set("Authorization","Basic "+n.auth),fetch(a,{method:"POST",credentials:"same-origin",headers:r,body:JSON.stringify({params:n.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(n){if(null!=n&&null!=n.status&&"SUCCESS"==n.status){var a=n.params.items;t({type:"DATABASE_DETAIL_VIEW",action:e}),t({type:"DATABASE_INITIALIZE_TECHNICAL_INDICATORS",payload:a})}else null!=n&&null!=n.status&&(alert(n.status),t({type:"SHOW_STATUS",error:n.errors}))})).catch((function(e){}))}}(a)),!0;case"SNAPSHOT_VIEW":return t(function(e){return function(t){var n={requestParams:{action:"GET_SNAPSHOTS",service:"TA_CACHE_SVC",itemId:e.id},URI:"/api/member/callService"},a=""+n.URI,r=new Headers;r.set("Content-type","application/json"),null!=n.auth&&r.set("Authorization","Basic "+n.auth),fetch(a,{method:"POST",credentials:"same-origin",headers:r,body:JSON.stringify({params:n.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(n){if(null!=n&&null!=n.status&&"SUCCESS"==n.status){var a=n.params.items;t({type:"DATABASE_CHANGE_ITEM",payload:e}),t({type:"DATABASE_INITIALIZE_SNAPSHOTS",payload:a}),t({type:"DATABASE_SNAPSHOT_VIEW"})}else null!=n&&null!=n.status&&(alert(n.status),t({type:"SHOW_STATUS",error:n.errors}))})).catch((function(e){}))}}(a)),!0;case"MODIFY_VIEW":return t(function(e){return function(t){t({type:"DATABASE_MODIFY_VIEW",action:e})}}(a)),!0;case"MODIFY_SNAPSHOT":return t(function(e){return function(t){var n={requestParams:{action:"MODIFY_SNAPSHOT",service:"TA_CACHE_SVC",itemId:e.id,startTime:e.firstCheck,endTime:e.lastCheck},URI:"/api/member/callService"},a=""+n.URI,r=new Headers;r.set("Content-type","application/json"),null!=n.auth&&r.set("Authorization","Basic "+n.auth),fetch(a,{method:"POST",credentials:"same-origin",headers:r,body:JSON.stringify({params:n.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(e){null!=e&&null!=e.status&&"SUCCESS"==e.status?t(nn()):null!=e&&null!=e.status&&(alert(e.status),t({type:"SHOW_STATUS",error:e.errors}))})).catch((function(e){}))}}(a)),!0;case"CANCEL":return t((function(e){e({type:"DATABASE_CANCEL_ITEM"})})),!0}var r,l,i}function a(e){var n="";if(null!=e){n=null!=e.target?e.target.value:e;var a=e.target.id;t(tn(a,n))}}function r(e,n){t(tn(e,n))}if((0,g.useEffect)((function(){t(nn())}),[]),null==e)return g.createElement("div",null," Loading... ");switch(e.view){case"DATABASE_MODIFY":return g.createElement(sn,{onOption:n,itemState:e,inputChange:a,manuallyInputChange:r});case"DATABASE_SNAPSHOT":return g.createElement(pn,{onOption:n,itemState:e,inputChange:r,buildThunk:function(e){t(e)}});case"DATABASE_DETAIL":return g.createElement(ln,{onOption:n,itemState:e,inputChange:a});case"DATABASE_GRAPH":return g.createElement(on,{onOption:n,itemState:e});default:return g.createElement($t,{onOption:n,itemState:e,inputChange:a})}};function dn(){return function(e){var t={requestParams:{}};t.requestParams.service="TA_TRADE_SVC",t.requestParams.action="HISTORICAL_ANALYSIS_LIST",t.URI="/api/member/callService";var n=""+t.URI,a=new Headers;a.set("Content-type","application/json"),null!=t.auth&&a.set("Authorization","Basic "+t.auth),fetch(n,{method:"POST",credentials:"same-origin",headers:a,body:JSON.stringify({params:t.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(t){e({type:"HISTORICAL_ANALYSIS_LIST",responseJson:t}),null!=info&&e({type:"SHOW_STATUS",info})})).catch((function(e){}))}}function En(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var a,r,l=[],i=!0,s=!1;try{for(n=n.call(e);!(i=(a=n.next()).done)&&(l.push(a.value),!t||l.length!==t);i=!0);}catch(e){s=!0,r=e}finally{try{i||null==n.return||n.return()}finally{if(s)throw r}}return l}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return An(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return An(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function An(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function Sn(e){var t=e.itemState,n=(e.appPrefs,e.onOption),a=[];if(null!==t&&void 0!==t.items&&t.items.length>0)for(var r=function(e){var r=t.items[e],l=En((0,g.useState)(!1),2),i=l[0],s=l[1],o=En((0,g.useState)(!1),2),c=o[0],u=o[1],m=[];m.push(g.createElement("td",{key:"NAME"},r.name)),m.push(g.createElement("td",{key:"BUYCONDITION"},r.rawBuyCondition)),m.push(g.createElement("td",{key:"SELLCONDITION"},r.rawSellCondition)),m.push(g.createElement("td",{key:"PROFIT"},Math.round((r.totalValue-r.budget)/r.budget*1e3)/10,"%")),m.push(g.createElement("td",{key:"CONTROL"},0===r.firstCheck?0:Math.round((r.lastCheckPrice-r.firstCheckPrice)/r.firstCheckPrice*1e3)/10,"%")),m.push(g.createElement("td",{key:"MODIFY"},g.createElement("i",{className:c?"spinner-border spinner-border-sm":"fa fa-solid fa-bars",title:c?"Loading...":"Details",onClick:function(){c||(n("HISTORICAL_ANALYSIS_DETAIL_VIEW",r),u(!0))}})," ",g.createElement("i",{className:i?"spinner-border spinner-border-sm":"fa fas fa-chart-bar",title:i?"Loading...":"Graph",onClick:function(){i||(n("HISTORICAL_ANALYSIS_GRAPH_VIEW",r),s(!0))}})," ",g.createElement("i",{className:"fa fa-trash fa-1",title:"Delete",onClick:function(){return n("DELETE",r)}}))),a.push(g.createElement("tr",{key:e},m))},l=0;l<t.items.length;l++)r(l);else a.push(g.createElement("tr",{key:"1"},g.createElement("td",{id:"EMPTY"},"Empty")));var i=g.createElement("tbody",null,a);return g.createElement("div",{className:"container"},g.createElement("div",{className:"row"},g.createElement("p",{className:"text-center fs-3 fw-bold"}," Historical Analyses ")),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm-9"}),g.createElement("div",{className:"col-sm-3"},g.createElement("i",{className:"fa fa-plus-square fa-1 float-end",title:"Modify",onClick:function(){return n("MODIFY")}})),g.createElement("table",{className:"table table-striped"},g.createElement("thead",null,g.createElement("tr",null,g.createElement("th",{scope:"col"},"Name"),g.createElement("th",{scope:"col"},"Buy Condition"),g.createElement("th",{scope:"col"},"Sell Condition"),g.createElement("th",{scope:"col"},"Profit"),g.createElement("th",{scope:"col"},"Control"),g.createElement("th",{scope:"col"}))),i)))}function vn(e){var t=e.itemState,n=(e.appPrefs,e.onOption),a=[];if(null!=t&&null!=t.item.details&&t.item.details.length>0){t.item.details.sort((function(e,t){return e.placedAt<t.placedAt?1:e.placedAt>t.placedAt?-1:0}));for(var r=0;r<t.item.details.length;r++){var l=t.item.details[r],i=[];i.push(g.createElement("td",{key:"ORDERSIDE"},l.orderSide)),i.push(g.createElement("td",{key:"DOLLARAMOUNT"},l.dollarAmount)),i.push(g.createElement("td",{key:"SHAREAMOUNT"},l.shareAmount)),i.push(g.createElement("td",{key:"PLACEDAT"},Ct()(new Date(1e3*l.placedAt)).format("MMM Do, YYYY, h:mm:ss a"))),i.push(g.createElement("td",{key:"FILLEDAT"},Ct()(new Date(1e3*l.filledAt)).format("MMM Do, YYYY, h:mm:ss a"))),i.push(g.createElement("td",{key:"TOTALVALUE"},l.totalValue)),i.push(g.createElement("td",{key:"AVAILABLEBUDGET"},l.availableBudget)),i.push(g.createElement("td",{key:"SHARESHELD"},l.sharesHeld)),i.push(g.createElement("td",{key:"FILLPRICE"},l.assetPrice)),i.push(g.createElement("td",{key:"ORDERCONDITION"},l.rawOrderCondition)),a.push(g.createElement("tr",{key:r},i))}}else a.push(g.createElement("tr",{key:"1"},g.createElement("td",{id:"EMPTY"},"Empty")));var s=g.createElement("tbody",null,a);return g.createElement("div",{className:"container"},g.createElement("div",{className:"row"},g.createElement("p",{className:"text-center fs-3 fw-bold"}," Trade Details ")),g.createElement("button",{onClick:function(){return n("CANCEL")}},"Back"),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm-3"}),g.createElement("table",{className:"table table-striped"},g.createElement("thead",null,g.createElement("tr",null,g.createElement("th",{scope:"col"},"Order Side"),g.createElement("th",{scope:"col"},"Dollar Amount"),g.createElement("th",{scope:"col"},"Share Amount"),g.createElement("th",{scope:"col"},"Placed At"),g.createElement("th",{scope:"col"},"Filled At"),g.createElement("th",{scope:"col"},"Total Value"),g.createElement("th",{scope:"col"},"Available Budget"),g.createElement("th",{scope:"col"},"Shares Held"),g.createElement("th",{scope:"col"},"Fill Price"),g.createElement("th",{scope:"col"},"Order Condition"))),s)))}function Cn(e){var t=e.itemState,n=e.onOption,a=[],r=[],l=[],i="";return null!=t&&null!=t.item&&(null!=t.item.symbolData&&t.item.symbolData.forEach((function(e){null!=e[0]&&null!=e[1]&&r.push({x:e[0],y:e[1]})})),i=t.item.totalValue>t.item.budget?"rgb(170, 250, 167)":"rgb(250, 150, 157)",null!=t.item.details&&t.item.details.forEach((function(e){null!=e.assetPrice&&null!=e.filledAt&&("BUY"==e.orderSide&&l.push("rgb(34, 179, 29)"),"SELL"==e.orderSide&&l.push("rgb(237, 14, 22)"),a.push({x:e.filledAt,y:e.assetPrice}))}))),g.createElement("div",null,g.createElement("button",{onClick:function(){return n("CANCEL")}},"Back"),g.createElement(Xt.x1,{data:{datasets:[{label:"Symbol History",type:"line",data:r.sort((function(e,t){return e.x>t.x?1:e.x<t.x?-1:0})),xAxisID:"Time",yAxisID:"Price",borderColor:i,spanGaps:!0},{label:"Trade History",type:"scatter",data:a,xAxisID:"Time",yAxisID:"Price",pointBackgroundColor:l}]},options:{animation:!1,parsing:!1,datasets:{scatter:{pointRadius:5},line:{pointRadius:0}},scales:{Time:{axis:"x",type:"linear",display:"auto",title:{display:!0,text:"Time"}},Price:{axis:"y",type:"linear",display:"auto",title:{display:!0,text:"Price"}}}}}))}const hn=function(){var e=(0,J.v9)((function(e){return e.historicalAnalysis})),t=(0,J.v9)((function(e){return e.appPrefs})),n=(0,J.I0)();function a(e,t){switch(e){case"DELETE":return n(function(e){return function(t){var n={requestParams:{}};n.requestParams.service="TA_HISTORICAL_ANALYSIS_SVC",n.requestParams.action="DELETE",n.requestParams.itemId=e.id,n.URI="/api/member/callService";var a=""+n.URI,r=new Headers;r.set("Content-type","application/json"),null!=n.auth&&r.set("Authorization","Basic "+n.auth),fetch(a,{method:"POST",credentials:"same-origin",headers:r,body:JSON.stringify({params:n.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(e){t(dn()),null!=info&&t({type:"SHOW_STATUS",info})})).catch((function(e){}))}}(t)),!0;case"HISTORICAL_ANALYSIS_DETAIL_VIEW":return n(function(e){return function(t){var n={requestParams:{}};n.requestParams.action="GET_TRADE_DETAILS",n.requestParams.service="TA_TRADE_SVC",n.requestParams.itemId=e.id,n.URI="/api/member/callService";var a=""+n.URI,r=new Headers;r.set("Content-type","application/json"),null!=n.auth&&r.set("Authorization","Basic "+n.auth),fetch(a,{method:"POST",credentials:"same-origin",headers:r,body:JSON.stringify({params:n.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(n){null!=n&&null!=n.status&&"SUCCESS"==n.status?(t({type:"HISTORICAL_ANALYSIS_DETAIL_VIEW",action:e}),t({type:"INITIALIZE_HISTORICAL_ANALYSIS_DETAILS",action:n})):null!=n&&null!=n.status&&(alert(n.status),t({type:"SHOW_STATUS",error:n.errors}))})).catch((function(e){}))}}(t)),!0;case"HISTORICAL_ANALYSIS_GRAPH_VIEW":return n(function(e){return function(t){var n={requestParams:{}};n.requestParams.action="GET_GRAPH_DATA",n.requestParams.service="TA_TRADE_SVC",n.requestParams.itemId=e.id,n.URI="/api/member/callService";var a=""+n.URI,r=new Headers;r.set("Content-type","application/json"),null!=n.auth&&r.set("Authorization","Basic "+n.auth),fetch(a,{method:"POST",credentials:"same-origin",headers:r,body:JSON.stringify({params:n.requestParams})}).then((function(e){if(!(e.status>=400))return e.json();e.status})).then((function(n){null!=n&&null!=n.status&&"SUCCESS"==n.status?(t({type:"HISTORICAL_ANALYSIS_GRAPH_VIEW",action:e}),t({type:"INITIALIZE_HISTORICAL_ANALYSIS_DETAILS",action:n}),t({type:"INITIALIZE_HISTORICAL_ANALYSIS_SYMBOL_DATA",action:n})):null!=n&&null!=n.status&&(alert(n.status),t({type:"SHOW_STATUS",error:n.errors}))})).catch((function(e){}))}}(t)),!0;case"CANCEL":return n((function(e){e({type:"HISTORICAL_ANALYSIS_CANCEL_ITEM"})})),!0}}if((0,g.useEffect)((function(){n(dn())}),[]),null==e)return g.createElement("div",null," Loading... ");switch(e.view){case"HISTORICAL_ANALYSIS_DETAIL":return g.createElement(vn,{itemState:e,appPrefs:t,onOption:a});case"HISTORICAL_ANALYSIS_GRAPH":return g.createElement(Cn,{itemState:e,appPrefs:t,onOption:a});default:return g.createElement(Sn,{itemState:e,appPrefs:t,onOption:a})}};var _n=function(e){e.component,e.path;var t=e.permissions,n=e.code,a=e.minRights,r=e.pathto;return ve(t,n,a)?g.createElement(je.j3,null):g.createElement(je.Fg,{to:r})};function gn(e){var t=e.location,n=e.navigate,a=(0,J.v9)((function(e){return e.session})),r=(0,J.v9)((function(e){return e.appMenus})),l=(0,J.v9)((function(e){return e.appPrefs})),i=(0,J.I0)();(0,g.useEffect)((function(){i(function(e){var t=e.lang;return function(e){var n={action:"INIT",service:"MEMBER_SVC"};n.prefTextKeys=new Array("MEMBER_PAGE"),n.menuNames=new Array("MEMBER_MENU_TOP","MEMBER_PROFILE_MENU_TOP"),n.lang=t;var a={};return a.requestParams=n,a.URI="/api/member/callService",W(a).then((function(t){null!=t&&null!=t.status&&"SUCCESS"===t.status&&null==t.protocalError&&null==t.errors?e({type:"GLOBAL_INIT",responseJson:t}):null!=t&&null!=t.errors?(t.status="ERROR",e({type:"SHOW_STATUS_ERROR",error:[t.errors]}),e({type:"PROCESS_LOGOUT"})):null!=t&&null!=t.protocalError&&(t.protocalError>=401?e({type:"SHOW_STATUS_ERROR",error:["User or password is incorrect."]}):e({type:"SHOW_STATUS_ERROR",error:[t.protocalError]}))})).catch((function(e){throw e}))}}({lang:a.selected.lang}))}),[]);q({level:"TRACE",loc:"MemberContainer::render",msg:"path "+t.pathname});var s=[];null!=r&&null!=r[l.memberMenu]&&(s=r[l.memberMenu]);var o=[];null!=r&&null!=r.MEMBER_PROFILE_MENU_TOP&&(o=r.MEMBER_PROFILE_MENU_TOP);var c={};return null!=a&&null!=a.selected&&null!=a.selected.permissions&&(c=a.selected.permissions),s.length>0?g.createElement(Gt,null,g.createElement(_e,{appPrefs:l,permissions:c,menus:s,changeTab:function(e,t){n(t)},activeTab:t.pathname,user:a.selected,profileMenu:o}),g.createElement(Ue,null),g.createElement(je.Z5,null,g.createElement(je.AW,{index:!0,element:g.createElement(Bt,{location:t,navigate:n})}),g.createElement(je.AW,{element:g.createElement(_n,{permissions:c,code:"MTATRADE",minRights:"W",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/ta-trade/*",element:g.createElement(en,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:c,code:"MTAHAS",minRights:"W",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/ta-historical-analysis/*",element:g.createElement(hn,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:c,code:"MTACACHE",minRights:"W",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/ta-database/*",element:g.createElement(fn,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:c,code:"MP",minRights:"W",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/profile/*",element:g.createElement(Dt,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:c,code:"ML",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/logout/*",element:g.createElement(kt,{location:t,navigate:n})})),g.createElement(je.AW,{path:"/admin",render:function(){return g.createElement(Redirect,{to:"/admin"})}}))):g.createElement(Gt,null," ",g.createElement(xe,null))}function In(e){e.currentState,e.fields;return g.createElement("div",null,g.createElement("div",null," Public Page "))}function Nn(e){return Nn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Nn(e)}function On(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Tn(e,t){return Tn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Tn(e,t)}function bn(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=Rn(e);if(t){var r=Rn(this).constructor;n=Reflect.construct(a,arguments,r)}else n=a.apply(this,arguments);return Mn(this,n)}}function Mn(e,t){if(t&&("object"===Nn(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function Rn(e){return Rn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Rn(e)}In.propTypes={currentState:$().object,fields:$().object};var Ln=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Tn(e,t)}(l,e);var t,n,a,r=bn(l);function l(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),r.call(this,e)}return t=l,(n=[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){return q({level:"TRACE",loc:"PublicContainer::render",msg:"Hi in public"}),g.createElement(In,null)}}])&&On(t.prototype,n),a&&On(t,a),Object.defineProperty(t,"prototype",{writable:!1}),l}(g.Component);Ln.propTypes={appPrefs:$().object,lang:$().string,actions:$().object};const yn=(0,J.$j)((function(e,t){return{lang:e.lang,appPrefs:e.appPrefs}}),(function(e){return{actions:(0,N.DE)(a,e)}}))(Ln);function Pn(e){e.currentState,e.fields;return g.createElement("div",null,g.createElement("div",null," Services Page "))}function Dn(e){return Dn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Dn(e)}function Fn(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Bn(e,t){return Bn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Bn(e,t)}function wn(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=Gn(e);if(t){var r=Gn(this).constructor;n=Reflect.construct(a,arguments,r)}else n=a.apply(this,arguments);return kn(this,n)}}function kn(e,t){if(t&&("object"===Dn(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function Gn(e){return Gn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Gn(e)}Pn.propTypes={currentState:$().object,fields:$().object};var Un=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Bn(e,t)}(l,e);var t,n,a,r=wn(l);function l(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),r.call(this,e)}return t=l,(n=[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){return q({level:"TRACE",loc:"ServiceContainer::render",msg:"Hi in service"}),g.createElement(Pn,null)}}])&&Fn(t.prototype,n),a&&Fn(t,a),Object.defineProperty(t,"prototype",{writable:!1}),l}(g.Component);Un.propTypes={appPrefs:$().object,lang:$().string,actions:$().object};const jn=(0,J.$j)((function(e,t){return{lang:e.lang,appPrefs:e.appPrefs}}),(function(e){return{actions:(0,N.DE)(a,e)}}))(Un);function xn(e){var t=e.parent,n=e.parentType,a=e.statCriteria;return function(e){var r={action:"INIT",service:"ADMIN_DASHBOARD_SVC"};r.prefTextKeys=new Array("ADMIN_DASHBOARD_PAGE"),r.prefLabelKeys=new Array("ADMIN_DASHBOARD_PAGE"),null!=a&&(r.statCritera=a),null!=t?(r.parentId=t.id,r.parentType=n,e({type:"ADMIN_DASHBOARD_ADD_PARENT",parent:t,parentType:n})):e({type:"ADMIN_DASHBOARD_CLEAR_PARENT"});var l={};return l.requestParams=r,l.URI="/api/admin/callService",W(l).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_DASHBOARD_INIT",responseJson:t}):actionUtils.checkConnectivity(t,e)})).catch((function(e){throw e}))}}var Vn=function(e){var t=e.value,n=e.desc,a=e.data,r=e.background,l={display:"flex",padding:"20px",background:"#00c292",color:"#fff"};null!=r&&(l.background=r);return g.createElement("div",{className:"col-lg-3 col-md-6 col-sm-6 col-xs-12"},g.createElement("div",{className:"sm-res-mg-t-30 tb-res-mg-t-30",style:l},g.createElement("div",null,g.createElement("h2",null,t),g.createElement("p",null," ",n," ")),g.createElement("div",{className:"status-tile",style:{marginLeft:"auto",marginTop:"10px",width:"50%"}},g.createElement(Xt.$Q,{data:a,options:{responsive:!0,plugins:{legend:{position:"top"},title:{display:!1,text:"Chart.js Bar Chart"}}}}))))};Vn.propTypes={value:$().string.isRequired,desc:$().string.isRequired,data:$().object.isRequired,background:$().string};const Hn=Vn;var Jn=function(e){var t=e.header,n=e.data;return g.createElement("div",{className:"col-lg-9 col-md-9 col-sm-9 col-xs-12",style:{display:"block",width:"100%"}},g.createElement("div",null,g.createElement("h2",null,t)),g.createElement("div",{style:{padding:"20px"}},g.createElement(Xt.kL,{type:"bar",data:n,options:{scales:{xAxes:[{}],yAxes:[{}]}}})))};Jn.propTypes={header:$().string.isRequired,data:$().object.isRequired};const Yn=Jn;var qn=function(e){var t=e.value,n=e.desc,a=t+"%";return g.createElement("div",{className:"Task",style:{background:"#FFF",margin:"20px",padding:"10px"}},g.createElement("div",{style:{display:"flex"}},g.createElement("p",{style:{fontWeight:"bold"}}," ",n," "),g.createElement("p",{style:{paddingLeft:"10%"}}," ",a)),g.createElement("progress",{max:"100",value:t,style:{width:"100%"}}))};qn.propTypes={value:$().string.isRequired,desc:$().string.isRequired};const Wn=qn;function zn(e){var t=e.itemState,n=(e.fields,e.texts,e.labels,e.onChangeLogin,e.onChangeRegistration,e.fieldChangeEvent,e.onForgotPassword,e.fieldBlurEvent,e.buttonClick,e.handleChange,e.changeView,e.stats,{datasets:[{label:"Members",backgroundColor:"#FFF",data:[100*Math.random()]},{label:"Something",backgroundColor:"#FFF",data:[100*Math.random()]},{label:"tathat",backgroundColor:"#FFF",data:[100*Math.random()]},{label:"fofof",backgroundColor:"#FFF",data:[100*Math.random()]}]}),a={datasets:[{label:"Admin Changes",backgroundColor:"#e8e8e8",data:[25*Math.random()]},{label:"Users Online",backgroundColor:"#ffe066",data:[25*Math.random()]},{label:"New Subscribers",backgroundColor:"#00c292",data:[25*Math.random()]},{label:"Bugs Reported",backgroundColor:"#5a5b5b",data:[25*Math.random()]}]},r="0";null!=t.stats&&null!=t.stats.itemCount&&(r=t.stats.itemCount.toString());return g.createElement("div",null,g.createElement("div",{className:"Row",style:{padding:"20px"}},g.createElement(Hn,{value:r,desc:"Members Online",data:n}),g.createElement(Hn,{value:"15,000",background:"#ffe066",desc:"Site Views",data:n}),g.createElement(Hn,{value:"+12,000",background:"#5a5b5b",desc:"Development Hours",data:n}),g.createElement(Hn,{value:"1",background:"#ff9933",desc:"New Subscriber",data:n})),g.createElement("div",{className:"Row",style:{display:"flex",padding:"20px"}},g.createElement("div",{style:{width:"70%"}},g.createElement(Yn,{header:"Website Analytics",data:a})),g.createElement("div",{style:{margin:"20px",padding:"10px",width:"30%",background:"#f8f8f8"}},g.createElement("h2",{style:{margin:"0px"}}," Task Progress "),g.createElement(Wn,{value:"20",desc:"Dashboard"}),g.createElement(Wn,{value:"80",desc:"Admin List View"}),g.createElement(Wn,{value:"100",desc:"Login"}))))}zn.propTypes={currentState:$().object,fields:$().object,texts:$().object,labels:$().object,stats:$().object,onChangeLogin:$().func,onChangeRegistration:$().func,onForgotPassword:$().func,fieldChangeEvent:$().func,fieldBlurEvent:$().func,buttonClick:$().func,handleChange:$().func,changeView:$().func};const Kn=function(e){var t=e.location,n=(e.navigate,(0,J.v9)((function(e){return e.admindashboard}))),a=((0,J.v9)((function(e){return e.session})),(0,J.v9)((function(e){return e.appMenus})),(0,J.v9)((function(e){return e.appPrefs})),(0,J.I0)());return(0,g.useEffect)((function(){null!=t.state&&null!=t.state.parent?a(xn({parent:t.state.parent,parentType:t.state.parentType})):a(xn({}))}),[]),q({level:"TRACE",loc:"DashboardContainer::render",msg:"Hi there trser"}),g.createElement(zn,{itemState:n})};function Xn(){return function(e){var t={action:"INIT",service:"BUG_SVC"};t.prefFormKeys=new Array("ADMIN_BUG_PAGE"),t.prefTextKeys=new Array("ADMIN_BUG_PAGE"),t.prefLabelKeys=new Array("ADMIN_BUG_PAGE");var n={};return n.requestParams=t,n.URI="/api/admin/callService",W(n).then((function(t){null!=t&&null==t.protocalError?e({type:"LOAD_INIT_BUGS",responseJson:t}):actionUtils.checkConnectivity(t,e)})).catch((function(e){throw e}))}}function Zn(e){var t=e.state,n=e.listStart,a=e.listLimit,r=e.searchCriteria,l=e.orderCriteria,i=e.info;return function(e){var s={action:"LIST",service:"BUG_SVC"};s.listStart=null!=n?n:t.listStart,s.listLimit=null!=a?a:t.listLimit,s.searchCriteria=null!=r?r:t.searchCriteria,s.orderCriteria=null!=l?l:t.orderCriteria;var o={page:"languages",orderCriteria:s.orderCriteria,listStart:s.listStart,listLimit:s.listLimit};e({type:"BUG_PREF_CHANGE",prefChange:o});var c={};return c.requestParams=s,c.URI="/api/admin/callService",W(c).then((function(t){null!=t&&null==t.protocalError?(e({type:"LOAD_LIST_BUGS",responseJson:t}),null!=i&&e({type:"SHOW_STATUS",info:i})):actionUtils.checkConnectivity(t,e)})).catch((function(e){throw e}))}}function $n(e){var t=e.state,n=e.listLimit;return function(e){e({type:"BUGS_LISTLIMIT",listLimit:n}),e(Zn({state:t,listLimit:n}))}}function Qn(e){var t=e.state,n=e.searchCriteria;return function(e){e({type:"BUGS_SEARCH",searchCriteria:n}),e(Zn({state:t,searchCriteria:n,listStart:0}))}}function ea(e){var t=e.state;return function(e){var n={action:"SAVE",service:"BUG_SVC"};n.inputFields=t.inputFields;var a={};return a.requestParams=n,a.URI="/api/admin/callService",W(a).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(Zn({state:t,info:["Save Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",error:n.errors}):actionUtils.checkConnectivity(n,e)})).catch((function(e){throw e}))}}function ta(e){var t=e.state,n=e.id;return function(e){var a={action:"DELETE",service:"BUG_SVC"};a.itemId=n;var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(Zn({state:t,info:["Delete Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):actionUtils.checkConnectivity(n,e)})).catch((function(e){throw e}))}}function na(e){return function(t){var n={action:"ITEM",service:"BUG_SVC"};n.prefFormKeys=new Array("ADMIN_BUG_PAGE"),null!=e&&(n.itemId=e);var a={};return a.requestParams=n,a.URI="/api/admin/callService",W(a).then((function(e){null!=e&&null==e.protocalError?t({type:"BUGS_MODIFY",responseJson:e}):actionUtils.checkConnectivity(e,t)})).catch((function(e){throw e}))}}function aa(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"BUGS_INPUT_CHANGE",params:a})}}function ra(e){var t=e.value;return function(e){e({type:"BUGS_SEARCH_CHANGE",value:t})}}function la(e){var t=e.state,n=e.orderCriteria;return function(e){e({type:"BUGS_ORDERBY",orderCriteria:n}),e(Zn({state:t,orderCriteria:n}))}}function ia(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var sa=function(e){var t=e.name,n=e.appPrefs,a=e.listLimit,r=e.onListLimitChange,l=[];if(null!=n.prefOptions.GLOBAL_PAGE&&null!=n.prefOptions.GLOBAL_PAGE.GLOBAL_PAGE_PAGELIMIT_SELECT){var i=n.prefOptions.GLOBAL_PAGE.GLOBAL_PAGE_PAGELIMIT_SELECT.value;if(""!=i)for(var s=JSON.parse(i),o=0;o<s.length;o++)null!=a&&a==s[o].k?l.push(g.createElement("option",ia({key:o,value:s[o].k},"value",a),s[o].v)):l.push(g.createElement("option",{key:o,value:s[o].k},s[o].v))}return g.createElement("div",{className:"col-xs-12 col-md-3"},g.createElement("div",{className:"dataTables_length",id:"datatable_length"},g.createElement("label",null,"Show ",g.createElement("select",{name:t,"aria-controls":"datatable",className:"form-control input-sm",onChange:function(e){return r(t,e)}},l)," entries ")))};sa.propTypes={name:$().string.isRequired,appPrefs:$().object.isRequired,listLimit:$().number,onListLimitChange:$().func};const oa=sa;var ca=function(e){var t=e.itemState,n=e.id,a=(e.appPrefs,e.columns),r=e.parent,l=e.onOrderBy,i=[],s=[],o=[];if(null!=a&&a.length>0)for(var c=0;c<a.length;c++){if(null!=a[c].optionalParams){var u=JSON.parse(a[c].optionalParams);if(null!=u.conditionParent&&"NotNull"==u.conditionParent&&(null==r||""==r))continue;if(null!=u.fieldIcon)continue}if(""!=a[c].value){var m={value:a[c].name,label:a[c].value+" ASC"},p={value:a[c].name,label:a[c].value+" DESC"};if(i.push(m),i.push(p),null!=t.orderCriteria)for(var f=0;f<t.orderCriteria.length;f++)t.orderCriteria[f].orderColumn===a[c].name&&("ASC"===t.orderCriteria[f].orderDir?s.push({orderCriteria:t.orderCriteria[f],option:m}):"DESC"===t.orderCriteria[f].orderDir&&s.push({orderCriteria:t.orderCriteria[f],option:p}))}}for(var d=0;d<t.orderCriteria.length;d++)for(var E=0;E<s.length;E++)t.orderCriteria[d]==s[E].orderCriteria&&o.push(s[E].option);return null!=l?g.createElement("div",{className:"col-xs-12 col-md-3"},g.createElement(Ot,{itemState:t,id:n+"-ORDERBY",label:"Order by",options:i,defaultOption:o,inputChange:l,inline:"true",value:""})):g.createElement("div",{className:"col-xs-12 col-md-3"})};ca.propTypes={itemState:$().object,id:$().string.isRequired,appPrefs:$().object.isRequired,columns:$().array.isRequired,parent:$().string,onOrderBy:$().func};const ua=ca;var ma=function(e){var t=e.id,n=(e.label,e.onChange),a=e.onClick,r=(e.onBlur,e.placeHolder),l=e.value,i=(e.error,e.buttonClassName);return null==i&&(i="input-group-addon"),null==r&&(r="Search"),g.createElement("div",{className:"col-xs-12 col-md-3"},g.createElement("div",{className:"input-group"},g.createElement("input",{className:"form-control",type:"text",id:t+"-SEARCH",name:t+"-SEARCH",placeholder:r,"aria-label":"Search",onKeyPress:function(e){return n(t+"-SEARCH",e)},onChange:function(e){return n(t+"-SEARCH",e)}}),g.createElement("span",{key:t,id:t+"-SEARCH-BUTTON",name:t+"-SEARCH-BUTTON",value:l,onClick:function(){return a(t+"-SEARCH")},className:i},g.createElement("i",{className:"fa-solid fa-search thub-1","aria-hidden":"true"}))))};ma.propTypes={id:$().string.isRequired,label:$().string,onChange:$().func,onClick:$().func,onBlur:$().func,placeHolder:$().string,value:$().string,error:$().string,buttonClassName:$().string};const pa=ma;var fa=function(e){var t=e.itemState,n=e.id,a=(e.appPrefs,e.columns),r=e.parent,l=e.onClick,i=[],s=[];if(null!=a&&a.length>0)for(var o=0;o<a.length;o++){if(null!=a[o].optionalParams){var c=JSON.parse(a[o].optionalParams);if(null!=c.conditionParent&&"NotNull"==c.conditionParent&&(null==r||""==r))continue;if(null!=c.fieldIcon)continue}if(""!=a[o].value){var u={value:a[o].name,label:a[o].value};if(i.push(u),null!=t.searchCriteria)for(var m=0;m<t.searchCriteria.length;m++)t.searchCriteria[m].searchColumn===a[o].name&&s.push(u)}}return null!=l?g.createElement("div",{className:"col-xs-12 col-md-3"},g.createElement(Ot,{itemState:t,id:n+"-SEARCHBY",label:"Search by",options:i,defaultOption:s,inputChange:l,inline:"true"})):g.createElement("div",{className:"col-xs-12 col-md-3"})};fa.propTypes={itemState:$().object.isRequired,id:$().string.isRequired,appPrefs:$().object.isRequired,columns:$().array.isRequired,parent:$().string,onClick:$().func};const da=fa;var Ea=function(e){var t=e.id,n=e.currentSegment,a=e.appPrefs,r=e.itemCount,l=e.listStart,i=e.listLimit,s=e.onClick,o=e.buttonClassName;null==o&&(o="form-control btn"),r<i&&(i=r);var c=a.prefTexts.GLOBAL_PAGE.GLOBAL_PAGE_PAGING_SHOW_ENTRIES.value;c=c.replace("{pageStart}",l+1),c=(c=l+i>r?c.replace("{pageLimit}",r):c.replace("{pageLimit}",l+i)).replace("{itemCount}",r);var u=[],m=Math.ceil(r/i);null==n&&(n=1);var p=Math.floor(n/15.1);if(p>0){15*p+1;var f=15*p;u.push(g.createElement("li",{key:"GLOBAL_PAGE_PAGING_PREV",className:"paginate_button previous",id:"datatable_previous",onClick:function(){return s(f,t)}},g.createElement("span",null,a.prefTexts.GLOBAL_PAGE.GLOBAL_PAGE_PAGING_PREV.value)))}p+=1;for(var d="paginate_button active",E=function(e){if(d=n==e?"paginate_button active":"paginate_button",!(e<=15*p))return next=e,"break";u.push(g.createElement("li",{key:e,className:d,onClick:function(){return s(e,t)}},g.createElement("span",null,e)))},A=1;A<=m;A++){if("break"===E(A))break}return m>15*p&&u.push(g.createElement("li",{key:"GLOBAL_PAGE_PAGING_NEXT",className:"paginate_button next",id:"datatable_next",onClick:function(){return s(next,t)}},g.createElement("span",null,a.prefTexts.GLOBAL_PAGE.GLOBAL_PAGE_PAGING_NEXT.value))),m<=1?g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm-5"},g.createElement("div",{className:"dataTables_info",id:"datatable_info",role:"status","aria-live":"polite"},c))):g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm-5"},g.createElement("div",{className:"dataTables_info",id:"datatable_info",role:"status","aria-live":"polite"},c)),g.createElement("div",{className:"col-sm-7"},g.createElement("div",{className:"dataTables_paginate paging_simple_numbers",id:"datatable_paginate"},g.createElement("ul",{className:"pagination"},u))))};Ea.propTypes={currentSegment:$().number,appPrefs:$().object,itemCount:$().number,listStart:$().number,listLimit:$().number,onClick:$().func,buttonClassName:$().string};const Aa=Ea;function Sa(e){return Sa="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Sa(e)}var va=function(e){var t=e.itemState,n=e.header,a=e.columns,r=e.labelGroup,l=e.appPrefs,i=e.parent,s=e.onListLimitChange,o=e.onSearchClick,c=e.onSearchChange,u=e.onPaginationClick,m=e.onOrderBy,p=(e.onHeader,e.onOption),f=e.moveSelectedItem,d=e.moveHeader,E="",A=[];if(null!=a&&a.length>0){for(var S=[],v=0;v<a.length;v++){if(null!=a[v].optionalParams){var C=JSON.parse(a[v].optionalParams);if(null!=C.conditionParent&&"NotNull"==C.conditionParent&&(null==i||""==i))continue;if(null!=C.conditionField&&"moveSelectedItem"===C.conditionField&&"NotNull"==C.conditionCheck&&(null==f||""==f))continue}null!=r&&""!=r?a[v].group==r&&S.push(g.createElement("th",{key:a[v].id,scope:"col"},a[v].value)):S.push(g.createElement("th",{key:a[v].id,scope:"col"},a[v].value))}E=g.createElement("thead",null,g.createElement("tr",null,S))}if(null!=t&&null!=t.items&&t.items.length>0)for(var h=function(e){for(var n=[],s=0;s<a.length;s++)if(null!=a[s].optionalParams){var o=function(){var o=JSON.parse(a[s].optionalParams),c="";if(null!=o.conditionParent&&"NotNull"==o.conditionParent&&(null==i||""==i))return"continue";if(null!=o.conditionField&&"moveSelectedItem"===o.conditionField&&"NotNull"==o.conditionCheck&&(null==f||""==f))return"continue";if(null!=o.allowLinkParentType&&null!=t.parentType&&o.allowLinkParentType!=t.parentType)return n.push(g.createElement("td",{key:a[s].id})),"continue";if(null!=o.field)c=t.items[e][o.field],null!=o.prefix&&(c=o.prefix+c);else if(null!=o.fieldML)if(null!=t.items[e][o.fieldML].langTexts&&t.items[e][o.fieldML].langTexts.length>0){for(var u=!1,m=0;m<t.items[e][o.fieldML].langTexts.length;m++)if(t.items[e][o.fieldML].langTexts[m].lang==l.lang){c=t.items[e][o.fieldML].langTexts[m].text,u=!0;break}u||(c=t.items[e][o.fieldML].defaultText)}else c=t.items[e][o.fieldML].defaultText;else if(null!=o.fieldBool)c=1==t.items[e][o.fieldBool]?null!=o.labelTrue&&null!=o.labelTrue[l.lang]?o.labelTrue[l.lang]:o.labelTrue.defaultText:null!=o.labelFalse&&null!=o.labelFalse[l.lang]?o.labelFalse[l.lang]:o.labelFalse.defaultText;else if(null!=o.fieldIcon){if(c=[],null!=p)for(var d=function(n){var a=!1;null!=o.fieldIcon[n].lock&&""!=o.fieldIcon[n].lock&&(a=null!=o.fieldIcon[n].fieldLockObj&&""!=o.fieldIcon[n].fieldLockObj?null!=t.items[e][o.fieldIcon[n].fieldLockObj]&&t.items[e][o.fieldIcon[n].fieldLockObj][o.fieldIcon[n].lock]:t.items[e][o.fieldIcon[n].lock]);var r=!0;null!=o.fieldIcon[n].fieldShow&&""!=o.fieldIcon[n].fieldShow&&null!=t.items[e][o.fieldIcon[n].fieldShow]&&0==t.items[e][o.fieldIcon[n].fieldShow]&&(r=!1),1==a||0==r||c.push(g.createElement("i",{key:n,id:"ITEM-"+t.items[e].id+"-"+o.fieldIcon[n].code,className:o.fieldIcon[n].classField,title:o.fieldIcon[n].label.en,onClick:function(){return p(o.fieldIcon[n].code,t.items[e])},"aria-hidden":"true"}))},E=0;E<o.fieldIcon.length;E++)d(E)}else if(null!=o.fieldObj&&null!=o.fieldObj.field)if(null!=o.fieldObj.fieldChild&&null!=o.fieldObj.fieldChild.field)null!=t.items[e][o.fieldObj.field]&&(c=t.items[e][o.fieldObj.field][o.fieldObj.fieldChild.field]);else if(null!=o.fieldObj.fieldChild&&null!=o.fieldObj.fieldChild.fieldDate)null!=t.items[e][o.fieldObj.field]&&(c=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"numeric",day:"numeric"}).format(Ct()(t.items[e][o.fieldObj.field][o.fieldObj.fieldChild.fieldDate]).toDate()));else if(null!=o.fieldObj.fieldChild&&null!=o.fieldObj.fieldChild.fieldBool){var A=o.fieldObj.field;"object"===Sa(o.fieldObj.field)&&null!=t.parentType&&null!=o.fieldObj.field[t.parentType]&&(A=o.fieldObj.field[t.parentType]),null!=t.items[e][A]&&(c=1==t.items[e][A][o.fieldObj.fieldChild.fieldBool]?"Active":"Disabled")}else if(null!=o.fieldObj.fieldChild&&null!=o.fieldObj.fieldChild.fieldML)if(null!=t.items[e][o.fieldObj.field][o.fieldObj.fieldChild.fieldML].langTexts&&t.items[e][o.fieldObj.field][o.fieldObj.fieldChild.fieldML].langTexts.length>0){for(var S=!1,v=0;v<t.items[e][o.fieldObj.field][o.fieldObj.fieldChild.fieldML].langTexts.length;v++)if(t.items[e][o.fieldObj.field][o.fieldObj.fieldChild.fieldML].langTexts[v].lang==l.lang){c=t.items[e][o.fieldObj.field][o.fieldObj.fieldChild.fieldML].langTexts[v].text,S=!0;break}S||(c=t.items[e][o.fieldObj.field][o.fieldObj.fieldChild.fieldML].defaultText)}else c=t.items[e][o.fieldObj.field][o.fieldObj.fieldChild.fieldML].defaultText;else c=t.items[e][o.fieldObj.field];else if(null!=o.fieldJSON){if(c=[],null!=t.items[e][o.fieldJSON]&&""!=t.items[e][o.fieldJSON])for(var C=JSON.parse(t.items[e][o.fieldJSON]),h=0;h<C.length;h++){var _="";if(null!=o.fieldLookup&&null!=t[o.fieldLookup]&&""!=t[o.fieldLookup])for(var N=t[o.fieldLookup],O=0;O<N.length;O++)N[O].value!=C[h].value||(_=N[O].label);else null!=C[h].label&&(_=C[h].label);c.push(g.createElement("div",{key:h},_))}}else if(null!=o.fieldJoin){I="";for(var T=0;T<o.fieldJoin.length;T++)T>0&&null!=o.joinSeparator&&(I+=o.joinSeparator),null!=o.fieldJoin[T].field&&(I+=t.items[e][o.fieldJoin[T].field]);c=null!=o.prefix?o.prefix+I:I}null!=r&&""!=r?a[s].group==r&&n.push(g.createElement("td",{key:a[s].id},c)):n.push(g.createElement("td",{key:a[s].id},c))}();if("continue"===o)continue}null!=f&&t.items[e].id==f.id?A.push(g.createElement("tr",{key:t.items[e].id,style:{background:"#FFFFCC"}},n)):A.push(g.createElement("tr",{key:t.items[e].id},n))},_=0;_<t.items.length;_++){var I;h(_)}else A.push(g.createElement("tr",{key:"1"},g.createElement("td",{id:l.prefTexts.GLOBAL_PAGE.GLOBAL_PAGE_LIST_EMPTY.name}," ",l.prefTexts.GLOBAL_PAGE.GLOBAL_PAGE_LIST_EMPTY.value)));var N=g.createElement("tbody",null,A);return g.createElement("div",{className:"col-md-12 col-sm-12 col-xs-12"},g.createElement("div",{className:"x_panel"},g.createElement("div",{className:"x_title"},n,g.createElement("ul",{className:"navbar-right panel_toolbox"},g.createElement("li",null,g.createElement("i",{id:t.pageName+"-ADD",className:"fa-solid fa-plus thub-1",title:"Add",onClick:function(){return p("MODIFY")}})))),g.createElement("div",{className:"x_content"},g.createElement("div",{className:"row"},g.createElement(oa,{name:t.pageName+"-LISTLIMIT",appPrefs:l,listLimit:t.listLimit,onListLimitChange:s}),null!=f?g.createElement("span",{style:{background:"#FFFFCC"}},d):g.createElement(ua,{id:t.pageName,itemState:t,appPrefs:l,columns:a,parent:i,onOrderBy:m}),null!=f?g.createElement("span",null):g.createElement(da,{id:t.pageName,itemState:t,appPrefs:l,columns:a,parent:i,onClick:o}),null!=f?g.createElement("span",null):g.createElement(pa,{id:t.pageName,onChange:c,onClick:o})),g.createElement("table",{className:"table table-striped"},E,N),g.createElement(Aa,{currentSegment:t[t.pageName+"_PAGINATION"],appPrefs:l,itemCount:t.itemCount,listStart:t.listStart,listLimit:t.listLimit,onClick:u}))),g.createElement("div",{id:"filterModal",className:"modal fade",role:"dialog","aria-labelledby":"basicModal"},g.createElement("div",{className:"modal-dialog"},g.createElement("div",{className:"modal-content"},g.createElement("div",{className:"modal-header"},g.createElement("button",{type:"button",className:"close","data-dismiss":"modal","aria-hidden":"true"},g.createElement("i",{className:"fa-solid fa-xmark thub-1"})),g.createElement("h4",{className:"modal-title"},"Modal title")),g.createElement("div",{className:"modal-body"},g.createElement("h3",null,"Modal Body ",g.createElement("i",{className:"fa fa-cog fa-spin fa-3x fa-fw"}))),g.createElement("div",{className:"modal-footer"},g.createElement("h3",null,"Footer"))))))};va.propTypes={itemState:$().object.isRequired,header:$().oneOfType([$().string,$().object]),parent:$().string,columns:$().array,labelGroup:$().string,appPrefs:$().object,onListLimitChange:$().func,onSearchChange:$().func,onSearchClick:$().func,onPaginationClick:$().func,onOrderBy:$().func,onHeader:$().func,onOption:$().func,moveSelectedItem:$().object,moveHeader:$().string};const Ca=va;function ha(e){var t=e.bugs,n=[];return null!=t.prefLabels&&null!=t.prefLabels.ADMIN_BUG_TABLE&&(n=t.prefLabels.ADMIN_BUG_TABLE),g.createElement(Ca,{items:t.items,columns:n})}$().object,ha.propTypes={bugs:$().object};var _a=function(e){var t=e.isOpen,n=e.width,a=e.height,r=e.style,l=e.backdropStyle,i=e.containerClassName,s=e.className,o=e.backdropClassName,c=e.noBackdrop,u=(e.onClose,e.children);if(!1===t)return null;var m={position:"fixed",top:"50%",left:"50%",transform:"translate(-50%, -50%)",zIndex:"9999"};if(n&&a&&(m.width=n+"px",m.height=a+"px",m.marginLeft="-"+n/2+"px",m.marginTop="-"+a/2+"px",m.transform=null),r)for(var p in r)m[p]=r[p];var f={position:"absolute",width:"100%",height:"100%",top:"0px",left:"0px",zIndex:"9998",overflow:"visible",background:"rgba(0,0,0,0.3)"};if(l)for(var d in l)f[d]=f[d];return g.createElement("div",{className:i},g.createElement("div",{className:s,style:m},u),!c&&g.createElement("div",{className:o,style:f}))};_a.propTypes={isOpen:$().bool.isRequired,width:$().number,height:$().number,style:$().object,backdropStyle:$().object,containerClassName:$().string,className:$().string,backdropClassName:$().string,children:$().object,noBackdrop:$().bool,onClose:$().func};const ga=_a;function Ia(e){var t=e.containerState,n=e.item,a=e.inputFields,r=e.appPrefs,l=e.itemPrefForms,i=e.onSave,s=e.onCancel,o=e.inputChange,c=[],u=[],m={};if(null!=l&&null!=l.ADMIN_BUG_PAGE)for(var p=0;p<l.ADMIN_BUG_PAGE.length;p++)switch(l.ADMIN_BUG_PAGE[p].name){case"ADMIN_BUG_FORM_TITLE":adminBugFormTitle=l.ADMIN_BUG_PAGE[p];break;case"ADMIN_BUG_FORM_CODE":adminBugFormCode=l.ADMIN_BUG_PAGE[p];break;case"ADMIN_BUG_FORM_ACTIVE":if(adminBugFormActive=l.ADMIN_BUG_PAGE[p],""!=adminBugFormActive.classModel){var f=JSON.parse(adminBugFormActive.classModel);null!=n&&null!=n[f.field]&&n[f.field],c=JSON.parse(adminBugFormActive.value)}break;case"ADMIN_BUG_FORM_DEFAULT":if(adminBugFormDefault=l.ADMIN_BUG_PAGE[p],""!=adminBugFormDefault.classModel){var d=JSON.parse(adminBugFormDefault.classModel);null!=n&&null!=n[d.field]&&n[d.field],u=JSON.parse(adminBugFormDefault.value)}break;case"ADMIN_BUG_FORM_DIRECTION":m=l.ADMIN_BUG_PAGE[p]}return g.createElement("div",{className:"col-lg-12"},g.createElement("h4",{className:"modal-title"},"Bug"),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm-4"},g.createElement(it,{field:adminBugFormTitle,item:n,inputFields:a,onChange:o,appPrefs:r}))),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm-4"},g.createElement(et,{item:n,field:adminBugFormCode,inputFields:a,containerState:t,onChange:o}))),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-md-4"},g.createElement(ft,{item:n,field:m,inputFields:a,containerState:t,onChange:o})),g.createElement("div",{className:"col-md-4"},g.createElement(Et,{item:n,field:adminBugFormActive,inputFields:a,errors:t.errors,onChange:o,options:c.options})),g.createElement("div",{className:"col-md-4"},g.createElement(Et,{item:n,field:adminBugFormDefault,inputFields:a,errors:t.errors,onChange:o,options:u.options}))),g.createElement("button",{type:"button",className:"btn btn-primary",onClick:i()},"Save"),g.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:s()},"Cancel"))}Ia.propTypes={containerState:$().object,item:$().object,appPrefs:$().object,itemPrefForms:$().object,onSave:$().func,onCancel:$().func,inputChange:$().func};const Na=function(e){e.location,e.navigate;var t=(0,J.v9)((function(e){return e.adminbugs})),n=(0,J.v9)((function(e){return e.session})),a=(0,J.v9)((function(e){return e.appPrefs})),r=(0,J.I0)();(0,g.useEffect)((function(){r(Xn())}),[]);var l=function(e,n,l,i){Pt.inputChange({state:t,actions:s,dispatch:r,appPrefs:a,type:e,field:n,value:l,event:i})},i=function(){Pt.onCancel({state:t,actions:s,dispatch:r})};return q({level:"TRACE",loc:"BugsContainer::render",msg:"Hi there"}),t.isModifyOpen?g.createElement(Ia,{itemState:t,item:t.selected,inputFields:t.inputFields,appPrefs:a,itemPrefForms:prefForms,onSave:function(){Pt.onSave({state:t,actions:s,dispatch:r,appPrefs:a,form:"PM_PROJECT_FORM"})},onCancel:i,onReturn:i,inputChange:l}):null!=t.items?g.createElement(ha,{itemState:t,appPrefs:a,onListLimitChange:function(e,n){Pt.onListLimitChange({state:t,actions:s,dispatch:r,appPrefs:a,fieldName:e,event:n})},onSearchChange:function(e,n){Pt.onSearchChange({state:t,actions:s,dispatch:r,field:e,event:n})},onSearchClick:function(e,n){Pt.onSearchClick({state:t,actions:s,dispatch:r,fieldName:e,event:n})},onPaginationClick:function(e){Pt.onPaginationClick({state:t,actions:s,dispatch:r,value:e})},onOrderBy:function(e,n){Pt.onOrderBy({state:t,actions:s,dispatch:r,appPrefs:a,selectedOption:e,event:n})},openDeleteModal,closeModal:function(){Pt.closeModal({actions:s,dispatch:r})},onModify,onDelete,inputChange:l,session:n}):g.createElement("div",null," Loading... ")};function Oa(e){e.currentState,e.fields,e.texts,e.labels,e.onChangeLogin,e.onChangeRegistration,e.fieldChangeEvent,e.onForgotPassword,e.fieldBlurEvent,e.buttonClick,e.handleChange,e.changeView;return g.createElement("div",null,g.createElement("div",null," Change Requests Page "))}function Ta(e){return Ta="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ta(e)}function ba(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Ma(e,t){return Ma=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Ma(e,t)}function Ra(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=ya(e);if(t){var r=ya(this).constructor;n=Reflect.construct(a,arguments,r)}else n=a.apply(this,arguments);return La(this,n)}}function La(e,t){if(t&&("object"===Ta(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function ya(e){return ya=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ya(e)}Oa.propTypes={currentState:$().object,fields:$().object,texts:$().object,labels:$().object,onChangeLogin:$().func,onChangeRegistration:$().func,onForgotPassword:$().func,fieldChangeEvent:$().func,fieldBlurEvent:$().func,buttonClick:$().func,handleChange:$().func,changeView:$().func};var Pa=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Ma(e,t)}(l,e);var t,n,a,r=Ra(l);function l(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),r.call(this,e)}return t=l,(n=[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){return q({level:"TRACE",loc:"ChangeRequestsContainer::render",msg:"Hi there"}),g.createElement(Oa,null)}}])&&ba(t.prototype,n),a&&ba(t,a),Object.defineProperty(t,"prototype",{writable:!1}),l}(g.Component);Pa.propTypes={appPrefs:$().object,lang:$().string,actions:$().object};const Da=(0,J.$j)((function(e,t){return{lang:e.lang,appPrefs:e.appPrefs}}),(function(e){return{actions:(0,N.DE)(a,e)}}))(Pa);function Fa(e){e.parent,e.parentType;return function(e){var t={action:"INIT",service:"ADMIN_PREF_SVC"};t.prefTextKeys=new Array("ADMIN_PREFERENCE_PAGE"),t.prefLabelKeys=new Array("ADMIN_PREFERENCE_PAGE");var n={};return n.requestParams=t,n.URI="/api/admin/callService",W(n).then((function(t){null!=t&&null==t.protocalError?null!=t.status&&"ACTIONFAILED"==t.status?e({type:"SHOW_STATUS",error:t.errors}):e({type:"ADMIN_PREFERENCE_INIT",responseJson:t}):K(t,e)})).catch((function(e){throw e}))}}function Ba(e){var t=e.state,n=e.listStart,a=e.listLimit,r=e.searchCriteria,l=e.orderCriteria,i=e.info,s=e.paginationSegment;return function(e){var o={action:"LIST",service:"ADMIN_PREF_SVC"};o.listStart=null!=n?n:t.listStart,o.listLimit=null!=a?a:t.listLimit,o.searchCriteria=null!=r?r:t.searchCriteria,o.orderCriteria=null!=l?l:t.orderCriteria;var c={page:"preferences",orderCriteria:o.orderCriteria,listStart:o.listStart,listLimit:o.listLimit};e({type:"USER_PREF_CHANGE",userPrefChange:c});var u={};return u.requestParams=o,u.URI="/api/admin/callService",W(u).then((function(t){null!=t&&null==t.protocalError?(null!=t.status&&"ACTIONFAILED"==t.status?e({type:"SHOW_STATUS",error:t.errors}):e({type:"ADMIN_PREFERENCE_LIST",responseJson:t,paginationSegment:s}),null!=i&&e({type:"SHOW_STATUS",info:i})):K(t,e)})).catch((function(e){throw e}))}}function wa(e){var t=e.state,n=e.listLimit;return function(e){e({type:"ADMIN_PREFERENCE_LISTLIMIT",listLimit:n}),e(Ba({state:t,listLimit:n}))}}function ka(e){var t=e.state,n=e.searchCriteria;return function(e){e({type:"ADMIN_PREFERENCE_SEARCH",searchCriteria:n}),e(Ba({state:t,searchCriteria:n,listStart:0}))}}function Ga(e){var t=e.state;return function(e){var n={action:"SAVE",service:"ADMIN_PREF_SVC"};n.inputFields=t.inputFields,null!=t.parent&&(n.parentId=t.parent.id);var a={};return a.requestParams=n,a.URI="/api/admin/callService",W(a).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(Ba({state:t,info:["Save Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",error:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function Ua(e){var t=e.state,n=e.id;return function(e){var a={action:"DELETE"};a.itemId=n,a.service="ADMIN_PREF_SVC";var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(Ba({state:t,info:["Delete Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function ja(e){var t=e.id,n=e.appPrefs;return function(e){var a={action:"ITEM",service:"ADMIN_PREF_SVC"};a.prefFormKeys=new Array("ADMIN_PREFERENCE_FORM"),null!=t&&(a.itemId=t);var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_PREFERENCE_ITEM",responseJson:t,appPrefs:n}):K(t,e)})).catch((function(e){throw e}))}}function xa(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"ADMIN_PREFERENCE_INPUT_CHANGE",params:a})}}function Va(e){var t=e.value;return function(e){e({type:"ADMIN_PREFERENCE_SEARCH_CHANGE",value:t})}}function Ha(e){var t=e.state,n=e.orderCriteria;return function(e){e({type:"ADMIN_PREFERENCE_ORDERBY",orderCriteria:n}),e(Ba({state:t,orderCriteria:n}))}}function Ja(){return function(e){e({type:"ADMIN_PREFERENCE_CLEAR_PREFERENCE"})}}function Ya(){return function(e){e({type:"ADMIN_PREFERENCE_GOBACK"})}}function qa(e){var t=e.successes,n=e.errors;return function(e){e({type:"ADMIN_PREFERENCE_SET_STATUS",successes:t,errors:n})}}function Wa(e){var t=e.item;return function(e){e({type:"ADMIN_PREFERENCE_OPEN_DELETE_MODAL",item:t})}}function za(){return function(e){e({type:"ADMIN_PREFERENCE_CLOSE_DELETE_MODAL"})}}function Ka(e){e.state;return function(e){e({type:"ADMIN_PREFERENCE_INIT_SUBVIEW"})}}function Xa(e){e.state;return function(e){}}function Za(e){e.state;return function(e){}}function $a(e){e.state;return function(e){}}function Qa(e){var t=e.state;return function(e){e({type:"ADMIN_PREFERENCE_CANCEL"}),e(Ba({state:t}))}}var er=function(e){var t,n=e.itemState,a=e.header,r=e.listRows,l=e.appPrefs,i=e.parent,s=e.onListLimitChange,o=e.onSearchClick,c=e.onSearchChange,u=e.onPaginationClick,m=(e.onFilterClick,e.onHeader),p=e.onOrderBy,f=e.striped,d=e.columns,E="list-group list-unstyled";return 1==f&&(E="list-group list-unstyled list-group-striped"),null!=m&&(t=g.createElement("li",null,g.createElement("i",{className:"fa fa-plus",title:"Add",onClick:m()}))),g.createElement("div",{className:"col-md-12 col-sm-12 col-xs-12"},g.createElement("div",{className:"x_panel"},g.createElement("div",{className:"x_title"},a,g.createElement("ul",{className:"navbar-right panel_toolbox"},t)),g.createElement("div",{className:"x_content"},g.createElement("div",{className:"row"},g.createElement(oa,{name:n.pageName+"-LISTLIMIT",appPrefs:l,listLimit:n.listLimit,onListLimitChange:s}),g.createElement(ua,{itemState:n,name:n.pageName+"-ORDERBY",appPrefs:l,columns:d,parent:i,orderCriteria:n.orderCriteria,onChange:p}),g.createElement(da,{itemState:n,name:n.pageName+"-SEARCHBY",appPrefs:l,columns:d,parent:i,onChange:o}),g.createElement(pa,{name:n.pageName+"-SEARCH",onChange:c,onClick:o})),g.createElement("br",null),g.createElement("ul",{className:E},r),g.createElement(Aa,{currentSegment:n[n.pageName+"_PAGINATION"],appPrefs:l,itemCount:n.itemCount,listStart:n.listStart,listLimit:n.listLimit,onClick:u}))))};er.propTypes={itemState:$().object.isRequired,header:$().string,listRows:$().array,appPrefs:$().object,parent:$().object,onListLimitChange:$().func,onSearchChange:$().func,onSearchClick:$().func,onPaginationClick:$().func,onFilterClick:$().func,onHeader:$().func,onOrderBy:$().func,striped:$().bool,columns:$().array};const tr=er;function nr(e){var t=e.itemState,n=e.appPrefs,a=e.onListLimitChange,r=e.onSearchChange,l=e.onSearchClick,i=e.onPaginationClick,s=e.onOrderBy,o=e.onOption,c=e.closeModal,u=e.session,m=[];null!=t.prefLabels&&null!=t.prefLabels.ADMIN_PREFERENCE_PAGE&&(m=t.prefLabels.ADMIN_PREFERENCE_PAGE);var p="",f=null;null!=t.parent&&(f=t.parent.title),null!=t.prefTexts.ADMIN_PREFERENCE_PAGE&&null!=t.prefTexts.ADMIN_PREFERENCE_PAGE.ADMIN_PREFERENCE_PAGE_HEADER&&(p=t.prefTexts.ADMIN_PREFERENCE_PAGE.ADMIN_PREFERENCE_PAGE_HEADER.value);var d=[],E=t.items;if(null!=E&&E.length>0)for(var A=0;A<E.length;A++){var S=[],v="Disabled";1==E[A].active&&(v="Active");var C="";null!=E[A].created&&(C=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"short",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(E[A].created).toDate()));var h="";null!=E[A].modified&&(h=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"short",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(E[A].modified).toDate())),S.push(g.createElement("div",{key:0},g.createElement("div",{className:"row"},g.createElement("div",{className:"col-md-12"}," ",E[A].title.langTexts[0].text)),g.createElement("div",{className:"col-md-4"},g.createElement("div",null,"Category: ",E[A].category),g.createElement("div",null,"Code: ",E[A].name)),g.createElement("div",{className:"col-md-4"},g.createElement("div",null,"Status: ",v),g.createElement("div",null,g.createElement("small",null,"Created: ",C)),g.createElement("div",null,g.createElement("small",null,"Modified: ",h))),g.createElement("div",{className:"col-md-4"},g.createElement("i",{className:"fa-regular fa-pen-to-square thub-1",onClick:function(){return o("MODIFY")}}),g.createElement("i",{className:"fa fa-trash fa-1",onClick:function(){return o("DELETE")}}),g.createElement("i",{className:"fa fa-id-card fa-1","aria-hidden":"true"}),g.createElement("i",{className:"fa fa-tag fa-1","aria-hidden":"true"}),g.createElement("i",{className:"fa fa-file-text fa-1","aria-hidden":"true"})))),d.push(g.createElement("li",{key:E[A].id,scope:"row",className:"row"},S))}else d.push(g.createElement("li",{key:"1"},g.createElement("div",{id:n.prefTexts.GLOBAL_PAGE.GLOBAL_PAGE_LIST_EMPTY.name}," ",n.prefTexts.GLOBAL_PAGE.GLOBAL_PAGE_LIST_EMPTY.value)));var _="Delete ";null!=t.selected&&null!=t.selected.title&&(_+=t.selected.title.defaultText);var I=!1;return"small"===u.viewPort&&(I=!0),g.createElement("div",{className:"main_content"},I?g.createElement(tr,{itemState:t,header:p,columns:m,appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o,striped:!0}):g.createElement(Ca,{itemState:t,header:p,columns:m,labelGroup:"TABLE1",appPrefs:n,parent:f,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o}),g.createElement(ga,{isOpen:t.isDeleteModalOpen,onClose:function(){return c()}},g.createElement("div",{className:"modal-dialog"},g.createElement("div",{className:"modal-content"},g.createElement("div",{className:"modal-header"},g.createElement("button",{type:"button",className:"close","data-dismiss":"modal","aria-hidden":"true"},g.createElement("i",{className:"fa fa-close"})),g.createElement("h4",{className:"modal-title"},_)),g.createElement("div",{className:"modal-body"},g.createElement("h3",null,"Are you sure you want to delete?")),g.createElement("div",{className:"modal-footer"},g.createElement("button",{type:"button",className:"btn btn-primary",onClick:function(){return o("DELETEFINAL",t.selected)}},"Delete"),g.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return c()}},"Close"))))))}function ar(e){var t=e.itemState,n=e.appPrefs,a=e.onSave,r=e.onCancel,l=e.inputChange;return g.createElement(Mt,{itemState:t,formName:"ADMIN_PREFERENCE_FORM",formTitle:"Preferences",formGroup:"FORM1",appPrefs:n,onSave:a,onCancel:r,inputChange:l})}nr.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onListLimitChange:$().func,onSearchChange:$().func,onSearchClick:$().func,onPaginationClick:$().func,onOrderBy:$().func,onOption:$().func,closeModal:$().func,onClickTabItem:$().func,onToggleItem:$().func,inputChange:$().func,openFormView:$().func,openLabelView:$().func,openTextView:$().func,openOptionView:$().func,session:$().object},ar.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onSave:$().func.isRequired,onCancel:$().func.isRequired,inputChange:$().func.isRequired};const rr=function(e){var t=e.location,n=e.navigate,a=(0,J.v9)((function(e){return e.adminpreferences})),r=(0,J.v9)((function(e){return e.session})),l=(0,J.v9)((function(e){return e.appPrefs})),i=(0,J.I0)();(0,g.useEffect)((function(){i(Fa({}))}),[]);var s=function(e,t,n,r){Pt.inputChange({state:a,actions:o,dispatch:i,appPrefs:l,type:e,field:t,value:n,event:r})},c=function(e,t){q({level:"TRACE",loc:"PreferencesContainer::onMoveSave",msg:"test"}),null!=t&&i(Za({state:a,code:e,item:t,stateSubView:preferenceSubView}))};return q({level:"TRACE",loc:"PreferencesContainer::render",msg:"test "}),"MODIFY"==a.view?(q({level:"TRACE",loc:"PreferencesContainer::render",msg:"view PreferenceModifyView"}),g.createElement(ar,{itemState:a,appPrefs:l,onSave:function(){Pt.onSave({state:a,actions:o,dispatch:i,appPrefs:l,form:"ADMIN_PREFERENCE_FORM"})},onCancel:function(){Pt.onCancel({state:a,actions:o,dispatch:i})},inputChange:s})):"MAIN"==a.view&&null!=a.items?(q({level:"TRACE",loc:"PreferencesContainer::render",msg:"view PreferenceView"}),g.createElement(nr,{itemState:a,appPrefs:l,onListLimitChange:function(e,t){Pt.onListLimitChange({state:a,actions:o,dispatch:i,appPrefs:l,fieldName:e,event:t})},onSearchChange:function(e,t){Pt.onSearchChange({state:a,actions:o,dispatch:i,appPrefs:l,field:e,event:t})},onSearchClick:function(e,t){Pt.onSearchClick({state:a,actions:o,dispatch:i,field:e,event:t})},onPaginationClick:function(e){Pt.onPaginationClick({state:a,actions:o,dispatch:i,value:e})},onOrderBy:function(e,t){Pt.onOrderBy({state:a,actions:o,dispatch:i,appPrefs:l,field:e,event:t})},onOption:function(e,r){if(q({level:"TRACE",loc:"PreferencesContainer::onOption",msg:" code "+e}),!Pt.onOptionBase({state:a,actions:o,dispatch:i,code:e,appPrefs:l,item:r})){var s=t.pathname.substr(0,t.pathname.lastIndexOf("/"));switch(e){case"SHOW_FORMFIELDS":n(s+="/prefsub",{state:{parent:r,subType:"FORM"}});break;case"SHOW_LABELS":n(s+="/prefsub",{state:{parent:r,subType:"LABEL"}});break;case"SHOW_TEXTS":n(s+="/prefsub",{state:{parent:r,subType:"TEXT"}});break;case"SHOW_OPTIONS":n(s+="/prefsub",{state:{parent:r,subType:"OPTION"}});break;case"MOVESELECT":!function(e){q({level:"TRACE",loc:"PreferencesContainer::onMoveSelect",msg:"test"}),null!=e&&i(Xa({state:a,stateSubView:preferenceSubView,item:e}))}(r);break;case"MOVEABOVE":case"MOVEBELOW":c(e,r);break;case"MOVECANCEL":q({level:"TRACE",loc:"PreferencesContainer::onMoveCancel",msg:"test"}),i($a({state:a,stateSubView:preferenceSubView}))}}},closeModal:function(){Pt.closeModal({actions:o,dispatch:i})},inputChange:s,openFormView:function(e){q({level:"TRACE",loc:"PreferencesContainer::openFormView",msg:"id "+e.id}),i(Ka({itemState:preferenceSubView,item:e,viewType:"FORM",orderCriteria:[{orderColumn:"ADMIN_FORMFIELD_TABLE_TITLE",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"ADMIN_FORMFIELD_TABLE_TITLE"}],listStart:0,listLimit:20}))},openLabelView:function(e){q({level:"TRACE",loc:"PreferencesContainer::openLabelView",msg:"id "+e.id}),i(Ka({itemState:preferenceSubView,item:e,viewType:"LABEL",orderCriteria:[{orderColumn:"ADMIN_LABEL_TABLE_TITLE",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"ADMIN_LABEL_TABLE_TITLE"}],listStart:0,listLimit:20}))},openTextView:function(e){q({level:"TRACE",loc:"PreferencesContainer::openTextView",msg:"id "+e.id}),i(Ka({itemState:preferenceSubView,item:e,viewType:"TEXT",orderCriteria:[{orderColumn:"ADMIN_TEXT_TABLE_TITLE",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"ADMIN_TEXT_TABLE_TITLE"}],listStart:0,listLimit:20}))},openOptionView:function(e){q({level:"TRACE",loc:"PreferencesContainer::openOptionView",msg:"id "+e.id}),i(Ka({itemState:preferenceSubView,item:e,viewType:"OPTION",orderCriteria:[{orderColumn:"ADMIN_OPTION_TABLE_TITLE",orderDir:"ASC"}],searchCriteria:[{searchValue:"",searchColumn:"ADMIN_OPTION_TABLE_TITLE"}],listStart:0,listLimit:20}))},session:r})):g.createElement("div",null," Loading ")};function lr(e){var t=e.parent,n=e.subType;return function(e){var a={action:"INIT"};null!=n&&("FORM"===n?(a.service="ADMIN_PREF_FORMFIELD_SVC",a.prefTextKeys=new Array("ADMIN_FORMFIELD_PAGE"),a.prefLabelKeys=new Array("ADMIN_FORMFIELD_PAGE")):"LABEL"===n?(a.service="ADMIN_PREF_LABEL_SVC",a.prefTextKeys=new Array("ADMIN_LABEL_PAGE"),a.prefLabelKeys=new Array("ADMIN_LABEL_PAGE")):"TEXT"===n?(a.service="ADMIN_PREF_TEXT_SVC",a.prefTextKeys=new Array("ADMIN_TEXT_PAGE"),a.prefLabelKeys=new Array("ADMIN_TEXT_PAGE")):"OPTION"===n&&(a.service="ADMIN_PREF_OPTION_SVC",a.prefTextKeys=new Array("ADMIN_OPTION_PAGE"),a.prefLabelKeys=new Array("ADMIN_OPTION_PAGE"))),null!=t?(a.parentId=t.id,e({type:"ADMIN_PREFERENCE_SUB_ADD_PARENT",parent:t})):e({type:"ADMIN_PREFERENCE_SUB_CLEAR_PARENT"});var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(a){null!=a&&null==a.protocalError?null!=a.status&&"ACTIONFAILED"==a.status?e({type:"SHOW_STATUS",error:a.errors}):e({type:"ADMIN_PREFERENCE_SUB_INIT",responseJson:a,parent:t,subType:n}):K(a,e)})).catch((function(e){throw e}))}}function ir(e){var t=e.state,n=e.listStart,a=e.listLimit,r=e.searchCriteria,l=e.orderCriteria,i=e.info,s=e.paginationSegment;return function(e){var o={action:"LIST"},c="preferences";"FORM"===t.subType?(o.service="ADMIN_PREF_FORMFIELD_SVC",c="pref_formfields"):"LABEL"===t.subType?(o.service="ADMIN_PREF_LABEL_SVC",c="pref_labels"):"TEXT"===t.subType?(o.service="ADMIN_PREF_TEXT_SVC",c="pref_texts"):"OPTION"===t.subType&&(o.service="ADMIN_PREF_OPTION_SVC",c="pref_options"),null!=t.parent&&(o.parentId=t.parent.id),o.listStart=null!=n?n:t.listStart,o.listLimit=null!=a?a:t.listLimit,o.searchCriteria=null!=r?r:t.searchCriteria,o.orderCriteria=null!=l?l:t.orderCriteria;var u={page:c,orderCriteria:o.orderCriteria,listStart:o.listStart,listLimit:o.listLimit};e({type:"USER_PREF_CHANGE",userPrefChange:u});var m={};return m.requestParams=o,m.URI="/api/admin/callService",W(m).then((function(t){null!=t&&null==t.protocalError?(null!=t.status&&"ACTIONFAILED"==t.status?e({type:"SHOW_STATUS",error:t.errors}):e({type:"ADMIN_PREFERENCE_SUB_LIST",responseJson:t,paginationSegment:s}),null!=i&&e({type:"SHOW_STATUS",info:i})):K(t,e)})).catch((function(e){throw e}))}}function sr(e){var t=e.state,n=e.listLimit;return function(e){e({type:"ADMIN_PREFERENCE_SUB_LISTLIMIT",listLimit:n}),e(ir({state:t,listLimit:n}))}}function or(e){var t=e.state,n=e.searchCriteria;return function(e){e({type:"ADMIN_PREFERENCE_SUB_SEARCH",searchCriteria:n}),e(ir({state:t,searchCriteria:n,listStart:0}))}}function cr(e){var t=e.state,n=e.parent;return function(e){var a={action:"SAVE"};"FORM"===t.subType?a.service="ADMIN_PREF_FORMFIELD_SVC":"LABEL"===t.subType?a.service="ADMIN_PREF_LABEL_SVC":"TEXT"===t.subType?a.service="ADMIN_PREF_TEXT_SVC":"OPTION"===t.subType&&(a.service="ADMIN_PREF_OPTION_SVC"),a.inputFields=t.inputFields,null!=n&&(a.parentId=n.id);var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(ir({state:t,info:["Save Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",error:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function ur(e){var t=e.state,n=e.id;return function(e){var a={action:"DELETE"};a.itemId=n,"FORM"===t.subType?a.service="ADMIN_PREF_FORMFIELD_SVC":"LABEL"===t.subType?a.service="ADMIN_PREF_LABEL_SVC":"TEXT"===t.subType?a.service="ADMIN_PREF_TEXT_SVC":"OPTION"===t.subType&&(a.service="ADMIN_PREF_OPTION_SVC");var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(ir({state:t,info:["Delete Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function mr(e){var t=e.state,n=e.id,a=e.appPrefs;return function(e){var r={action:"ITEM"};"FORM"===t.subType?(r.service="ADMIN_PREF_FORMFIELD_SVC",r.prefFormKeys=new Array("ADMIN_FORMFIELD_FORM")):"LABEL"===t.subType?(r.service="ADMIN_PREF_LABEL_SVC",r.prefFormKeys=new Array("ADMIN_LABEL_FORM")):"TEXT"===t.subType?(r.service="ADMIN_PREF_TEXT_SVC",r.prefFormKeys=new Array("ADMIN_TEXT_FORM")):"OPTION"===t.subType&&(r.service="ADMIN_PREF_OPTION_SVC",r.prefFormKeys=new Array("ADMIN_OPTION_FORM")),null!=n&&(r.itemId=n);var l={};return l.requestParams=r,l.URI="/api/admin/callService",W(l).then((function(n){null!=n&&null==n.protocalError?e({type:"ADMIN_PREFERENCE_SUB_ITEM",responseJson:n,subType:t.subType,appPrefs:a}):K(n,e)})).catch((function(e){throw e}))}}function pr(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"ADMIN_PREFERENCE_SUB_INPUT_CHANGE",params:a})}}function fr(e){var t=e.value;return function(e){e({type:"ADMIN_PREFERENCE_SUB_SEARCH_CHANGE",value:t})}}function dr(e){var t=e.state,n=e.orderCriteria;return function(e){e({type:"ADMIN_PREFERENCE_SUB_ORDERBY",orderCriteria:n}),e(ir({state:t,stateSubView,orderCriteria:n}))}}function Er(){return function(e){e({type:"ADMIN_PREFERENCE_CLEAR_PREFERENCE"})}}function Ar(){return function(e){e({type:"ADMIN_PREFERENCE_GOBACK"})}}function Sr(e){var t=e.state,n=e.item;return function(e){e({type:"ADMIN_PREFERENCE_SUB_MOVE_SELECT",item:n}),e(ir({state:t,item:n,orderCriteria:[],searchCriteria:[]}))}}function vr(e){var t=e.state;return function(e){e({type:"ADMIN_PREFERENCE_SUB_MOVE_CANCEL"}),e(ir({state:t}))}}function Cr(e){var t=e.state,n=e.code,a=e.item;return function(e){var r={action:"MOVE_SAVE"};null!=t&&("FORM"===t.subType?r.service="ADMIN_PREF_FORMFIELD_SVC":"LABEL"===t.subType?r.service="ADMIN_PREF_LABEL_SVC":"TEXT"===t.subType?r.service="ADMIN_PREF_TEXT_SVC":"OPTION"===t.subType&&(r.service="ADMIN_PREF_OPTION_SVC")),r.code=n,r.moveSelectedItemId=t.moveSelectedItem.id,r.itemId=a.id,null!=t.parent&&(r.parentId=t.parent.id);var l={};return l.requestParams=r,l.URI="/api/admin/callService",W(l).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?(e({type:"ADMIN_PREFERENCE_SUB_MOVE_CANCEL"}),e(ir({state:t,info:["Save Successful"]}))):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",error:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function hr(e){var t=e.successes,n=e.errors;return function(e){e({type:"ADMIN_PREFERENCE_SUB_SET_STATUS",successes:t,errors:n})}}function _r(e){var t=e.item;return function(e){e({type:"ADMIN_PREFERENCE_SUB_OPEN_DELETE_MODAL",item:t})}}function gr(){return function(e){e({type:"ADMIN_PREFERENCE_SUB_CLOSE_DELETE_MODAL"})}}function Ir(e){var t=e.state;return function(e){e({type:"ADMIN_PREFERENCE_SUB_CANCEL"}),e(ir({state:t}))}}function Nr(e){var t=e.itemState,n=e.appPrefs,a=e.onListLimitChange,r=e.onSearchChange,l=e.onSearchClick,i=e.onPaginationClick,s=e.onOrderBy,o=e.onOption,c=e.closeModal,u=e.session,m=e.goBack,p=[],f="TABLE1";null!=t.prefLabels&&(null!=t.prefLabels.ADMIN_FORMFIELD_PAGE&&"FORM"===t.subType?p=t.prefLabels.ADMIN_FORMFIELD_PAGE:null!=t.prefLabels.ADMIN_LABEL_PAGE&&"LABEL"===t.subType?p=t.prefLabels.ADMIN_LABEL_PAGE:null!=t.prefLabels.ADMIN_TEXT_PAGE&&"TEXT"===t.subType?p=t.prefLabels.ADMIN_TEXT_PAGE:null!=t.prefLabels.ADMIN_OPTION_PAGE&&"OPTION"===t.subType&&(p=t.prefLabels.ADMIN_OPTION_PAGE,f=null));var d="",E=null;null!=t.parent&&(E=t.parent.title.langTexts[0].text),null!=t.prefTexts&&("FORM"===t.subType&&null!=t.prefTexts.ADMIN_FORMFIELD_PAGE&&null!=t.prefTexts.ADMIN_FORMFIELD_PAGE.ADMIN_FORMFIELD_PAGE_HEADER?d=t.prefTexts.ADMIN_FORMFIELD_PAGE.ADMIN_FORMFIELD_PAGE_HEADER.value:"LABEL"===t.subType&&null!=t.prefTexts.ADMIN_LABEL_PAGE&&null!=t.prefTexts.ADMIN_LABEL_PAGE.ADMIN_LABEL_PAGE_HEADER?d=t.prefTexts.ADMIN_LABEL_PAGE.ADMIN_LABEL_PAGE_HEADER.value:"TEXT"===t.subType&&null!=t.prefTexts.ADMIN_TEXT_PAGE&&null!=t.prefTexts.ADMIN_TEXT_PAGE.ADMIN_TEXT_PAGE_HEADER?d=t.prefTexts.ADMIN_TEXT_PAGE.ADMIN_TEXT_PAGE_HEADER.value:"OPTION"===t.subType&&null!=t.prefTexts.ADMIN_OPTION_PAGE&&null!=t.prefTexts.ADMIN_OPTION_PAGE.ADMIN_OPTION_PAGE_HEADER&&(d=t.prefTexts.ADMIN_OPTION_PAGE.ADMIN_OPTION_PAGE_HEADER.value));var A="";null!=t.moveSelectedItem&&(A="Moving:"+t.moveSelectedItem.name),null!=m&&null!=E&&""!=E&&(d=g.createElement("span",null,d," : ",g.createElement("a",{onClick:function(){return m()},"aria-hidden":"true"},E)));var S=[],v=t.items;if(null!=v&&v.length>0)for(var C=0;C<v.length;C++){var h=[],_="Disabled";1==v[C].active&&(_="Active");var I="";null!=v[C].created&&(I=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"short",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(v[C].created).toDate()));var N="";null!=v[C].modified&&(N=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"short",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(v[C].modified).toDate())),h.push(g.createElement("div",{key:0},g.createElement("div",{className:"row"},g.createElement("div",{className:"col-md-12"}," ",v[C].title.langTexts[0].text)),g.createElement("div",{className:"col-md-4"},g.createElement("div",null,"Category: ",v[C].category),g.createElement("div",null,"Code: ",v[C].name)),g.createElement("div",{className:"col-md-4"},g.createElement("div",null,"Status: ",_),g.createElement("div",null,g.createElement("small",null,"Created: ",I)),g.createElement("div",null,g.createElement("small",null,"Modified: ",N))),g.createElement("div",{className:"col-md-4"},g.createElement("i",{className:"fa-regular fa-pen-to-square thub-1",onClick:function(){return o("MODIFY")}}),g.createElement("i",{className:"fa fa-trash fa-1",onClick:function(){return o("DELETE")}}),g.createElement("i",{className:"fa fa-id-card fa-1","aria-hidden":"true"}),g.createElement("i",{className:"fa fa-tag fa-1","aria-hidden":"true"}),g.createElement("i",{className:"fa fa-file-text fa-1","aria-hidden":"true"})))),S.push(g.createElement("li",{key:v[C].id,scope:"row",className:"row"},h))}else S.push(g.createElement("li",{key:"1"},g.createElement("div",{id:n.prefTexts.GLOBAL_PAGE.GLOBAL_PAGE_LIST_EMPTY.name}," ",n.prefTexts.GLOBAL_PAGE.GLOBAL_PAGE_LIST_EMPTY.value)));var O="Delete ";null!=t.selected&&null!=t.selected.title&&(O+=t.selected.title.defaultText);var T=!1;return"small"===u.viewPort&&(T=!0),g.createElement("div",{className:"main_content"},T?g.createElement(tr,{itemState:t,header:d,parent:E,columns:p,appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o,striped:!0}):g.createElement(Ca,{itemState:t,header:d,columns:p,labelGroup:f,appPrefs:n,parent:E,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o,orderCriteria:t.orderCriteria,searchCriteria:t.searchCriteria,moveSelectedItem:t.moveSelectedItem,moveHeader:A,goBack:m}),g.createElement(ga,{isOpen:t.isDeleteModalOpen,onClose:function(){return c()}},g.createElement("div",{className:"modal-dialog"},g.createElement("div",{className:"modal-content"},g.createElement("div",{className:"modal-header"},g.createElement("button",{type:"button",className:"close","data-dismiss":"modal","aria-hidden":"true"},g.createElement("i",{className:"fa fa-close"})),g.createElement("h4",{className:"modal-title"},O)),g.createElement("div",{className:"modal-body"},g.createElement("h3",null,"Are you sure you want to delete?")),g.createElement("div",{className:"modal-footer"},g.createElement("button",{type:"button",className:"btn btn-primary",onClick:function(){return o("DELETEFINAL",t.selected)}},"Delete"),g.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return c()}},"Close"))))))}function Or(e){var t=e.itemState,n=e.appPrefs,a=e.onSave,r=e.onCancel,l=e.inputChange,i="ADMIN_PREFERENCE_FORM",s="Preferences",o="FORM1";return"FORM"===t.subType?(i="ADMIN_FORMFIELD_FORM",s="Formfields",o="FORM1"):"LABEL"===t.subType?(i="ADMIN_LABEL_FORM",s="Labels",o="FORM1"):"TEXT"===t.subType?(i="ADMIN_TEXT_FORM",s="Texts",o="FORM1"):"OPTION"===t.subType&&(i="ADMIN_OPTION_FORM",s="Options",o="FORM1"),g.createElement(Mt,{itemState:t,formName:i,formTitle:s,formGroup:o,appPrefs:n,onSave:a,onCancel:r,inputChange:l})}Nr.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onListLimitChange:$().func,onSearchChange:$().func,onSearchClick:$().func,onPaginationClick:$().func,onOrderBy:$().func,onOption:$().func,closeModal:$().func,onClickTabItem:$().func,onToggleItem:$().func,inputChange:$().func},Or.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onSave:$().func.isRequired,onCancel:$().func.isRequired,inputChange:$().func.isRequired,viewType:$().string};const Tr=function(e){var t=e.location,n=e.navigate,a=(0,J.v9)((function(e){return e.adminpreferenceSub})),r=(0,J.v9)((function(e){return e.session})),l=(0,J.v9)((function(e){return e.appPrefs})),i=(0,J.I0)();(0,g.useEffect)((function(){null!=t.state&&null!=t.state.parent?i(lr({parent:t.state.parent,subType:t.state.subType})):i(lr({}))}),[]);var s=function(e,t,n,r){Pt.inputChange({state:a,actions:c,dispatch:i,appPrefs:l,type:e,field:t,value:n,event:r})},o=function(e,t){q({level:"TRACE",loc:"PreferencesContainer::onMoveSave",msg:"test"}),null!=t&&i(Cr({state:a,code:e,item:t}))};return q({level:"TRACE",loc:"PreferencesContainer::render",msg:"test "}),"MODIFY"==a.view?(q({level:"TRACE",loc:"PreferenceSubContainer::render",msg:"view PreferenceSubModifyView"}),g.createElement(Or,{itemState:a,appPrefs:l,onSave:function(){q({level:"TRACE",loc:"PreferencesContainer::onSavePreference",msg:"test"});var e=null;null!=a&&null!=a.subType?"FORM"===a.subType?e=Ae(a.prefForms.ADMIN_FORMFIELD_FORM,a.inputFields,l.prefGlobal.LANGUAGES,"FORM1"):"LABEL"===a.subType?e=Ae(a.prefForms.ADMIN_LABEL_FORM,a.inputFields,l.prefGlobal.LANGUAGES,"FORM1"):"TEXT"===a.subType?e=Ae(a.prefForms.ADMIN_TEXT_FORM,a.inputFields,l.prefGlobal.LANGUAGES,"FORM1"):"OPTION"===a.subType&&(e=Ae(a.prefForms.ADMIN_OPTION_FORM,a.inputFields,l.prefGlobal.LANGUAGES,"FORM1")):e=Ae(a.prefForms.ADMIN_PREFERENCE_FORM,a.inputFields,l.prefGlobal.LANGUAGES,"FORM1"),e.isValid?i(cr({state:a,parent:a.parent})):i(hr({errors:e.errorMap}))},onCancel:function(){Pt.onCancel({state:a,actions:c,dispatch:i})},inputChange:s})):"MAIN"==a.view&&null!=a.items?(q({level:"TRACE",loc:"PreferenceSubContainer::render",msg:"view PreferenceSubView"}),g.createElement(Nr,{itemState:a,appPrefs:l,onListLimitChange:function(e,t){Pt.onListLimitChange({state:a,actions:c,dispatch:i,appPrefs:l,fieldName:e,event:t})},onSearchChange:function(e,t){Pt.onSearchChange({state:a,actions:c,dispatch:i,appPrefs:l,field:e,event:t})},onSearchClick:function(e,t){Pt.onSearchClick({state:a,actions:c,dispatch:i,field:e,event:t})},onPaginationClick:function(e){Pt.onPaginationClick({state:a,actions:c,dispatch:i,value:e})},onOrderBy:function(e,t){Pt.onOrderBy({state:a,actions:c,dispatch:i,appPrefs:l,field:e,event:t})},onOption:function(e,t){if(q({level:"TRACE",loc:"PreferencesContainer::onOption",msg:" code "+e}),!Pt.onOptionBase({state:a,actions:c,dispatch:i,code:e,appPrefs:l,item:t}))switch(e){case"MOVESELECT":!function(e){q({level:"TRACE",loc:"PreferencesContainer::onMoveSelect",msg:"test"}),null!=e&&i(Sr({state:a,item:e}))}(t);break;case"MOVEABOVE":case"MOVEBELOW":o(e,t);break;case"MOVECANCEL":q({level:"TRACE",loc:"PreferencesContainer::onMoveCancel",msg:"test"}),i(vr({state:a}))}},closeModal:function(){Pt.closeModal({actions:c,dispatch:i})},inputChange:s,session:r,goBack:function(){Pt.goBack({navigate:n})}})):g.createElement("div",null," Loading ")};function br(e){e.currentState,e.fields,e.texts,e.labels,e.onChangeLogin,e.onChangeRegistration,e.fieldChangeEvent,e.onForgotPassword,e.fieldBlurEvent,e.buttonClick,e.handleChange,e.changeView;return g.createElement("div",null,g.createElement("div",null," Users Page "))}br.propTypes={currentState:$().object,fields:$().object,texts:$().object,labels:$().object,onChangeLogin:$().func,onChangeRegistration:$().func,onForgotPassword:$().func,fieldChangeEvent:$().func,fieldBlurEvent:$().func,buttonClick:$().func,handleChange:$().func,changeView:$().func};const Mr=function(e){var t=e.location,n=e.navigate,a=((0,J.v9)((function(e){return e.session})),(0,J.v9)((function(e){return e.appMenus}))),r=(0,J.v9)((function(e){return e.appPrefs}));(0,J.I0)(),q({level:"TRACE",loc:"SubMenuContainer::render",msg:"Hi there"});var l=t.pathname,i=a[r.adminMenu],s=[];if(null!=i)for(var o=0;o<i.length;o++)i[o].values[0].rendered&&l.includes(i[o].values[0].href)&&null!=i[o].children&&i[o].children.length>0&&(s=i[o].children);return g.createElement(br,{menus:s,changeTab:function(e){n(e)}})};function Rr(e){e.parent,e.parentType;return function(e){var t={action:"INIT",service:"ADMIN_USER_SVC"};t.prefTextKeys=new Array("ADMIN_USER_PAGE"),t.prefLabelKeys=new Array("ADMIN_USER_PAGE");var n={};return n.requestParams=t,n.URI="/api/admin/callService",W(n).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_USER_INIT",responseJson:t}):K(t,e)})).catch((function(e){throw e}))}}function Lr(e){var t=e.state,n=e.listStart,a=e.listLimit,r=e.searchCriteria,l=e.orderCriteria,i=e.info,s=e.paginationSegment;return function(e){var o={action:"LIST",service:"ADMIN_USER_SVC"};o.listStart=null!=n?n:t.listStart,o.listLimit=null!=a?a:t.listLimit,o.searchCriteria=null!=r?r:t.searchCriteria,o.orderCriteria=null!=l?l:t.orderCriteria;var c={page:"users",orderCriteria:o.orderCriteria,listStart:o.listStart,listLimit:o.listLimit};e({type:"USER_PREF_CHANGE",userPrefChange:c});var u={};return u.requestParams=o,u.URI="/api/admin/callService",W(u).then((function(t){null!=t&&null==t.protocalError?(e({type:"ADMIN_USER_LIST",responseJson:t,paginationSegment:s}),null!=i&&e({type:"SHOW_STATUS",info:i})):K(t,e)})).catch((function(e){throw e}))}}function yr(e){var t=e.state,n=e.listLimit;return function(e){e({type:"ADMIN_USER_LISTLIMIT",listLimit:n}),e(Lr({state:t,listLimit:n}))}}function Pr(e){var t=e.state,n=e.searchCriteria;return function(e){e({type:"ADMIN_USER_SEARCH",searchCriteria:n}),e(Lr({state:t,searchCriteria:n,listStart:0}))}}function Dr(e){var t=e.state;return function(e){var n={action:"SAVE",service:"ADMIN_USER_SVC"};n.inputFields=t.inputFields;var a={};return a.requestParams=n,a.URI="/api/admin/callService",W(a).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(Lr({state:t,info:["Save Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",error:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function Fr(e){var t=e.state,n=e.id;return function(e){var a={action:"DELETE",service:"ADMIN_USER_SVC"};a.itemId=n;var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(Lr({state:t,info:["Delete Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function Br(e){var t=e.id,n=e.appPrefs;return function(e){var a={action:"ITEM",service:"ADMIN_USER_SVC"};a.prefFormKeys=new Array("ADMIN_USER_FORM"),null!=t&&(a.itemId=t);var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_USER_ITEM",responseJson:t,appPrefs:n}):K(t,e)})).catch((function(e){throw e}))}}function wr(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"ADMIN_USER_INPUT_CHANGE",params:a})}}function kr(e){var t=e.field,n=e.value;return function(e){var a={};a.field=t,a.value=n,e({type:"ADMIN_USER_INPUT_CHANGE",params:a})}}function Gr(e){var t=e.value;return function(e){e({type:"ADMIN_USER_SEARCH_CHANGE",value:t})}}function Ur(e){var t=e.state,n=e.orderCriteria;return function(e){e({type:"ADMIN_USER_ORDERBY",orderCriteria:n}),e(Lr({state:t,orderCriteria:n}))}}function jr(){return function(e){e({type:"ADMIN_USER_CLEAR_ITEM"})}}function xr(e){return function(t){var n={};n.field=e,t({type:"ADMIN_USER_CLEAR_FIELD",params:n})}}function Vr(e){var t=e.successes,n=e.errors;return function(e){e({type:"ADMIN_USER_SET_STATUS",successes:t,errors:n})}}function Hr(e){var t=e.item;return function(e){e({type:"ADMIN_USER_OPEN_DELETE_MODAL",item:t})}}function Jr(){return function(e){e({type:"ADMIN_USER_CLOSE_DELETE_MODAL"})}}function Yr(e){var t=e.state;return function(e){e({type:"ADMIN_USER_CANCEL"}),e(Lr({state:t}))}}var qr=function(e){var t=e.header,n=e.itemState,a=e.columns,r=e.appPrefs,l=e.parent,i=e.onListLimitChange,s=e.onSearchClick,o=e.onSearchChange,c=e.onPaginationClick,u=e.onOrderBy,m=(e.onHeader,e.onOption);e.goBack;var p=[];if(null!=n&&null!=n.items&&n.items.length>0)for(var f=function(e){for(var t=[],i=[],s=0;s<a.length;s++){if(null!=a[s].optionalParams){if("continue"===function(){var t=JSON.parse(a[s].optionalParams),o="",c=a[s].value;if(null!=t.conditionParent&&"NotNull"==t.conditionParent&&(null==l||""==l))return"continue";if(null!=t.field)o=n.items[e][t.field];else if(null!=t.fieldML)if(null!=n.items[e][t.fieldML].langTexts&&n.items[e][t.fieldML].langTexts.length>0){for(var u=!1,p=0;p<n.items[e][t.fieldML].langTexts.length;p++)if(n.items[e][t.fieldML].langTexts[p].lang==r.lang){o=n.items[e][t.fieldML].langTexts[p].text,u=!0;break}u||(o=n.items[e][t.fieldML].defaultText)}else o=n.items[e][t.fieldML].defaultText;else if(null!=t.fieldBool)o=1==n.items[e][t.fieldBool]?"Active":"Disabled";else if(null!=t.fieldIcon){if(o=[],null!=m)for(var f=function(a){o.push(g.createElement("i",{key:a,className:t.fieldIcon[a].classField,title:t.fieldIcon[a].label.en,onClick:function(){return m(t.fieldIcon[a].code,n.items[e])},"aria-hidden":"true"}))},d=0;d<t.fieldIcon.length;d++)f(d)}else if(null!=t.fieldObj)if(null!=t.fieldObj.fieldChild&&null!=t.fieldObj.fieldChild.field)null!=n.items[e][t.fieldObj.field]&&(o=n.items[e][t.fieldObj.field][t.fieldObj.fieldChild.field]);else if(null!=t.fieldObj.fieldChild&&null!=t.fieldObj.fieldChild.fieldDate)null!=n.items[e][t.fieldObj.field]&&(o=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"numeric",day:"numeric"}).format(Ct()(n.items[e][t.fieldObj.field][t.fieldObj.fieldChild.fieldDate]).toDate()));else if(null!=t.fieldObj.fieldChild&&null!=t.fieldObj.fieldChild.fieldBool)null!=n.items[e][t.fieldObj.field]&&(o=1==n.items[e][t.fieldObj.field][t.fieldObj.fieldChild.fieldBool]?"Active":"Disabled");else if(null!=t.fieldObj.fieldChild&&null!=t.fieldObj.fieldChild.fieldML)if(null!=n.items[e][t.fieldObj.field][t.fieldObj.fieldChild.fieldML].langTexts&&n.items[e][t.fieldObj.field][t.fieldObj.fieldChild.fieldML].langTexts.length>0){for(var E=!1,A=0;A<n.items[e][t.fieldObj.field][t.fieldObj.fieldChild.fieldML].langTexts.length;A++)if(n.items[e][t.fieldObj.field][t.fieldObj.fieldChild.fieldML].langTexts[A].lang==r.lang){o=n.items[e][t.fieldObj.field][t.fieldObj.fieldChild.fieldML].langTexts[A].text,E=!0;break}E||(o=n.items[e][t.fieldObj.field][t.fieldObj.fieldChild.fieldML].defaultText)}else o=n.items[e][t.fieldObj.field][t.fieldObj.fieldChild.fieldML].defaultText;else o=n.items[e][t.fieldObj.field];i.push(g.createElement("div",{key:a[s].id},c,": ",o))}())continue}else i.push(g.createElement("div",{key:a[s].id}," no data"))}n.items[e].active;null!=n.items[e].created&&new Intl.DateTimeFormat("en-US",{year:"numeric",month:"short",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(n.items[e].created).toDate());null!=n.items[e].modified&&new Intl.DateTimeFormat("en-US",{year:"numeric",month:"short",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(n.items[e].modified).toDate()),t.push(g.createElement("div",{key:0},g.createElement("div",{className:"row"},g.createElement("div",{className:"col-md-4"},i)))),p.push(g.createElement("li",{key:n.items[e].id,className:"list-group-item"},t))},d=0;d<n.items.length;d++)f(d);else p.push(g.createElement("li",{key:"1"},g.createElement("div",{id:r.prefTexts.GLOBAL_PAGE.GLOBAL_PAGE_LIST_EMPTY.name}," ",r.prefTexts.GLOBAL_PAGE.GLOBAL_PAGE_LIST_EMPTY.value)));var E="list-group list-unstyled";return E="list-group list-unstyled list-group-striped",g.createElement("div",{className:"col-md-12 col-sm-12 col-xs-12"},g.createElement("div",{className:"x_panel"},g.createElement("div",{className:"x_title"},t,g.createElement("ul",{className:"navbar-right panel_toolbox"},g.createElement("li",null,g.createElement("i",{className:"fa fa-plus",title:"Add",onClick:function(){return m("MODIFY")}})),";")),g.createElement("div",{className:"x_content"},g.createElement("div",{className:"row"},g.createElement(oa,{name:n.pageName+"-LISTLIMIT",appPrefs:r,listLimit:n.listLimit,onListLimitChange:i}),g.createElement(ua,{itemState:n,name:n.pageName+"-ORDERBY",appPrefs:r,columns:a,parent:l,onOrderBy:u}),g.createElement(da,{itemState:n,name:n.pageName+"-SEARCHBY",appPrefs:r,columns:a,parent:l,onSearchClick:s}),g.createElement(pa,{name:n.pageName+"-SEARCH",onChange:o,onClick:s})),g.createElement("br",null),g.createElement("ul",{className:E},p),g.createElement(Aa,{currentSegment:n[n.pageName+"_PAGINATION"],appPrefs:r,itemCount:n.itemCount,listStart:n.listStart,listLimit:n.listLimit,onClick:c}))))};qr.propTypes={itemState:$().object.isRequired,header:$().string,parent:$().string,columns:$().array,appPrefs:$().object,onListLimitChange:$().func,onSearchChange:$().func,onSearchClick:$().func,onPaginationClick:$().func,onOrderBy:$().func,onHeader:$().func,onOption1:$().func,onOption2:$().func,onOption3:$().func,onOption4:$().func,onOption5:$().func,onOption6:$().func,goBack:$().func};const Wr=qr;function zr(e){var t=e.itemState,n=e.appPrefs,a=e.onListLimitChange,r=e.onSearchChange,l=e.onSearchClick,i=e.onPaginationClick,s=e.onOrderBy,o=e.onOption,c=e.closeModal,u=e.session,m=[];null!=t.prefLabels&&null!=t.prefLabels.ADMIN_USER_PAGE&&(m=t.prefLabels.ADMIN_USER_PAGE);var p="";null!=t.prefTexts.ADMIN_USER_PAGE&&null!=t.prefTexts.ADMIN_USER_PAGE.ADMIN_USER_PAGE_HEADER&&(p=t.prefTexts.ADMIN_USER_PAGE.ADMIN_USER_PAGE_HEADER.value);var f="Delete ";null!=t.selected&&null!=t.selected.title&&(f+=t.selected.title.defaultText);var d=!1;return"small"===u.viewPort&&(d=!0),g.createElement("div",null,d?g.createElement(Wr,{itemState:t,header:p,columns:m,appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o}):g.createElement(Ca,{itemState:t,header:p,columns:m,labelGroup:"TABLE1",appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o}),g.createElement(ga,{isOpen:t.isDeleteModalOpen,onClose:function(){return c()}},g.createElement("div",{className:"modal-dialog"},g.createElement("div",{className:"modal-content"},g.createElement("div",{className:"modal-header"},g.createElement("button",{type:"button",className:"close","data-dismiss":"modal","aria-hidden":"true"},g.createElement("i",{className:"fa fa-close"})),g.createElement("h4",{className:"modal-title"},f)),g.createElement("div",{className:"modal-body"},g.createElement("h3",null,"Are you sure you want to delete?")),g.createElement("div",{className:"modal-footer"},g.createElement("button",{type:"button",className:"btn btn-primary",onClick:function(){return o("DELETEFINAL",t.selected)}},"Delete"),g.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return c()}},"Close"))))))}function Kr(e){var t=e.itemState,n=e.appPrefs,a=e.onSave,r=e.onCancel,l=e.inputChange,i=e.onBlur,s=[];if(null!=n&&null!=n.prefGlobal&&null!=n.prefGlobal.LANGUAGES&&n.prefGlobal.LANGUAGES.length>0)for(var o=0;o<n.prefGlobal.LANGUAGES.length;o++){var c=n.prefGlobal.LANGUAGES[o].title.defaultText;if(null!=n.prefGlobal.LANGUAGES[o].title.langTexts)for(var u=0;u<n.prefGlobal.LANGUAGES[o].title.langTexts.length;u++)n.prefGlobal.LANGUAGES[o].title.langTexts[u].lang==n.lang&&(c=n.prefGlobal.LANGUAGES[o].title.langTexts[u].text);s.push({value:n.prefGlobal.LANGUAGES[o].code,label:c})}var m={},p={},f={},d={},E={},A={},S={},v={},C={},h={},_={},I={},N={};if(null!=t.prefForms&&null!=t.prefForms.ADMIN_USER_FORM)for(var O=t.prefForms.ADMIN_USER_FORM,T=0;T<O.length;T++)switch(O[T].name){case"ADMIN_USER_FORM_FIRSTNAME":m=O[T];break;case"ADMIN_USER_FORM_MIDDLENAME":p=O[T];break;case"ADMIN_USER_FORM_LASTNAME":f=O[T];break;case"ADMIN_USER_FORM_USERNAME":d=O[T];break;case"ADMIN_USER_FORM_EMAIL":E=O[T];break;case"ADMIN_USER_FORM_ALTERNATE_EMAIL":A=O[T];break;case"ADMIN_USER_FORM_ZIPCODE":S=O[T];break;case"ADMIN_USER_FORM_PASSWORD":v=O[T];break;case"ADMIN_USER_FORM_VERIFY_PASSWORD":C=O[T];break;case"ADMIN_USER_FORM_FORCERESET":h=O[T];break;case"ADMIN_USER_FORM_ACTIVE":_=O[T];break;case"ADMIN_USER_FORM_LANGUAGE":I=O[T];break;case"ADMIN_USER_FORM_LOGLEVEL":N=O[T]}return g.createElement("div",{className:"container"},g.createElement("h4",{className:"modal-title"},"User"),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(et,{field:m,itemState:t,inputChange:l})),g.createElement("div",{className:"col-sm-4"},g.createElement(et,{field:p,itemState:t,inputChange:l})),g.createElement("div",{className:"col-sm-4"},g.createElement(et,{field:f,itemState:t,inputChange:l}))),g.createElement(et,{field:d,itemState:t,inputChange:l}),g.createElement(et,{field:E,itemState:t,inputChange:l}),g.createElement(et,{field:A,itemState:t,inputChange:l}),g.createElement(et,{field:S,itemState:t,inputChange:l}),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(et,{field:v,itemState:t,inputChange:l,onBlur:i})),g.createElement("div",{className:"col-sm-4"},g.createElement(et,{field:C,itemState:t,inputChange:l,onBlur:i})),g.createElement("div",{className:"col-sm-4"},g.createElement(Et,{field:h,itemState:t,inputChange:l}))),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-md-4"},g.createElement(Et,{field:_,itemState:t,inputChange:l})),g.createElement("div",{className:"col-md-4"},g.createElement(ft,{field:I,options:s,itemState:t,inputChange:l})),g.createElement("div",{className:"col-md-4"},g.createElement(ft,{field:N,itemState:t,inputChange:l}))),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-md-4"},g.createElement("button",{id:t.pageName+"-BUTTON-SAVE",type:"button",className:"btn btn-primary",onClick:function(){return a()}},"Save"),g.createElement("button",{id:t.pageName+"-BUTTON-CANCEL",type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return r()}},"Cancel"))))}zr.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onListLimitChange:$().func,onSearchChange:$().func,onSearchClick:$().func,onPaginationClick:$().func,onOrderBy:$().func,openDeleteModal:$().func,closeModal:$().func,onOption:$().func,session:$().object},Kr.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onSave:$().func.isRequired,onCancel:$().func.isRequired,inputChange:$().func.isRequired,onBlur:$().func};const Xr=function(e){var t=e.location,n=e.navigate,a=(0,J.v9)((function(e){return e.adminusers})),r=(0,J.v9)((function(e){return e.session})),l=(0,J.v9)((function(e){return e.appPrefs})),i=(0,J.I0)();(0,g.useEffect)((function(){i(Rr({}))}),[]);var s=function(e,t,n,r){Pt.inputChange({state:a,actions:u,dispatch:i,appPrefs:l,type:e,field:t,value:n,event:r})},o=function(){q({level:"TRACE",loc:"UsersContainer::clearVerifyPassword",msg:"Hi there"}),i(Vr({errors:null,successes:null})),i(xr("ADMIN_USER_FORM_VERIFY_PASSWORD"))};return q({level:"TRACE",loc:"UsersContainer::render",msg:"Hi there"}),"MODIFY"==a.view?g.createElement(Kr,{itemState:a,appPrefs:l,onSave:function(){Pt.onSave({state:a,actions:u,dispatch:i,appPrefs:l,form:"ADMIN_USER_FORM"})},onCancel:function(){Pt.onCancel({state:a,actions:u,dispatch:i})},inputChange:s,onBlur:function(e){q({level:"TRACE",loc:"UsersContainer::onBlur",msg:e.name});var t=e.name;if(""!=e.optionalParams){var n=JSON.parse(e.optionalParams);if(null!=n.onBlur)if(null!=n.onBlur.validation&&"matchField"==n.onBlur.validation){if(""!=e.validation){var r=JSON.parse(e.validation);if(null!=r[n.onBlur.validation]&&null!=r[n.onBlur.validation].id)if(a.inputFields[r[n.onBlur.validation].id]==a.inputFields[t]){if(null!=r[n.onBlur.validation].successMsg){var l=a.successes;null==l&&(l={}),l[t]=r[n.onBlur.validation].successMsg,i(Vr({successes:l,errors:null}))}}else if(null!=r[n.onBlur.validation].failMsg){var s=a.errorMap;null==s&&(s={}),s[t]=r[n.onBlur.validation].failMsg,i(Vr({successes:null,errors:s}))}}}else null!=n.onBlur.func&&"clearVerifyPassword"==n.onBlur.func&&o()}}}):"MAIN"==a.view&&null!=a.items?g.createElement(zr,{itemState:a,appPrefs:l,onListLimitChange:function(e,t){Pt.onListLimitChange({state:a,actions:u,dispatch:i,appPrefs:l,fieldName:e,event:t})},onSearchChange:function(e,t){Pt.onSearchChange({state:a,actions:u,dispatch:i,appPrefs:l,field:e,event:t})},onSearchClick:function(e,t){Pt.onSearchClick({state:a,actions:u,dispatch:i,field:e,event:t})},onPaginationClick:function(e){Pt.onPaginationClick({state:a,actions:u,dispatch:i,value:e})},onOrderBy:function(e,t){Pt.onOrderBy({state:a,actions:u,dispatch:i,appPrefs:l,selectedOption:e,event:t})},closeModal:function(){Pt.closeModal({actions:u,dispatch:i})},onOption:function(e,r){if(q({level:"TRACE",loc:"UsersContainer::onOption",msg:" code "+e}),!Pt.onOptionBase({state:a,actions:u,dispatch:i,code:e,appPrefs:l,item:r})){var s=t.pathname.substr(0,t.pathname.lastIndexOf("/"));"MODIFY_ROLE"===e&&n(s+="/roles",{state:{parent:r,parentType:"USER"}})}},inputChange:s,session:r}):g.createElement("div",null," Loading... ")};function Zr(e){var t=e.parent,n=e.parentType;return function(e){var a={action:"INIT",service:"ADMIN_ROLE_SVC"};a.prefTextKeys=new Array("ADMIN_ROLE_PAGE"),a.prefLabelKeys=new Array("ADMIN_ROLE_PAGE"),null!=t?(a.parentId=t.id,a.parentType=n,e({type:"ADMIN_ROLE_ADD_PARENT",parent:t,parentType:n})):e({type:"ADMIN_ROLE_CLEAR_PARENT"});var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_ROLE_INIT",responseJson:t}):K(t,e)})).catch((function(e){throw e}))}}function $r(e){var t=e.state,n=e.listStart,a=e.listLimit,r=e.searchCriteria,l=e.orderCriteria,i=e.info,s=e.paginationSegment;return function(e){var o={action:"LIST",service:"ADMIN_ROLE_SVC"};o.listStart=null!=n?n:t.listStart,o.listLimit=null!=a?a:t.listLimit,o.searchCriteria=null!=r?r:t.searchCriteria,o.orderCriteria=null!=l?l:t.orderCriteria,null!=t.parent&&(o.parentId=t.parent.id);var c={page:"roles",orderCriteria:o.orderCriteria,listStart:o.listStart,listLimit:o.listLimit};e({type:"ROLE_PREF_CHANGE",prefChange:c});var u={};return u.requestParams=o,u.URI="/api/admin/callService",W(u).then((function(t){null!=t&&null==t.protocalError?(e({type:"ADMIN_ROLE_LIST",responseJson:t,paginationSegment:s}),null!=i&&e({type:"SHOW_STATUS",info:i})):K(t,e)})).catch((function(e){throw e}))}}function Qr(e){var t=e.state,n=e.listLimit;return function(e){e({type:"ADMIN_ROLE_LISTLIMIT",listLimit:n}),e($r({state:t,listLimit:n}))}}function el(e){var t=e.state,n=e.searchCriteria;return function(e){e({type:"ADMIN_ROLE_SEARCH",searchCriteria:n}),e($r({state:t,searchCriteria:n,listStart:0}))}}function tl(e){var t=e.state;return function(e){var n={action:"SAVE",service:"ADMIN_ROLE_SVC"};n.inputFields=t.inputFields,null!=t.parent&&(n.parentId=t.parent.id,n.parentType=t.parentType);var a={};return a.requestParams=n,a.URI="/api/admin/callService",W(a).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e($r({state:t,info:n.infos})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",error:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function nl(e){var t=e.state,n=e.id;return function(e){var a={action:"DELETE",service:"ADMIN_ROLE_SVC"};a.itemId=n;var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e($r({state:t,info:n.infos})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function al(e){var t=e.id,n=e.appPrefs;return function(e){var a={action:"ITEM",service:"ADMIN_ROLE_SVC"};a.prefFormKeys=new Array("ADMIN_ROLE_FORM"),null!=t&&(a.itemId=t);var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_ROLE_ITEM",responseJson:t,appPrefs:n}):K(t,e)})).catch((function(e){throw e}))}}function rl(e){var t=e.userRoleId,n=e.roleId,a=e.appPrefs;return function(e){var r={action:"USER_ROLE_ITEM",service:"ADMIN_ROLE_SVC"};r.prefFormKeys=new Array("ADMIN_USER_ROLE_FORM"),null!=t&&(r.itemId=t),r.roleId=n;var l={};return l.requestParams=r,l.URI="/api/admin/callService",W(l).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_ROLE_USER_ROLE",responseJson:t,appPrefs:a}):K(t,e)})).catch((function(e){throw e}))}}function ll(e){var t=e.state;return function(e){var n={action:"USER_ROLE_SAVE",service:"ADMIN_ROLE_SVC"};n.inputFields=t.inputFields,n.userId=t.parent.id,n.roleId=t.selected.roleId;var a={};return a.requestParams=n,a.URI="/api/admin/callService",W(a).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e($r({state:t,info:n.infos})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function il(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"ADMIN_ROLE_INPUT_CHANGE",params:a})}}function sl(e){var t=e.value;return function(e){e({type:"ADMIN_ROLE_SEARCH_CHANGE",value:t})}}function ol(e){var t=e.state,n=e.orderCriteria;return function(e){e({type:"ADMIN_ROLE_ORDERBY",orderCriteria:n}),e($r({state:t,orderCriteria:n}))}}function cl(){return function(e){e({type:"ADMIN_ROLE_CLEAR_ROLE"})}}function ul(e){var t=e.successes,n=e.errors;return function(e){e({type:"ADMIN_ROLE_SET_STATUS",successes:t,errors:n})}}function ml(e){var t=e.item;return function(e){e({type:"ADMIN_ROLE_OPEN_DELETE_MODAL",item:t})}}function pl(){return function(e){e({type:"ADMIN_ROLE_CLOSE_DELETE_MODAL"})}}function fl(e){var t=e.state;return function(e){e({type:"ADMIN_ROLE_CANCEL"}),e($r({state:t}))}}function dl(e){var t=e.itemState,n=e.appPrefs,a=e.onListLimitChange,r=e.onSearchChange,l=e.onSearchClick,i=e.onPaginationClick,s=e.onOrderBy,o=e.onOption,c=e.closeModal,u=(e.onEditPermissions,e.onUserRoleModify,e.inputChange,e.goBack),m=e.session,p=[];null!=t.prefLabels&&null!=t.prefLabels.ADMIN_ROLE_PAGE&&(p=t.prefLabels.ADMIN_ROLE_PAGE);var f="",d=null;null!=t.parent&&(d=t.parent.username),null!=t.prefTexts.ADMIN_ROLE_PAGE&&null!=t.prefTexts.ADMIN_ROLE_PAGE.ADMIN_ROLE_PAGE_HEADER&&(f=t.prefTexts.ADMIN_ROLE_PAGE.ADMIN_ROLE_PAGE_HEADER.value),null!=u&&null!=d&&""!=d&&(f=g.createElement("span",null,f," : ",g.createElement("a",{onClick:function(){return u()},"aria-hidden":"true"},d)));var E="Delete ";null!=t.selected&&null!=t.selected.title&&(E+=t.selected.title.defaultText);var A=!1;return"small"===m.viewPort&&(A=!0),g.createElement("div",null,A?g.createElement(Wr,{itemState:t,header:f,columns:p,appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o,goBack:u}):g.createElement(Ca,{itemState:t,header:f,columns:p,labelGroup:"TABLE1",appPrefs:n,parent:d,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o,goBack:u}),g.createElement(ga,{isOpen:t.isDeleteModalOpen,onClose:function(){return c()}},g.createElement("div",{className:"modal-dialog"},g.createElement("div",{className:"modal-content"},g.createElement("div",{className:"modal-header"},g.createElement("button",{type:"button",className:"close","data-dismiss":"modal","aria-hidden":"true"},g.createElement("i",{className:"fa fa-close"})),g.createElement("h4",{className:"modal-title"},E)),g.createElement("div",{className:"modal-body"},g.createElement("h3",null,"Are you sure you want to delete?")),g.createElement("div",{className:"modal-footer"},g.createElement("button",{type:"button",className:"btn btn-primary",onClick:function(){return o("DELETEFINAL",t.selected)}},"Delete"),g.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return c()}},"Close"))))))}function El(e){var t=e.itemState,n=e.appPrefs,a=e.onSave,r=e.onCancel,l=e.inputChange,i=e.applicationSelectList,s={},o={},c={},u=[];null!=i&&(u=i);var m={},p=[],f=t.selected;if(null!=t.prefForms&&null!=t.prefForms.ADMIN_ROLE_FORM)for(var d=t.prefForms.ADMIN_ROLE_FORM,E=0;E<d.length;E++)switch(d[E].name){case"ADMIN_ROLE_FORM_TITLE":s=d[E];break;case"ADMIN_ROLE_FORM_CODE":o=d[E];break;case"ADMIN_ROLE_FORM_APPLICATION":c=d[E];break;case"ADMIN_ROLE_FORM_ACTIVE":if(""!=(m=d[E]).value){var A=JSON.parse(m.value);if(null!=A.options)p=A.options;else if(null!=A.referPref){var S=n.prefTexts[A.referPref.prefName][A.referPref.prefItem];if(null!=S&&null!=S.value&&""!=S.value){var v=JSON.parse(S.value);null!=v.options&&(p=v.options)}}}}var C="";null!=f&&null!=f.created&&(C=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(f.created).toDate()),C=g.createElement("div",null,"Created: ",C));var h="";return null!=f&&null!=f.modified&&(h=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(f.modified).toDate()),h=g.createElement("div",null,"Last Modified: ",h)),g.createElement("div",{className:"container"},g.createElement("h4",{className:"modal-title"},"Role"),C,h,g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(it,{field:s,itemState:t,inputChange:l,appPrefs:n}))),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(et,{field:o,itemState:t,inputChange:l}))),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(ft,{field:c,itemState:t,inputChange:l,options:u}))),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-md-4"},g.createElement(Et,{field:m,itemState:t,inputChange:l,options:p}))),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-md-4"},g.createElement("button",{id:t.pageName+"-BUTTON-SAVE",type:"button",className:"btn btn-primary",onClick:function(){return a()}},"Save"),g.createElement("button",{id:t.pageName+"-BUTTON-CANCEL",type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return r()}},"Cancel"))))}function Al(e){var t=e.itemState,n=e.appPrefs,a=e.onSave,r=e.onCancel,l=e.inputChange,i=(e.applicationSelectList,{}),s={},o={},c={},u=[],m=t.selected;if(null!=t.prefForms&&null!=t.prefForms.ADMIN_USER_ROLE_FORM)for(var p=t.prefForms.ADMIN_USER_ROLE_FORM,f=0;f<p.length;f++)switch(p[f].name){case"ADMIN_USER_ROLE_FORM_ORDER":i=p[f];break;case"ADMIN_USER_ROLE_FORM_STARTDATE":if(""!=(s=p[f]).classModel){var d=JSON.parse(s.classModel);null!=m&&null!=m[d.field]&&m[d.field]}break;case"ADMIN_USER_ROLE_FORM_ENDDATE":if(""!=(o=p[f]).classModel){var E=JSON.parse(o.classModel);null!=m&&null!=m[E.field]&&m[E.field]}break;case"ADMIN_USER_ROLE_FORM_ACTIVE":if(""!=p[f].value){var A=JSON.parse(p[f].value);if(null!=A.options)u=A.options;else if(null!=A.referPref){var S=n.prefTexts[A.referPref.prefName][A.referPref.prefItem];if(null!=S&&null!=S.value&&""!=S.value){var v=JSON.parse(S.value);null!=v.options&&(u=v.options)}}}c=p[f]}var C="";null!=m&&null!=m.created&&(C=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(m.created).toDate()),C=g.createElement("div",null,"Created: ",C));var h="";return null!=m&&null!=m.modified&&(h=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(m.modified).toDate()),h=g.createElement("div",null,"Last Modified: ",h)),g.createElement("div",{className:"container"},g.createElement("h4",{className:"modal-title"},"User to Role"),C,h,g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm-4"},g.createElement(et,{field:i,itemState:t,onChange:l}))),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm-4"},g.createElement(It,{field:s,itemState:t,onChange:l}))),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm-4"},g.createElement(It,{field:o,itemState:t,onChange:l}))),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-md-4"},g.createElement(Et,{field:c,itemState:t,onChange:l,options:u}))),g.createElement("button",{type:"button",className:"btn btn-primary",onClick:function(){return a()}},"Save"),g.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return r()}},"Cancel"))}dl.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onListLimitChange:$().func,onSearchChange:$().func,onSearchClick:$().func,onPaginationClick:$().func,onOrderBy:$().func,closeModal:$().func,onOption:$().func,inputChange:$().func,goBack:$().func,session:$().object},El.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onSave:$().func.isRequired,onCancel:$().func.isRequired,inputChange:$().func.isRequired},Al.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onSave:$().func.isRequired,onCancel:$().func.isRequired,inputChange:$().func.isRequired};const Sl=function(e){var t=e.location,n=e.navigate,a=(0,J.v9)((function(e){return e.adminroles})),r=(0,J.v9)((function(e){return e.session})),l=(0,J.v9)((function(e){return e.appPrefs})),i=(0,J.I0)();(0,g.useEffect)((function(){null!=t.state&&null!=t.state.parent?i(Zr({parent:t.state.parent,parentType:t.state.parentType})):i(Zr({}))}),[]);var s=function(e,t,n,r){Pt.inputChange({state:a,actions:m,dispatch:i,appPrefs:l,type:e,field:t,value:n,event:r})},o=function(){Pt.onCancel({state:a,actions:m,dispatch:i})};return q({level:"TRACE",loc:"RolesContainer::render",msg:"Hi there"}),"MODIFY"==a.view?g.createElement(El,{itemState:a,appPrefs:l,onSave:function(){Pt.onSave({state:a,actions:m,dispatch:i,appPrefs:l,form:"ADMIN_ROLE_FORM"})},onCancel:o,inputChange:s,applicationSelectList:a.applicationSelectList}):"USER_ROLE_MODIFY"==a.view?g.createElement(Al,{itemState:a,appPrefs:l,onSave:function(){q({level:"TRACE",loc:"RoleContainer::onUserRoleSave",msg:"test"});var e=Ae(a.prefForms.ADMIN_USER_ROLE_FORM,a.inputFields,l.prefGlobal.LANGUAGES);e.isValid?i(ll({state:a})):i(ul({errors:e.errorMap}))},onCancel:o,inputChange:s}):"MAIN"==a.view&&null!=a.items?g.createElement(dl,{itemState:a,appPrefs:l,onListLimitChange:function(e,t){Pt.onListLimitChange({state:a,actions:m,dispatch:i,appPrefs:l,fieldName:e,event:t})},onSearchChange:function(e,t){Pt.onSearchChange({state:a,actions:m,dispatch:i,field:e,event:t})},onSearchClick:function(e,t){Pt.onSearchClick({state:a,actions:m,dispatch:i,fieldName:e,event:t})},onPaginationClick:function(e){Pt.onPaginationClick({state:a,actions:m,dispatch:i,value:e})},onOrderBy:function(e,t){Pt.onOrderBy({state:a,actions:m,dispatch:i,appPrefs:l,selectedOption:e,event:t})},closeModal:function(){Pt.closeModal({actions:m,dispatch:i})},onOption:function(e,r){if(q({level:"TRACE",loc:"RoleContainer::onOption",msg:" code "+e}),!Pt.onOptionBase({state:a,actions:m,dispatch:i,code:e,appPrefs:l,item:r})){var s=t.pathname.substr(0,t.pathname.lastIndexOf("/"));switch(e){case"MODIFY_USER_ROLE":null!=r.userRole?i(rl({userRoleId:r.userRole.id,roleId:r.id,appPrefs:l})):i(rl({roleId:r.id,appPrefs:l}));break;case"MODIFY_PERMISSION":n(s+="/permissions",{state:{parent:r,parentType:"ROLE"}})}}},inputChange:s,goBack:function(){Pt.goBack({navigate:n})},session:r}):g.createElement("div",null," Loading... ")};function vl(e){var t=e.parent,n=e.parentType;return function(e){var a={action:"INIT",service:"ADMIN_PERMISSION_SVC"};a.prefTextKeys=new Array("ADMIN_PERMISSION_PAGE"),a.prefLabelKeys=new Array("ADMIN_PERMISSION_PAGE"),null!=t?(a.parentId=t.id,a.parentType=n,e({type:"ADMIN_PERMISSION_ADD_PARENT",parent:t})):e({type:"ADMIN_PERMISSION_CLEAR_PARENT"});var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_PERMISSION_INIT",responseJson:t}):K(t,e)})).catch((function(e){throw e}))}}function Cl(e){var t=e.state,n=e.listLimit,a=e.listStart,r=e.searchCriteria,l=e.orderCriteria,i=e.info,s=e.paginationSegment;return function(e){var o={action:"LIST",service:"ADMIN_PERMISSION_SVC"};o.listStart=null!=a?a:t.listStart,o.listLimit=null!=n?n:t.listLimit,o.searchCriteria=null!=r?r:t.searchCriteria,o.orderCriteria=null!=l?l:t.orderCriteria,null!=t.parent&&(o.parentId=t.parent.id);var c={page:"permissions",orderCriteria:o.orderCriteria,listStart:o.listStart,listLimit:o.listLimit};e({type:"PERMISSION_PREF_CHANGE",prefChange:c});var u={};return u.requestParams=o,u.URI="/api/admin/callService",W(u).then((function(t){null!=t&&null==t.protocalError?(e({type:"ADMIN_PERMISSION_LIST",responseJson:t,paginationSegment:s}),null!=i&&e({type:"SHOW_STATUS",info:i})):K(t,e)})).catch((function(e){throw e}))}}function hl(e){var t=e.state,n=e.listLimit;return function(e){e({type:"ADMIN_PERMISSION_LISTLIMIT",listLimit:n}),e(Cl({state:t,listLimit:n}))}}function _l(e){var t=e.state,n=e.searchCriteria;return function(e){e({type:"ADMIN_PERMISSION_SEARCH",searchCriteria:n}),e(Cl({state:t,searchCriteria:n,listStart:0}))}}function gl(e){var t=e.state;return function(e){var n={action:"SAVE",service:"ADMIN_PERMISSION_SVC"};n.inputFields=t.inputFields;var a={};return a.requestParams=n,a.URI="/api/admin/callService",W(a).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(Cl({state:t,info:["Save Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function Il(e){var t=e.state,n=e.id;return function(e){var a={action:"DELETE",service:"ADMIN_PERMISSION_SVC"};a.itemId=n;var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(Cl({state:t,info:["Delete Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function Nl(e){var t=e.id,n=e.appPrefs;return function(e){var a={action:"ITEM",service:"ADMIN_PERMISSION_SVC"};a.prefFormKeys=new Array("ADMIN_PERMISSION_FORM"),null!=t&&(a.itemId=t);var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_PERMISSION_ITEM",responseJson:t,appPrefs:n}):K(t,e)})).catch((function(e){throw e}))}}function Ol(e){var t=e.rolePermissionId,n=e.permissionId,a=e.appPrefs;return function(e){var r={action:"ROLE_PERMISSION_ITEM",service:"ADMIN_PERMISSION_SVC"};r.prefFormKeys=new Array("ADMIN_ROLE_PERMISSION_FORM"),null!=t&&(r.itemId=t),r.permissionId=n;var l={};return l.requestParams=r,l.URI="/api/admin/callService",W(l).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_PERMISSION_ROLE_PERMISSION",responseJson:t,appPrefs:a}):K(t,e)})).catch((function(e){throw e}))}}function Tl(e){var t=e.state;return function(e){var n={action:"ROLE_PERMISSION_SAVE",service:"ADMIN_PERMISSION_SVC"};n.inputFields=t.inputFields,n.roleId=t.parent.id,n.permissionId=t.selected.permissionId;var a={};return a.requestParams=n,a.URI="/api/admin/callService",W(a).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(Cl({state:t,info:["Save Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function bl(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"ADMIN_PERMISSION_INPUT_CHANGE",params:a})}}function Ml(e){var t=e.value;return function(e){e({type:"ADMIN_PERMISSION_SEARCH_CHANGE",value:t})}}function Rl(e){var t=e.state,n=e.orderCriteria;return function(e){e({type:"ADMIN_PERMISSION_ORDERBY",orderCriteria:n}),e(Cl({state:t,orderCriteria:n}))}}function Ll(){return function(e){e({type:"ADMIN_PERMISSION_CLEAR_PERMISSION"})}}function yl(e){var t=e.successes,n=e.errors;return function(e){e({type:"ADMIN_PERMISSION_SET_STATUS",successes:t,errors:n})}}function Pl(e){var t=e.item;return function(e){e({type:"ADMIN_PERMISSION_OPEN_DELETE_MODAL",item:t})}}function Dl(){return function(e){e({type:"ADMIN_PERMISSION_CLOSE_DELETE_MODAL"})}}function Fl(e){var t=e.state;return function(e){e({type:"ADMIN_PERMISSION_CANCEL"}),e(Cl({state:t}))}}function Bl(e){var t=e.itemState,n=e.appPrefs,a=e.onListLimitChange,r=e.onSearchChange,l=e.onSearchClick,i=e.onPaginationClick,s=e.onOrderBy,o=e.onOption,c=e.closeModal,u=(e.inputChange,e.goBack),m=e.session,p=[];null!=t.prefLabels&&null!=t.prefLabels.ADMIN_PERMISSION_PAGE&&(p=t.prefLabels.ADMIN_PERMISSION_PAGE);var f="",d=null;null!=t.parent&&(d=t.parent.title.langTexts[0].text),null!=t.prefTexts.ADMIN_PERMISSION_PAGE&&null!=t.prefTexts.ADMIN_PERMISSION_PAGE.ADMIN_PERMISSION_PAGE_HEADER&&(f=t.prefTexts.ADMIN_PERMISSION_PAGE.ADMIN_PERMISSION_PAGE_HEADER.value),null!=u&&null!=d&&""!=d&&(f=g.createElement("span",null,f," : ",g.createElement("a",{onClick:function(){return u()},"aria-hidden":"true"},d)));var E="Delete ";null!=t.selected&&null!=t.selected.title&&(E+=t.selected.title.defaultText);var A=!1;return"small"===m.viewPort&&(A=!0),g.createElement("div",null,A?g.createElement(Wr,{itemState:t,header:f,columns:p,appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o,goBack:u}):g.createElement(Ca,{itemState:t,header:f,columns:p,labelGroup:"TABLE1",appPrefs:n,parent:d,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o,goBack:u}),g.createElement(ga,{isOpen:t.isDeleteModalOpen,onClose:function(){return c()}},g.createElement("div",{className:"modal-dialog"},g.createElement("div",{className:"modal-content"},g.createElement("div",{className:"modal-header"},g.createElement("button",{type:"button",className:"close","data-dismiss":"modal","aria-hidden":"true"},g.createElement("i",{className:"fa fa-close"})),g.createElement("h4",{className:"modal-title"},E)),g.createElement("div",{className:"modal-body"},g.createElement("h3",null,"Are you sure you want to delete?")),g.createElement("div",{className:"modal-footer"},g.createElement("button",{type:"button",className:"btn btn-primary",onClick:function(){return o("DELETEFINAL",t.selected)}},"Delete"),g.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return c()}},"Close"))))))}function wl(e){var t=e.itemState,n=e.appPrefs,a=e.onSave,r=e.onCancel,l=e.inputChange,i=e.applicationSelectList,s={},o={},c={},u={},m={},p={},f={},d=[],E=t.selected;if(null!=t.prefForms&&null!=t.prefForms.ADMIN_PERMISSION_FORM)for(var A=0;A<t.prefForms.ADMIN_PERMISSION_FORM.length;A++){var S=t.prefForms.ADMIN_PERMISSION_FORM;switch(S[A].name){case"ADMIN_PERMISSION_FORM_TITLE":s=S[A];break;case"ADMIN_PERMISSION_FORM_CODE":o=S[A];break;case"ADMIN_PERMISSION_FORM_APPLICATION":c=S[A];break;case"ADMIN_PERMISSION_FORM_RIGHTS":u=S[A];break;case"ADMIN_PERMISSION_FORM_STARTDATE":if(""!=(m=S[A]).classModel){var v=JSON.parse(m.classModel);null!=E&&null!=E[v.field]&&E[v.field]}break;case"ADMIN_PERMISSION_FORM_ENDDATE":if(""!=(p=S[A]).classModel){var C=JSON.parse(p.classModel);null!=E&&null!=E[C.field]&&E[C.field]}break;case"ADMIN_PERMISSION_FORM_ACTIVE":if(""!=(f=S[A]).value){var h=JSON.parse(f.value);if(null!=h.options)d=h.options;else if(null!=h.referPref){var _=n.prefTexts[h.referPref.prefName][h.referPref.prefItem];if(null!=_&&null!=_.value&&""!=_.value){var I=JSON.parse(_.value);null!=I.options&&(d=I.options)}}}}}var N="";null!=E&&null!=E.created&&(N=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(E.created).toDate()),N=g.createElement("div",null,"Created: ",N));var O="";return null!=E&&null!=E.modified&&(O=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(E.modified).toDate()),O=g.createElement("div",null,"Last Modified: ",O)),g.createElement("div",{className:"container"},g.createElement("h4",{className:"modal-title"},"Permission"),N,O,g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(it,{itemState:t,field:s,inputChange:l,appPrefs:n}))),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(et,{itemState:t,field:o,inputChange:l}))),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(ft,{itemState:t,field:c,inputChange:l,options:i}))),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(ft,{itemState:t,field:u,inputChange:l}))),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-md-4"},g.createElement(Et,{itemState:t,field:f,inputChange:l,options:d}))),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-md-4"},g.createElement("button",{id:t.pageName+"-BUTTON-SAVE",type:"button",className:"btn btn-primary",onClick:function(){return a()}},"Save"),g.createElement("button",{id:t.pageName+"-BUTTON-CANCEL",type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return r()}},"Cancel"))))}function kl(e){var t=e.itemState,n=e.appPrefs,a=e.onSave,r=e.onCancel,l=e.inputChange,i=(e.applicationSelectList,{}),s={},o={},c={},u=[],m=t.selected;if(null!=t.prefForms&&null!=t.prefForms.ADMIN_ROLE_PERMISSION_FORM)for(var p=0;p<t.prefForms.ADMIN_ROLE_PERMISSION_FORM.length;p++){var f=t.prefForms.ADMIN_ROLE_PERMISSION_FORM;switch(f[p].name){case"ADMIN_ROLE_PERMISSION_FORM_RIGHTS":i=f[p];break;case"ADMIN_ROLE_PERMISSION_FORM_STARTDATE":if(""!=(s=f[p]).classModel){var d=JSON.parse(s.classModel);null!=m&&null!=m[d.field]&&m[d.field]}break;case"ADMIN_ROLE_PERMISSION_FORM_ENDDATE":if(""!=(o=f[p]).classModel){var E=JSON.parse(o.classModel);null!=m&&null!=m[E.field]&&m[E.field]}break;case"ADMIN_ROLE_PERMISSION_FORM_ACTIVE":if(""!=(c=f[p]).value){var A=JSON.parse(c.value);if(null!=A.options)u=A.options;else if(null!=A.referPref){var S=n.prefTexts[A.referPref.prefName][A.referPref.prefItem];if(null!=S&&null!=S.value&&""!=S.value){var v=JSON.parse(S.value);null!=v.options&&(u=v.options)}}}}}var C="";null!=m&&null!=m.created&&(C=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(m.created).toDate()),C=g.createElement("div",null,"Created: ",C));var h="";return null!=m&&null!=m.modified&&(h=new Intl.DateTimeFormat("en-US",{year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric",timeZone:"America/New_York"}).format(Ct()(m.modified).toDate()),h=g.createElement("div",null,"Last Modified: ",h)),g.createElement("div",{className:"container"},g.createElement("h4",{className:"modal-title"},"Role to Permission"),C,h,g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm-4"},g.createElement(ft,{itemState:t,field:i,onChange:l}))),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm-4"},g.createElement(It,{itemState:t,field:s,onChange:l}))),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-sm-4"},g.createElement(It,{itemState:t,field:o,onChange:l}))),g.createElement("div",{className:"row"},g.createElement("div",{className:"col-md-4"},g.createElement(Et,{itemState:t,field:c,onChange:l,options:u}))),g.createElement("button",{type:"button",className:"btn btn-primary",onClick:function(){return a()}},"Save"),g.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return r()}},"Cancel"))}Bl.propTypes={itemState:$().object.isRequired,appPrefs:$().object,onListLimitChange:$().func,onSearchChange:$().func,onSearchClick:$().func,onPaginationClick:$().func,onOrderBy:$().func,openDeleteModal:$().func,closeModal:$().func,onOption:$().func,inputChange:$().func,goBack:$().func,session:$().object},wl.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onSave:$().func.isRequired,onCancel:$().func.isRequired,inputChange:$().func.isRequired},kl.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onSave:$().func.isRequired,onCancel:$().func.isRequired,inputChange:$().func.isRequired};const Gl=function(e){var t=this,n=e.location,a=e.navigate,r=(0,J.v9)((function(e){return e.adminpermissions})),l=(0,J.v9)((function(e){return e.session})),i=(0,J.v9)((function(e){return e.appPrefs})),s=(0,J.I0)();(0,g.useEffect)((function(){null!=n.state&&null!=n.state.parent?s(vl({parent:n.state.parent,parentType:n.state.parentType})):s(vl({}))}),[]);var o=function(e,t,n,a){Pt.inputChange({state:r,actions:p,dispatch:s,appPrefs:i,type:e,field:t,value:n,event:a})},c=function(){Pt.onCancel({state:r,actions:p,dispatch:s})};return q({level:"TRACE",loc:"PermissionsContainer::render",msg:"Hi there"}),"MODIFY"==r.view?g.createElement(wl,{itemState:r,appPrefs:i,onSave:function(){Pt.onSave({state:r,actions:p,dispatch:s,appPrefs:i,form:"ADMIN_PERMISSION_FORM"})},onCancel:c,inputChange:o,applicationSelectList:r.applicationSelectList}):"ROLE_PERMISSION_MODIFY"==r.view?g.createElement(kl,{itemState:r,appPrefs:i,onSave:function(){q({level:"TRACE",loc:"PermissionContainer::onRolePermissionSave",msg:"test"});var e=Ae(r.prefForms.ADMIN_ROLE_PERMISSION_FORM,r.inputFields,i.prefGlobal.LANGUAGES);e.isValid?s(Tl({state:r})):t.setState({errors:e.errorMap})},onCancel:c,inputChange:o}):"MAIN"==r.view&&null!=r.items?g.createElement(Bl,{itemState:r,appPrefs:i,onListLimitChange:function(e,t){Pt.onListLimitChange({state:r,actions:p,dispatch:s,appPrefs:i,fieldName:e,event:t})},onSearchChange:function(e,t){Pt.onSearchChange({state:r,actions:p,dispatch:s,appPrefs:i,field:e,event:t})},onSearchClick:function(e,t){Pt.onSearchClick({state:r,actions:p,dispatch:s,field:e,event:t})},onPaginationClick:function(e){Pt.onPaginationClick({state:r,actions:p,dispatch:s,value:e})},onOrderBy:function(e,t){Pt.onOrderBy({state:r,actions:p,dispatch:s,appPrefs:i,field:e,event:t})},closeModal:function(){Pt.closeModal({actions:p,dispatch:s})},onOption:function(e,t){q({level:"TRACE",loc:"PermissionContainer::onOption",msg:" code "+e}),Pt.onOptionBase({state:r,actions:p,dispatch:s,code:e,appPrefs:i,item:t})||"MODIFY_ROLE_PERMISSION"!==e||function(e){q({level:"TRACE",loc:"PermissionContainer::onRolePermissionModify",msg:"test"+e.id}),null!=e.rolePermission?s(Ol({rolePermissionId:e.rolePermission.id,permissionId:e.id})):s(Ol({permissionId:e.id,appPrefs:i}))}(t)},inputChange:o,goBack:function(){Pt.goBack({navigate:a})},session:l}):g.createElement("div",null," Loading... ")};function Ul(e){e.parent,e.parentType;return function(e){var t={action:"INIT",service:"ADMIN_LANGUAGE_SVC"};t.prefTextKeys=new Array("ADMIN_LANGUAGE_PAGE"),t.prefLabelKeys=new Array("ADMIN_LANGUAGE_PAGE");var n={};return n.requestParams=t,n.URI="/api/admin/callService",W(n).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_LANGUAGE_INIT",responseJson:t}):K(t,e)})).catch((function(e){throw e}))}}function jl(e){var t=e.state,n=e.listStart,a=e.listLimit,r=e.searchCriteria,l=e.orderCriteria,i=e.info,s=e.paginationSegment;return function(e){var o={action:"LIST",service:"ADMIN_LANGUAGE_SVC"};o.listStart=null!=n?n:t.listStart,o.listLimit=null!=a?a:t.listLimit,o.searchCriteria=null!=r?r:t.searchCriteria,o.orderCriteria=null!=l?l:t.orderCriteria;var c={page:"languages",orderCriteria:o.orderCriteria,listStart:o.listStart,listLimit:o.listLimit};e({type:"LANGUAGE_PREF_CHANGE",prefChange:c});var u={};return u.requestParams=o,u.URI="/api/admin/callService",W(u).then((function(t){null!=t&&null==t.protocalError?(e({type:"ADMIN_LANGUAGE_LIST",responseJson:t,paginationSegment:s}),null!=i&&e({type:"SHOW_STATUS",info:i})):K(t,e)})).catch((function(e){throw e}))}}function xl(e){var t=e.state,n=e.listLimit;return function(e){e({type:"ADMIN_LANGUAGE_LISTLIMIT",listLimit:n}),e(jl({state:t,listLimit:n}))}}function Vl(e){var t=e.state,n=e.searchCriteria;return function(e){e({type:"ADMIN_LANGUAGE_SEARCH",searchCriteria:n}),e(jl({state:t,searchCriteria:n,listStart:0}))}}function Hl(e){var t=e.state;return function(e){var n={action:"SAVE",service:"ADMIN_LANGUAGE_SVC"};n.inputFields=t.inputFields;var a={};return a.requestParams=n,a.URI="/api/admin/callService",W(a).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(jl({state:t,info:["Save Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",error:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function Jl(e){var t=e.state,n=e.id;return function(e){var a={action:"DELETE",service:"ADMIN_LANGUAGE_SVC"};a.itemId=n;var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(jl({state:t,info:["Delete Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function Yl(e){var t=e.id,n=e.appPrefs;return function(e){var a={action:"ITEM",service:"ADMIN_LANGUAGE_SVC"};a.prefFormKeys=new Array("ADMIN_LANGUAGE_FORM"),null!=t&&(a.itemId=t);var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_LANGUAGE_ITEM",responseJson:t,appPrefs:n}):K(t,e)})).catch((function(e){throw e}))}}function ql(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"ADMIN_LANGUAGE_INPUT_CHANGE",params:a})}}function Wl(e){var t=e.value;return function(e){e({type:"ADMIN_LANGUAGE_SEARCH_CHANGE",value:t})}}function zl(e){var t=e.state,n=e.orderCriteria;return function(e){e({type:"ADMIN_LANGUAGE_ORDERBY",orderCriteria:n}),e(jl({state:t,orderCriteria:n}))}}function Kl(e){return function(t){var n={};n.field=e,t({type:"ADMIN_LANGUAGE_CLEAR_FIELD",params:n})}}function Xl(e){var t=e.successes,n=e.errors;return function(e){e({type:"ADMIN_LANGUAGE_SET_STATUS",successes:t,errors:n})}}function Zl(e){var t=e.item;return function(e){e({type:"ADMIN_LANGUAGE_OPEN_DELETE_MODAL",item:t})}}function $l(){return function(e){e({type:"ADMIN_LANGUAGE_CLOSE_DELETE_MODAL"})}}function Ql(e){var t=e.state;return function(e){e({type:"ADMIN_LANGUAGE_CANCEL"}),e(jl({state:t}))}}function ei(e){var t=e.itemState,n=e.appPrefs,a=e.onListLimitChange,r=e.onSearchChange,l=e.onSearchClick,i=e.onPaginationClick,s=e.onOrderBy,o=e.closeModal,c=e.onOption,u=(e.inputChange,e.session),m=[];null!=t.prefLabels&&null!=t.prefLabels.ADMIN_LANGUAGE_PAGE&&(m=t.prefLabels.ADMIN_LANGUAGE_PAGE);var p="";null!=t.prefTexts.ADMIN_LANGUAGE_PAGE&&null!=t.prefTexts.ADMIN_LANGUAGE_PAGE.ADMIN_LANGUAGE_PAGE_HEADER&&(p=t.prefTexts.ADMIN_LANGUAGE_PAGE.ADMIN_LANGUAGE_PAGE_HEADER.value);var f="Delete ";null!=t.selected&&null!=t.selected.title&&(f+=t.selected.title.defaultText);var d=!1;return"small"===u.viewPort&&(d=!0),g.createElement("div",null,d?g.createElement(Wr,{itemState:t,header:p,columns:m,appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:c,goBack}):g.createElement(Ca,{itemState:t,header:p,columns:m,labelGroup:"TABLE1",appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:c}),g.createElement(ga,{isOpen:t.isDeleteModalOpen,onClose:function(){return o()}},g.createElement("div",{className:"modal-dialog"},g.createElement("div",{className:"modal-content"},g.createElement("div",{className:"modal-header"},g.createElement("button",{type:"button",className:"close","data-dismiss":"modal","aria-hidden":"true"},g.createElement("i",{className:"fa fa-close"})),g.createElement("h4",{className:"modal-title"},f)),g.createElement("div",{className:"modal-body"},g.createElement("h3",null,"Are you sure you want to delete?")),g.createElement("div",{className:"modal-footer"},g.createElement("button",{type:"button",className:"btn btn-primary",onClick:function(){return c("DELETEFINAL",t.selected)}},"Delete"),g.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return o()}},"Close"))))))}function ti(e){var t=e.itemState,n=e.appPrefs,a=e.onSave,r=e.onCancel,l=e.inputChange,i={},s={},o={},c=[],u={},m=[],p={};if(null!=t.prefForms&&null!=t.prefForms.ADMIN_LANGUAGE_FORM)for(var f=t.prefForms.ADMIN_LANGUAGE_FORM,d=0;d<f.length;d++)switch(f[d].name){case"ADMIN_LANGUAGE_FORM_TITLE":i=f[d];break;case"ADMIN_LANGUAGE_FORM_CODE":s=f[d];break;case"ADMIN_LANGUAGE_FORM_ACTIVE":if(""!=(o=f[d]).value){var E=JSON.parse(o.value);if(null!=E.options)c=E.options;else if(null!=E.referPref){var A=n.prefTexts[E.referPref.prefName][E.referPref.prefItem];if(null!=A&&null!=A.value&&""!=A.value){var S=JSON.parse(A.value);null!=S.options&&(c=S.options)}}}break;case"ADMIN_LANGUAGE_FORM_DEFAULT":if(""!=(u=f[d]).value){var v=JSON.parse(u.value);if(null!=v.options)m=v.options;else if(null!=v.referPref){var C=n.prefTexts[v.referPref.prefName][v.referPref.prefItem];if(null!=C&&null!=C.value&&""!=C.value){var h=JSON.parse(C.value);null!=h.options&&(m=h.options)}}}break;case"ADMIN_LANGUAGE_FORM_DIRECTION":p=f[d]}return g.createElement("div",{className:"container"},g.createElement("h4",{className:"modal-title"},"Language"),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(it,{field:i,itemState:t,inputChange:l,appPrefs:n}))),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement(et,{itemState:t,field:s,inputChange:l}))),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-md-4"},g.createElement(ft,{itemState:t,field:p,inputChange:l}))),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-md-4"},g.createElement(Et,{itemState:t,field:o,inputChange:l,options:c}))),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-md-4"},g.createElement(Et,{itemState:t,field:u,inputChange:l,options:m}))),g.createElement("div",{className:"row thub-field"},g.createElement("div",{className:"col-sm-4"},g.createElement("button",{id:t.pageName+"-BUTTON-SAVE",type:"button",className:"btn btn-primary",onClick:function(){return a()}},"Save"),g.createElement("button",{id:t.pageName+"-BUTTON-CANCEL",type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return r()}},"Cancel"))))}ei.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onListLimitChange:$().func,onSearchChange:$().func,onSearchClick:$().func,onPaginationClick:$().func,onOrderBy:$().func,closeModal:$().func,onOption:$().func,inputChange:$().func.isRequired,session:$().object},ti.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onSave:$().func.isRequired,onCancel:$().func.isRequired,inputChange:$().func.isRequired};const ni=function(e){e.location,e.navigate;var t=(0,J.v9)((function(e){return e.adminlanguage})),n=(0,J.v9)((function(e){return e.session})),a=(0,J.v9)((function(e){return e.appPrefs})),r=(0,J.I0)();(0,g.useEffect)((function(){r(Ul({}))}),[]);var l=function(e,n,l,i){Pt.inputChange({state:t,actions:f,dispatch:r,appPrefs:a,type:e,field:n,value:l,event:i})};return q({level:"TRACE",loc:"LanguageContainer::render",msg:"Hi there"}),"MODIFY"==t.view?g.createElement(ti,{itemState:t,appPrefs:a,onSave:function(){Pt.onSave({state:t,actions:f,dispatch:r,appPrefs:a,form:"ADMIN_LANGUAGE_FORM"})},onCancel:function(){Pt.onCancel({state:t,actions:f,dispatch:r})},inputChange:l}):"MAIN"==t.view&&null!=t.items?g.createElement(ei,{itemState:t,appPrefs:a,onListLimitChange:function(e,n){Pt.onListLimitChange({state:t,actions:f,dispatch:r,appPrefs:a,fieldName:e,event:n})},onSearchChange:function(e,n){Pt.onSearchChange({state:t,actions:f,dispatch:r,appPrefs:a,field:e,event:n})},onSearchClick:function(e,n){Pt.onSearchClick({state:t,actions:f,dispatch:r,field:e,event:n})},onPaginationClick:function(e){Pt.onPaginationClick({state:t,actions:f,dispatch:r,value:e})},onOrderBy:function(e,n){Pt.onOrderBy({state:t,actions:f,dispatch:r,appPrefs:a,field:e,event:n})},closeModal:function(){Pt.closeModal({actions:f,dispatch:r})},onOption:function(e,n){q({level:"TRACE",loc:"LanguageContainer::onOption",msg:" code "+e}),Pt.onOptionBase({state:t,actions:f,dispatch:r,code:e,appPrefs:a,item:n})},inputChange:l,session:n}):g.createElement("div",null," Loading... ")};function ai(e){e.parent,e.parentType;return function(e){var t={action:"INIT",service:"ADMIN_CATEGORY_SVC"};t.prefTextKeys=new Array("ADMIN_CATEGORY_PAGE"),t.prefLabelKeys=new Array("ADMIN_CATEGORY_PAGE");var n={};return n.requestParams=t,n.URI="/api/admin/callService",W(n).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_CATEGORY_INIT",responseJson:t}):K(t,e)})).catch((function(e){throw e}))}}function ri(e){var t=e.state,n=e.listStart,a=e.listLimit,r=e.searchCriteria,l=e.orderCriteria,i=e.info,s=e.paginationSegment;return function(e){var o={action:"LIST",service:"ADMIN_CATEGORY_SVC"};o.listStart=null!=n?n:t.listStart,o.listLimit=null!=a?a:t.listLimit,o.searchCriteria=null!=r?r:t.searchCriteria,o.orderCriteria=null!=l?l:t.orderCriteria;var c={page:"category",orderCriteria:o.orderCriteria,listStart:o.listStart,listLimit:o.listLimit};e({type:"CATEGORY_PREF_CHANGE",prefChange:c});var u={};return u.requestParams=o,u.URI="/api/admin/callService",W(u).then((function(t){null!=t&&null==t.protocalError?(e({type:"ADMIN_CATEGORY_LIST",responseJson:t,paginationSegment:s}),null!=i&&e({type:"SHOW_STATUS",info:i})):K(t,e)})).catch((function(e){throw e}))}}function li(e){var t=e.state,n=e.listLimit;return function(e){e({type:"ADMIN_CATEGORY_LISTLIMIT",listLimit:n}),e(ri({state:t,listLimit:n}))}}function ii(e){var t=e.state,n=e.searchCriteria;return function(e){e({type:"ADMIN_CATEGORY_SEARCH",searchCriteria:n}),e(ri({state:t,searchCriteria:n,listStart:0}))}}function si(e){var t=e.state;return function(e){var n={action:"SAVE",service:"ADMIN_CATEGORY_SVC"};n.inputFields=t.inputFields;var a={};return a.requestParams=n,a.URI="/api/admin/callService",W(a).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESSFUL"==n.status?e(ri({state:t,info:["Save Successful"]})):null!=n&&null!=n.status&&"error"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function oi(e){var t=e.state,n=e.id;return function(e){var a={action:"DELETE",service:"ADMIN_CATEGORY_SVC"};a.itemId=n;var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(ri({state:t,info:["Delete Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function ci(e){var t=e.id;e.appPrefs;return function(e){var n={action:"ITEM",service:"ADMIN_CATEGORY_SVC"};n.prefFormKeys=new Array("ADMIN_CATEGORY_FORM"),null!=t&&(n.itemId=t);var a={};return a.requestParams=n,a.URI="/api/admin/callService",W(a).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_CATEGORY_ITEM",responseJson:t}):K(t,e)})).catch((function(e){throw e}))}}function ui(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"ADMIN_CATEGORY_INPUT_CHANGE",params:a})}}function mi(e){var t=e.value;return function(e){e({type:"ADMIN_CATEGORY_SEARCH_CHANGE",value:t})}}function pi(e){var t=e.state,n=e.orderCriteria;return function(e){e({type:"ADMIN_CATEGORY_ORDERBY",orderCriteria:n}),e(ri({state:t,orderCriteria:n}))}}function fi(){return function(e){e({type:"ADMIN_CATEGORY_CLEAR_CATEGORY"})}}function di(e){return function(t){var n={};n.field=e,t({type:"ADMIN_CATEGORY_CLEAR_FIELD",params:n})}}function Ei(e){var t=e.successes,n=e.errors;return function(e){e({type:"ADMIN_CATEGORY_SET_STATUS",successes:t,errors:n})}}function Ai(e){var t=e.item;return function(e){e({type:"ADMIN_CATEGORY_OPEN_DELETE_MODAL",item:t})}}function Si(){return function(e){e({type:"ADMIN_CATEGORY_CLOSE_DELETE_MODAL"})}}function vi(e){var t=e.state;return function(e){e({type:"ADMIN_CATEGORY_CANCEL"}),e(ri({state:t}))}}function Ci(e){var t=e.itemState,n=e.appPrefs,a=e.onSave,r=e.onCancel,l=e.inputChange;return g.createElement(Mt,{itemState:t,formName:"ADMIN_CATEGORY_FORM",formTitle:"Category",formGroup:"FORM1",appPrefs:n,onSave:a,onCancel:r,inputChange:l})}function hi(e){var t=e.itemState,n=e.appPrefs,a=e.onListLimitChange,r=e.onSearchChange,l=e.onSearchClick,i=e.onPaginationClick,s=e.onOrderBy,o=e.closeModal,c=e.onOption,u=(e.inputChange,e.session),m=[];null!=t.prefLabels&&null!=t.prefLabels.ADMIN_CATEGORY_PAGE&&(m=t.prefLabels.ADMIN_CATEGORY_PAGE);var p="";null!=t.prefTexts.ADMIN_CATEGORY_PAGE&&null!=t.prefTexts.ADMIN_CATEGORY_PAGE.ADMIN_CATEGORY_PAGE_HEADER&&(p=t.prefTexts.ADMIN_CATEGORY_PAGE.ADMIN_CATEGORY_PAGE_HEADER.value);var f="Delete ";null!=t.selected&&null!=t.selected.title&&(f+=t.selected.title.defaultText);var d=!1;return"small"===u.viewPort&&(d=!0),g.createElement("div",null,d?g.createElement(ListBuilder,{itemState:t,header:p,columns:m,appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:c,goBack}):g.createElement(Ca,{itemState:t,header:p,columns:m,labelGroup:"TABLE1",appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:c}),g.createElement(ga,{isOpen:t.isDeleteModalOpen,onClose:function(){return o()}},g.createElement("div",{className:"modal-dialog"},g.createElement("div",{className:"modal-content"},g.createElement("div",{className:"modal-header"},g.createElement("button",{type:"button",className:"close","data-dismiss":"modal","aria-hidden":"true"},g.createElement("i",{className:"fa fa-close"})),g.createElement("h4",{className:"modal-title"},"Delete ",f)),g.createElement("div",{className:"modal-body"},g.createElement("h3",null,"Are you sure you want to delete?")),g.createElement("div",{className:"modal-footer"},g.createElement("button",{type:"button",className:"btn btn-primary",onClick:function(){return c("DELETEFINAL",t.selected)}},"Delete"),g.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return o()}},"Close"))))))}Ci.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onSave:$().func.isRequired,onCancel:$().func.isRequired,inputChange:$().func.isRequired},hi.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onListLimitChange:$().func,onSearchChange:$().func,onSearchClick:$().func,onPaginationClick:$().func,closeModal:$().func,onOption:$().func,inputChange:$().func.isRequired,session:$().object};const _i=function(e){e.location,e.navigate;var t=(0,J.v9)((function(e){return e.admincategory})),n=(0,J.v9)((function(e){return e.session})),a=(0,J.v9)((function(e){return e.appPrefs})),r=(0,J.I0)();(0,g.useEffect)((function(){r(ai({}))}),[]);var l=function(e,n,l,i){Pt.inputChange({state:t,actions:d,dispatch:r,appPrefs:a,type:e,field:n,value:l,event:i})};return q({level:"TRACE",loc:"CategoryContainer::render",msg:"Hi there"}),"MODIFY"==t.view?g.createElement(Ci,{itemState:t,appPrefs:a,onSave:function(){Pt.onSave({state:t,actions:d,dispatch:r,appPrefs:a,form:"ADMIN_CATEGORY_FORM"})},onCancel:function(){Pt.onCancel({state:t,actions:d,dispatch:r})},inputChange:l}):"MAIN"==t.view&&null!=t.items?g.createElement(hi,{itemState:t,appPrefs:a,onListLimitChange:function(e,n){Pt.onListLimitChange({state:t,actions:d,dispatch:r,appPrefs:a,fieldName:e,event:n})},onSearchChange:function(e,n){Pt.onSearchChange({state:t,actions:d,dispatch:r,appPrefs:a,field:e,event:n})},onSearchClick:function(e,n){Pt.onSearchClick({state:t,actions:d,dispatch:r,field:e,event:n})},onPaginationClick:function(e){Pt.onPaginationClick({state:t,actions:d,dispatch:r,value:e})},onOrderBy:function(e,n){Pt.onOrderBy({state:t,actions:d,dispatch:r,appPrefs:a,field:e,event:n})},closeModal:function(){Pt.closeModal({actions:d,dispatch:r})},onOption:function(e,n){q({level:"TRACE",loc:"CategoryContainer::onOption",msg:" code "+e}),Pt.onOptionBase({state:t,actions:d,dispatch:r,code:e,appPrefs:a,item:n})},inputChange:l,session:n}):g.createElement("div",null," Loading... ")};function gi(e){e.parent,e.parentType;return function(e){var t={action:"INIT",service:"ADMIN_STATUS_SVC"};t.prefFormKeys=new Array("ADMIN_STATUS_FORM"),t.prefTextKeys=new Array("ADMIN_STATUS_PAGE"),t.prefLabelKeys=new Array("ADMIN_STATUS_TABLE");var n={};return n.requestParams=t,n.URI="/api/admin/callService",W(n).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_STATUS_INIT",responseJson:t}):K(t,e)})).catch((function(e){throw e}))}}function Ii(e,t,n,a,r){return function(r){var l={action:"LIST",service:"ADMIN_STATUS_SVC"};l.listStart=e,l.listLimit=t,l.searchCriteria=n,l.orderCriteria=a,r({type:"STATUS_PREF_CHANGE",prefChange:{page:"statuses",orderCriteria:a,listStart:e,listLimit:t}});var i={};return i.requestParams=l,i.URI="/api/admin/callService",W(i).then((function(e){null!=e&&null==e.protocalError?r({type:"ADMIN_STATUS_LIST",responseJson:e}):K(e,r)})).catch((function(e){throw e}))}}function Ni(e,t,n,a,r){return function(l){var i={action:"ADMIN_STATUS_SAVE"};i.params={STATIS:e};var s={};return s.requestParams=i,s.URI="/api/admin/callService",W(s).then((function(e){null!=e&&null==e.protocalError?null!=e&&null!=e.status&&"SUCCESSFUL"==e.status?l(Ii(t,n,a,r)):null!=e&&null!=e.status&&"error"==e.status&&l({type:"SHOW_STATUS",warn:e.errors}):K(e,l)})).catch((function(e){throw e}))}}function Oi(e,t,n,a,r){return function(l){var i={action:"ADMIN_STATUS_DELETE"};i.params={STATUS_ID:e};var s={};return s.requestParams=i,s.URI="/api/admin/callService",W(s).then((function(e){null!=e&&null==e.protocalError?l(Ii(t,n,a,r)):K(e,l)})).catch((function(e){throw e}))}}function Ti(){return function(e){var t={action:"STATUSES_PAGE"},n={};return n.requestParams=t,n.URI="/api/admin/callService",W(n).then((function(t){null!=t&&null==t.protocalError?e({type:"STATUSES_PAGE",responseJson:t}):K(t,e)})).catch((function(e){throw e}))}}function bi(e){return function(t){var n={action:"STATUSES_STATUS"};null!=e&&(n.params={},n.params.STATUS_ID=e);var a={};return a.requestParams=n,a.URI="/api/admin/callService",W(a).then((function(e){null!=e&&null==e.protocalError?t({type:"STATUSES_STATUS",responseJson:e}):K(e,t)})).catch((function(e){throw e}))}}function Mi(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"STATUSES_INPUT_CHANGE",params:a})}}function Ri(){return function(e){e({type:"STATUSES_CLEAR_STATUS"})}}function Li(e){var t=e.containerState,n=e.statuses,a=e.appPrefs,r=e.onListLimitChange,l=e.onSearchChange,i=e.onSearchClick,s=e.onPaginationClick,o=e.onColumnSort,c=e.openEditModal,u=e.openDeleteModal,m=e.closeModal,p=e.onSaveStatus,f=e.onDeleteStatus,d=e.inputChange,E=[];null!=n.prefLabels&&null!=n.prefLabels.ADMIN_STATUS_TABLE&&(E=n.prefLabels.ADMIN_STATUS_TABLE);var A="Status";return null!=n.prefTexts.ADMIN_STATUS_PAGE&&null!=n.prefTexts.ADMIN_STATUS_PAGE.ADMIN_STATUS_PAGE_HEADER&&(A=n.prefTexts.ADMIN_STATUS_PAGE.ADMIN_STATUS_PAGE_HEADER),g.createElement("div",null,g.createElement(Ca,{containerState:t,header:A,items:n.items,itemCount:n.itemCount,listStart:n.listStart,listLimit:n.listLimit,columns:E,appPrefs:a,onListLimitChange:r,onSearchChange:l,onSearchClick:i,onPaginationClick:s,onColumnSort:o,openEditModal:c,openDeleteModal:u}),g.createElement(ga,{isOpen:t.isEditModalOpen,onClose:m()},g.createElement("div",{className:"modal-dialog"},g.createElement("div",{className:"modal-content"},g.createElement("div",{className:"modal-header"},g.createElement("button",{type:"button",className:"close","data-dismiss":"modal","aria-hidden":"true"},g.createElement("i",{className:"fa fa-close"})),g.createElement("h4",{className:"modal-title"},"User")),g.createElement("div",{className:"modal-body"},g.createElement(Ne,{name:"STATUS_NAME_input",label:"Name",required:"true",errors:t.errors,onChange:d("name"),value:null!=n.selected&&null!=n.selected.name?n.selected.name:""}),g.createElement(Ne,{name:"STATUS_CODE_input",label:"Code",required:"true",errors:t.errors,onChange:d("code"),value:null!=n.selected&&null!=n.selected.code?n.selected.code:""})),g.createElement("div",{className:"modal-footer"},g.createElement("button",{type:"button",className:"btn btn-primary",onClick:p()},"Save"),g.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:m()},"Close"))))),g.createElement(ga,{isOpen:t.isDeleteModalOpen,onClose:m()},g.createElement("div",{className:"modal-dialog"},g.createElement("div",{className:"modal-content"},g.createElement("div",{className:"modal-header"},g.createElement("button",{type:"button",className:"close","data-dismiss":"modal","aria-hidden":"true"},g.createElement("i",{className:"fa fa-close"})),g.createElement("h4",{className:"modal-title"},"Delete ",t.selectedName)),g.createElement("div",{className:"modal-body"},g.createElement("h3",null,"Are you sure you want to delete?")),g.createElement("div",{className:"modal-footer"},g.createElement("button",{type:"button",className:"btn btn-primary",onClick:f(t.selectedId)},"Delete"),g.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:m()},"Close"))))))}Li.propTypes={containerState:$().object,statuses:$().object,appPrefs:$().object,onListLimitChange:$().func,onSearchChange:$().func,onSearchClick:$().func,onPaginationClick:$().func,onColumnSort:$().func,openEditModal:$().func,openDeleteModal:$().func,closeModal:$().func,onSaveLanguage:$().func,onDeleteLanguage:$().func,inputChange:$().func};const yi=function(e){e.location,e.navigate;var t=(0,J.v9)((function(e){return e.adminstatus})),n=(0,J.v9)((function(e){return e.session})),a=(0,J.v9)((function(e){return e.appPrefs})),r=(0,J.I0)();return(0,g.useEffect)((function(){r(gi({}))}),[]),q({level:"TRACE",loc:"StatusContainer::render",msg:"Hi there"}),"MODIFY"==t.view?g.createElement("div",null," Loading... "):"MAIN"==t.view&&null!=t.items?g.createElement(Li,{itemState:t,appPrefs:a,onListLimitChange:function(e,n){Pt.onListLimitChange({state:t,actions:E,dispatch:r,appPrefs:a,fieldName:e,event:n})},onSearchChange:function(e,n){Pt.onSearchChange({state:t,actions:E,dispatch:r,appPrefs:a,field:e,event:n})},onSearchClick:function(e,n){Pt.onSearchClick({state:t,actions:E,dispatch:r,field:e,event:n})},onPaginationClick:function(e){Pt.onPaginationClick({state:t,actions:E,dispatch:r,value:e})},onOrderBy:function(e,n){Pt.onOrderBy({state:t,actions:E,dispatch:r,appPrefs:a,field:e,event:n})},onOption:function(e,n){q({level:"TRACE",loc:"ProjectContainer::onOption",msg:" code "+e}),Pt.onOptionBase({state:t,actions:E,dispatch:r,code:e,appPrefs:a,item:n})},closeModal:function(){Pt.closeModal({actions:E,dispatch:r})},inputChange:function(e,n,l,i){Pt.inputChange({state:t,actions:E,dispatch:r,appPrefs:a,type:e,field:n,value:l,event:i})},session:n}):g.createElement("div",null," Loading... ")};function Pi(e){e.parent,e.parentType;return function(e){var t={action:"INIT",service:"ADMIN_SERVICE_CRAWLER_SVC"};t.prefTextKeys=new Array("ADMIN_SERVICES_PAGE"),t.prefLabelKeys=new Array("ADMIN_SERVICES_PAGE");var n={};return n.requestParams=t,n.URI="/api/system/callService",W(n).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_SERVICE_INIT",responseJson:t}):K(t,e)})).catch((function(e){throw e}))}}function Di(e){var t=e.state,n=e.listStart,a=e.listLimit,r=e.searchCriteria,l=e.orderCriteria,i=e.info,s=e.paginationSegment;return function(e){var o={action:"LIST",service:"ADMIN_SERVICE_CRAWLER_SVC"};o.listStart=null!=n?n:t.listStart,o.listLimit=null!=a?a:t.listLimit,o.searchCriteria=null!=r?r:t.searchCriteria,o.orderCriteria=null!=l?l:t.orderCriteria,e({type:"SERVICE_CRAWLER_PREF_CHANGE",prefChange:{page:"services",orderCriteria:l,listStart:n,listLimit:a}});var c={};return c.requestParams=o,c.URI="/api/system/callService",W(c).then((function(t){null!=t&&null==t.protocalError?(e({type:"ADMIN_SERVICE_LIST",responseJson:t,paginationSegment:s}),null!=i&&e({type:"SHOW_STATUS",info:i})):K(t,e)})).catch((function(e){throw e}))}}function Fi(e){var t=e.state,n=e.searchCriteria;return function(e){e({type:"ADMIN_SERVICE_SEARCH",searchCriteria:n}),e(Di({state:t,searchCriteria:n,listStart:0}))}}function Bi(e){var t=e.state;return function(e){var n={action:"SAVE",service:"ADMIN_SERVICE_CRAWLER_SVC"};n.inputFields=t.inputFields;var a={};return a.requestParams=n,a.URI="/api/system/callService",W(a).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(Di({state:t,info:["Save Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",error:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function wi(e){var t=e.state,n=e.id;return function(e){var a={service:"ADMIN_SERVICE_CRAWLER_SVC"};a.itemId=n;var r={};return r.requestParams=a,r.URI="/api/system/callService",W(r).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(Di({state:t,info:["Delete Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function ki(e){var t=e.id,n=e.appPrefs;return function(e){var a={action:"ITEM",service:"ADMIN_SERVICE_CRAWLER_SVC"};a.prefFormKeys=new Array("ADMIN_SERVICES_FORM"),null!=t&&(a.itemId=t);var r={};return r.requestParams=a,r.URI="/api/system/callService",W(r).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_SERVICE_ITEM",responseJson:t,appPrefs:n}):K(t,e)})).catch((function(e){throw e}))}}function Gi(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"ADMIN_SERVICE_INPUT_CHANGE",params:a})}}function Ui(e){var t=e.field,n=e.value;return function(e){var a={};a.field=t,a.value=n,e({type:"ADMIN_SERVICE_INPUT_CHANGE",params:a})}}function ji(e){var t=e.value;return function(e){e({type:"ADMIN_SERVICE_SEARCH_CHANGE",value:t})}}function xi(e){var t=e.state,n=e.orderCriteria;return function(e){e({type:"ADMIN_SERVICE_ORDERBY",orderCriteria:n}),e(Di({state:t,orderCriteria:n}))}}function Vi(){return function(e){e({type:"ADMIN_SERVICE_CLEAR_ITEM"})}}function Hi(e){var t=e.errors;return function(e){e({type:"ADMIN_SERVICE_SET_ERRORS",errors:t})}}function Ji(e){var t=e.item;return function(e){e({type:"ADMIN_SERVICE_OPEN_DELETE_MODAL",item:t})}}function Yi(){return function(e){e({type:"ADMIN_SERVICE_CLOSE_DELETE_MODAL"})}}function qi(e){var t=e.state;return function(e){e({type:"ADMIN_SERVICE_CANCEL"}),e(Di({state:t}))}}function Wi(e){var t=e.itemState,n=e.appPrefs,a=e.onListLimitChange,r=e.onSearchChange,l=e.onSearchClick,i=e.onPaginationClick,s=e.onOrderBy,o=e.onOption,c=e.closeModal,u=e.session,m=[];null!=t.prefLabels&&null!=t.prefLabels.ADMIN_SERVICES_PAGE&&(m=t.prefLabels.ADMIN_SERVICES_PAGE);var p="";null!=t.prefTexts.ADMIN_SERVICES_PAGE&&null!=t.prefTexts.ADMIN_SERVICES_PAGE.ADMIN_SERVICES_PAGE_HEADER&&(p=t.prefTexts.ADMIN_SERVICES_PAGE.ADMIN_SERVICES_PAGE_HEADER.value);var f="Delete ";null!=t.selected&&null!=t.selected.title&&(f+=t.selected.title.defaultText);var d=!1;return"small"===u.viewPort&&(d=!0),g.createElement("div",null,d?g.createElement(Wr,{itemState:t,header:p,columns:m,appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o}):g.createElement(Ca,{itemState:t,header:p,columns:m,labelGroup:"TABLE1",appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOption:o}),g.createElement(ga,{isOpen:t.isDeleteModalOpen,onClose:function(){return c()}},g.createElement("div",{className:"modal-dialog"},g.createElement("div",{className:"modal-content"},g.createElement("div",{className:"modal-header"},g.createElement("button",{type:"button",className:"close","data-dismiss":"modal","aria-hidden":"true"},g.createElement("i",{className:"fa fa-close"})),g.createElement("h4",{className:"modal-title"},f)),g.createElement("div",{className:"modal-body"},g.createElement("h3",null,"Are you sure you want to delete?")),g.createElement("div",{className:"modal-footer"},g.createElement("button",{type:"button",className:"btn btn-primary",onClick:function(){return o("DELETEFINAL",t.selected)}},"Delete"),g.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return c()}},"Close"))))))}function zi(e){var t=e.itemState,n=e.appPrefs,a=e.onSave,r=e.onCancel,l=e.inputChange;return g.createElement(Mt,{itemState:t,formName:"ADMIN_SERVICES_FORM",formTitle:"Service",formGroup:"FORM1",appPrefs:n,onSave:a,onCancel:r,inputChange:l})}Wi.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onListLimitChange:$().func,onSearchChange:$().func,onSearchClick:$().func,onPaginationClick:$().func,onOrderBy:$().func,openDeleteModal:$().func,closeModal:$().func,onOption:$().func,session:$().object},zi.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onSave:$().func.isRequired,onCancel:$().func.isRequired,inputChange:$().func.isRequired};const Ki=function(e){e.location,e.navigate;var t=(0,J.v9)((function(e){return e.adminservice})),n=(0,J.v9)((function(e){return e.session})),a=(0,J.v9)((function(e){return e.appPrefs})),r=(0,J.I0)();(0,g.useEffect)((function(){r(Pi({}))}),[]);var l=function(e,n,l,i){Pt.inputChange({state:t,actions:A,dispatch:r,appPrefs:a,type:e,field:n,value:l,event:i})};return q({level:"TRACE",loc:"ServiceContainer::render",msg:"Hi there"}),"MODIFY"==t.view?g.createElement(zi,{itemState:t,appPrefs:a,onSave:function(){Pt.onSave({state:t,actions:A,dispatch:r,appPrefs:a,form:"ADMIN_SERVICES_FORM"})},onCancel:function(){Pt.onCancel({state:t,actions:A,dispatch:r})},inputChange:l,onBlur:function(e){Pt.onCancel({state:t,actions:A,dispatch:r,field:e})}}):"MAIN"==t.view&&null!=t.items?g.createElement(Wi,{itemState:t,appPrefs:a,onListLimitChange:function(e,n){Pt.onListLimitChange({state:t,actions:A,dispatch:r,appPrefs:a,fieldName:e,event:n})},onSearchChange:function(e,n){Pt.onSearchChange({state:t,actions:A,dispatch:r,appPrefs:a,field:e,event:n})},onSearchClick:function(e,n){Pt.onSearchClick({state:t,actions:A,dispatch:r,field:e,event:n})},onPaginationClick:function(e){Pt.onPaginationClick({state:t,actions:A,dispatch:r,value:e})},onOrderBy:function(e,n){Pt.onOrderBy({state:t,actions:A,dispatch:r,appPrefs:a,field:e,event:n})},closeModal:function(){Pt.closeModal({actions:A,dispatch:r})},onOption:function(e,n){q({level:"TRACE",loc:"ServiceContainer::onOption",msg:" code "+e}),Pt.onOptionBase({state:t,actions:A,dispatch:r,code:e,appPrefs:a,item:n})},inputChange:l,session:n}):g.createElement("div",null," Loading... ")};function Xi(e){e.parent,e.parentType;return function(e){var t={action:"INIT",service:"ADMIN_MENU_SVC"};t.prefTextKeys=new Array("ADMIN_MENU_PAGE"),t.prefLabelKeys=new Array("ADMIN_MENU_PAGE"),t.orderCriteria=[{orderColumn:"ADMIN_MENU_TABLE_CATEGORY",orderDir:"ASC"},{orderColumn:"ADMIN_MENU_TABLE_NAME",orderDir:"ASC"}],t.category="MEMBER";var n={};return n.requestParams=t,n.URI="/api/admin/callService",W(n).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_MENU_INIT",responseJson:t}):K(t,e)})).catch((function(e){throw e}))}}function Zi(e){var t=e.state,n=e.listStart,a=e.listLimit,r=e.searchCriteria,l=e.orderCriteria,i=e.info,s=e.paginationSegment;return function(e){var o={action:"LIST",service:"ADMIN_MENU_SVC"};o.listStart=null!=n?n:t.listStart,o.listLimit=null!=a?a:t.listLimit,o.searchCriteria=null!=r?r:t.searchCriteria,o.orderCriteria=null!=l?l:t.orderCriteria,e({type:"MENU_PREF_CHANGE",prefChange:{page:"menus",orderCriteria:l,listStart:n,listLimit:a}});var c={};return c.requestParams=o,c.URI="/api/admin/callService",W(c).then((function(t){null!=t&&null==t.protocalError?(e({type:"ADMIN_MENU_LIST",responseJson:t,paginationSegment:s}),null!=i&&e({type:"SHOW_STATUS",info:i})):K(t,e)})).catch((function(e){throw e}))}}function $i(e){var t=e.state,n=e.listLimit;return function(e){e({type:"ADMIN_MENU_LISTLIMIT",listLimit:n}),e(Zi({state:t,listLimit:n}))}}function Qi(e){var t=e.state,n=e.searchCriteria;return function(e){e({type:"ADMIN_MENU_SEARCH",searchCriteria:n}),e(Zi({state:t,searchCriteria:n,listStart:0}))}}function es(e){var t=e.state;return function(e){var n={action:"SAVE",service:"ADMIN_MENU_SVC"};n.inputFields=t.inputFields;var a={};return a.requestParams=n,a.URI="/api/admin/callService",W(a).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(Zi({state:t,info:n.infos})):null!=n&&null!=n.status&&"error"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function ts(e){var t=e.state,n=e.id;return function(e){var a={action:"DELETE",service:"ADMIN_MENU_SVC"};a.itemId=n;var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(Zi({state:t,info:["Delete Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function ns(e){var t=e.id,n=e.appPrefs;return function(e){var a={action:"ITEM",service:"ADMIN_MENU_SVC"};a.prefFormKeys=new Array("ADMIN_MENU_FORM"),null!=t&&(a.itemId=t);var r={};return r.requestParams=a,r.URI="/api/admin/callService",W(r).then((function(t){null!=t&&null==t.protocalError?e({type:"ADMIN_MENU_ITEM",responseJson:t,appPrefs:n}):K(t,e)})).catch((function(e){throw e}))}}function as(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"ADMIN_MENU_INPUT_CHANGE",params:a})}}function rs(e){var t=e.value;return function(e){e({type:"ADMIN_MENU_SEARCH_CHANGE",value:t})}}function ls(e){var t=e.state,n=e.orderCriteria;return function(e){e({type:"ADMIN_MENU_ORDERBY",orderCriteria:n}),e(Zi({state:t,orderCriteria:n}))}}function is(){return function(e){e({type:"ADMIN_MENU_CLEAR_MENU"})}}function ss(e){return function(t){var n={};n.field=e,t({type:"ADMIN_MENU_CLEAR_FIELD",params:n})}}function os(e){var t=e.errors;return function(e){e({type:"ADMIN_MENU_SET_ERRORS",errors:t})}}function cs(e){var t=e.item;return function(e){e({type:"ADMIN_MENU_OPEN_DELETE_MODAL",item:t})}}function us(){return function(e){e({type:"ADMIN_MENU_CLOSE_DELETE_MODAL"})}}function ms(e){var t=e.state;return function(e){e({type:"ADMIN_MENU_CANCEL"}),e(Zi({state:t}))}}function ps(e){var t=e.itemState,n=e.appPrefs,a=e.onListLimitChange,r=e.onSearchChange,l=e.onSearchClick,i=e.onPaginationClick,s=e.onOrderBy,o=e.onOption,c=e.closeModal,u=e.session,m=[];null!=t.prefLabels&&null!=t.prefLabels.ADMIN_MENU_PAGE&&(m=t.prefLabels.ADMIN_MENU_PAGE);var p="";null!=t.prefTexts.ADMIN_MENU_PAGE&&null!=t.prefTexts.ADMIN_MENU_PAGE.ADMIN_MENU_PAGE_HEADER&&(p=t.prefTexts.ADMIN_MENU_PAGE.ADMIN_MENU_PAGE_HEADER.value);var f="Delete ";null!=t.selected&&null!=t.selected.title&&(f+=t.selected.title.defaultText);var d=!1;return"small"===u.viewPort&&(d=!0),g.createElement("div",null,d?g.createElement(ListBuilder,{itemState:t,header:p,columns:m,appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o}):g.createElement(Ca,{itemState:t,header:p,columns:m,labelGroup:"TABLE1",appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o}),g.createElement(ga,{isOpen:t.isDeleteModalOpen,onClose:function(){return c()}},g.createElement("div",{className:"modal-dialog"},g.createElement("div",{className:"modal-content"},g.createElement("div",{className:"modal-header"},g.createElement("button",{type:"button",className:"close","data-dismiss":"modal","aria-hidden":"true"},g.createElement("i",{className:"fa fa-close"})),g.createElement("h4",{className:"modal-title"},f)),g.createElement("div",{className:"modal-body"},g.createElement("h3",null,"Are you sure you want to delete?")),g.createElement("div",{className:"modal-footer"},g.createElement("button",{type:"button",className:"btn btn-primary",onClick:function(){return o("DELETEFINAL",t.selected)}},"Delete"),g.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return c()}},"Close"))))))}function fs(e){var t=e.itemState,n=e.appPrefs,a=e.onSave,r=e.onCancel,l=e.inputChange;return g.createElement(Mt,{itemState:t,formName:"ADMIN_MENU_FORM",formTitle:"Menu",formGroup:"FORM1",appPrefs:n,onSave:a,onCancel:r,inputChange:l})}ps.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onListLimitChange:$().func,onSearchChange:$().func,onSearchClick:$().func,onPaginationClick:$().func,onOrderBy:$().func,openDeleteModal:$().func,closeModal:$().func,onOption:$().func,session:$().object},fs.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onSave:$().func.isRequired,onCancel:$().func.isRequired,inputChange:$().func.isRequired};const ds=function(e){e.location,e.navigate;var t=(0,J.v9)((function(e){return e.adminmenus})),n=(0,J.v9)((function(e){return e.session})),a=(0,J.v9)((function(e){return e.appPrefs})),r=(0,J.I0)();return(0,g.useEffect)((function(){r(Xi({}))}),[]),q({level:"TRACE",loc:"MenuContainer::render",msg:"Hi there"}),"MODIFY"==t.view?g.createElement(fs,{itemState:t,appPrefs:a,onSave:function(){Pt.onSave({state:t,actions:S,dispatch:r,appPrefs:a,form:"ADMIN_MENU_FORM"})},onCancel:function(){Pt.onCancel({state:t,actions:S,dispatch:r})},inputChange:function(e,n,l,i){Pt.inputChange({state:t,actions:S,dispatch:r,appPrefs:a,type:e,field:n,value:l,event:i})}}):"MAIN"==t.view&&null!=t.items?g.createElement(ps,{itemState:t,appPrefs:a,onListLimitChange:function(e,n){Pt.onListLimitChange({state:t,actions:S,dispatch:r,appPrefs:a,fieldName:e,event:n})},onSearchChange:function(e,n){Pt.onSearchChange({state:t,actions:S,dispatch:r,appPrefs:a,field:e,event:n})},onSearchClick:function(e,n){Pt.onSearchClick({state:t,actions:S,dispatch:r,field:e,event:n})},onPaginationClick:function(e){Pt.onPaginationClick({state:t,actions:S,dispatch:r,value:e})},onOrderBy:function(e,n){Pt.onOrderBy({state:t,actions:S,dispatch:r,appPrefs:a,field:e,event:n})},closeModal:function(){Pt.closeModal({actions:S,dispatch:r})},onOption:function(e,n){q({level:"TRACE",loc:"MenuContainer::onOption",msg:" code "+e}),Pt.onOptionBase({state:t,actions:S,dispatch:r,code:e,appPrefs:a,item:n})},session:n}):g.createElement("div",null," Loading... ")};function Es(e){e.currentState,e.fields,e.texts,e.labels,e.onChangeLogin,e.onChangeRegistration,e.fieldChangeEvent,e.onForgotPassword,e.fieldBlurEvent,e.buttonClick,e.handleChange,e.changeView;return g.createElement("div",null,g.createElement("div",null," System Page "))}function As(e){return As="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},As(e)}function Ss(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function vs(e,t){return vs=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},vs(e,t)}function Cs(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=_s(e);if(t){var r=_s(this).constructor;n=Reflect.construct(a,arguments,r)}else n=a.apply(this,arguments);return hs(this,n)}}function hs(e,t){if(t&&("object"===As(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _s(e){return _s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},_s(e)}Es.propTypes={currentState:$().object,fields:$().object,texts:$().object,labels:$().object,onChangeLogin:$().func,onChangeRegistration:$().func,onForgotPassword:$().func,fieldChangeEvent:$().func,fieldBlurEvent:$().func,buttonClick:$().func,handleChange:$().func,changeView:$().func};var gs=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&vs(e,t)}(l,e);var t,n,a,r=Cs(l);function l(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),r.call(this,e)}return t=l,(n=[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){return q({level:"TRACE",loc:"SystemContainer::render",msg:"Hi there"}),g.createElement(Es,null)}}])&&Ss(t.prototype,n),a&&Ss(t,a),Object.defineProperty(t,"prototype",{writable:!1}),l}(g.Component);gs.propTypes={appPrefs:$().object,lang:$().string,actions:$().object};const Is=(0,J.$j)((function(e,t){return{lang:e.lang,appPrefs:e.appPrefs}}),(function(e){return{actions:(0,N.DE)(a,e)}}))(gs);function Ns(e){return g.createElement("div",null,e.children)}function Os(e){e.currentState,e.fields,e.texts,e.labels,e.onChangeLogin,e.onChangeRegistration,e.fieldChangeEvent,e.onForgotPassword,e.fieldBlurEvent,e.buttonClick,e.handleChange,e.changeView;return g.createElement("div",null,g.createElement("div",null," UserMgmt Page "))}Ns.propTypes={children:$().array},Os.propTypes={currentState:$().object,fields:$().object,texts:$().object,labels:$().object,onChangeLogin:$().func,onChangeRegistration:$().func,onForgotPassword:$().func,fieldChangeEvent:$().func,fieldBlurEvent:$().func,buttonClick:$().func,handleChange:$().func,changeView:$().func};const Ts=function(e){var t=e.location,n=e.navigate,a=((0,J.v9)((function(e){return e.session})),(0,J.v9)((function(e){return e.appMenus}))),r=(0,J.v9)((function(e){return e.appPrefs}));(0,J.I0)(),q({level:"TRACE",loc:"UserMgmtContainer::render",msg:"Hi there"});var l=t.pathname,i=a[r.adminMenu],s=[];if(null!=i)for(var o=0;o<i.length;o++)i[o].values[0].rendered&&l.includes(i[o].values[0].href)&&(q({level:"TRACE",loc:"UserMgmtContainer::render",msg:"href "+i[o].values[0].href}),null!=i[o].children&&i[o].children.length>0&&(s=i[o].children));return g.createElement(Os,{menus:s,changeTab:function(e){n(e)}})};function bs(e){var t=e.location,n=e.navigate,a=(0,J.v9)((function(e){return e.session})),r=(0,J.v9)((function(e){return e.appMenus})),l=(0,J.v9)((function(e){return e.appPrefs})),i=(0,J.I0)();(0,g.useEffect)((function(){i((function(e){var t={action:"INIT",service:"ADMIN_SVC"};t.prefTexts=new Array("ADMIN_PAGE"),t.menuNames=new Array("ADMIN_MENU_TOP");var n={};return n.requestParams=t,n.URI="/api/admin/callService",W(n).then((function(t){e({type:"GLOBAL_INIT",responseJson:t})})).catch((function(e){throw e}))}))}),[]);q({level:"TRACE",loc:"AdminContainer::render",msg:"path "+t.pathname});var s=[];null!=r&&null!=r[l.adminMenu]&&(s=r[l.adminMenu]);var o={};return null!=a&&null!=a.selected&&null!=a.selected.permissions&&(o=a.selected.permissions),s.length>0?g.createElement(Ns,null,g.createElement(_e,{appPrefs:l,permissions:o,menus:s,changeTab:function(e,t){n(t)},activeTab:t.pathname,backToTab:"member",user:a.selected,navigate:n}),g.createElement(Ue,null),g.createElement(je.Z5,null,g.createElement(je.AW,{index:!0,element:g.createElement(Kn,{location:t,navigate:n})}),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"AB",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/bugs/*",element:g.createElement(Na,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"ABLA",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/buglanes/*",element:g.createElement(Na,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"ABLI",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/buglist/*",element:g.createElement(Na,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"ACR",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/changerequests/*",element:g.createElement(Da,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"AU",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/users/*",element:g.createElement(Xr,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"AR",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/roles/*",element:g.createElement(Sl,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"AP",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/permissions/*",element:g.createElement(Gl,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"APR",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/prefmgmt/*",element:g.createElement(rr,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"APR",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/prefsub/*",element:g.createElement(Tr,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"AL",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/language/*",element:g.createElement(ni,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"AC",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/category/*",element:g.createElement(_i,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"AS",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/status/*",element:g.createElement(yi,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"ASVR",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/service/*",element:g.createElement(Ki,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"AM",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/menu/*",element:g.createElement(ds,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"ASYS",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/system/*",element:g.createElement(Is,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"AO",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/other/*",element:g.createElement(Mr,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"AUM",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/usermgmt/*",element:g.createElement(Ts,{location:t,navigate:n})})))):g.createElement(Ns,null," ",g.createElement(xe,null))}function Ms(){return function(e){var t={action:"INIT",service:"SYSTEM_DASHBOARD_SVC"};t.prefFormKeys=new Array("SYSTEM_DASHBOARD_FORM"),t.prefTextKeys=new Array("SYSTEM_DASHBOARD_PAGE"),t.prefLabelKeys=new Array("SYSTEM_DASHBOARD_TABLE");var n={};return n.requestParams=t,n.URI="/api/system/callService",W(n).then((function(t){e({type:"SYSTEM_DASHBOARD_INIT",responseJson:t})})).catch((function(e){throw e}))}}function Rs(e){e.servicestats;return g.createElement("div",null,g.createElement("div",null," Dashboard Page "))}Rs.propTypes={servicestats:$().object};const Ls=function(e){e.location,e.navigate,(0,J.v9)((function(e){return e.systemdashboard}));var t=(0,J.v9)((function(e){return e.session})),n=((0,J.v9)((function(e){return e.appPrefs})),(0,J.I0)());return(0,g.useEffect)((function(){n(Ms(t.selected.lang))}),[]),q({level:"TRACE",loc:"DashboardContainer::render",msg:"Hi there"}),g.createElement(Rs,null)};function ys(e){return g.createElement("div",null,e.children)}function Ps(){return function(e){var t={action:"INIT",service:"SYSTEM_CLIENT_DOMAIN_SVC"};t.prefTextKeys=new Array("SYSTEM_CLIENT_DOMAIN_PAGE"),t.prefLabelKeys=new Array("SYSTEM_CLIENT_DOMAIN_PAGE");var n={};return n.requestParams=t,n.URI="/api/system/callService",W(n).then((function(t){null!=t&&null==t.protocalError?e({type:"SYSTEM_CLIENT_DOMAIN_INIT",responseJson:t}):actionUtils.checkConnectivity(t,e)})).catch((function(e){throw e}))}}function Ds(e){var t=e.state,n=e.listStart,a=e.listLimit,r=e.searchCriteria,l=e.orderCriteria,i=e.info,s=e.paginationSegment;return function(e){var o={action:"LIST",service:"SYSTEM_CLIENT_DOMAIN_SVC"};o.listStart=null!=n?n:t.listStart,o.listLimit=null!=a?a:t.listLimit,o.searchCriteria=null!=r?r:t.searchCriteria,o.orderCriteria=null!=l?l:t.orderCriteria;var c={page:"users",orderCriteria:o.orderCriteria,listStart:o.listStart,listLimit:o.listLimit};e({type:"SYSTEM_CLIENT_DOMAIN_PREF_CHANGE",userPrefChange:c});var u={};return u.requestParams=o,u.URI="/api/system/callService",W(u).then((function(t){null!=t&&null==t.protocalError?(e({type:"SYSTEM_CLIENT_DOMAIN_LIST",responseJson:t,paginationSegment:s}),null!=i&&e({type:"SHOW_STATUS",info:i})):actionUtils.checkConnectivity(t,e)})).catch((function(e){throw e}))}}function Fs(e){var t=e.state,n=e.listLimit;return function(e){e({type:"SYSTEM_CLIENT_DOMAIN_LISTLIMIT",listLimit:n}),e(Ds({state:t,listLimit:n}))}}function Bs(e){var t=e.state,n=e.searchCriteria;return function(e){e({type:"SYSTEM_CLIENT_DOMAIN_SEARCH",searchCriteria:n}),e(Ds({state:t,searchCriteria:n,listStart:0}))}}function ws(e){var t=e.field,n=e.value;return function(e){var a={};a.field=t,a.value=n,e({type:"SYSTEM_CLIENT_DOMAIN_SEARCH_CHANGE",params:a})}}function ks(e){var t=e.state;return function(e){var n={action:"SAVE",service:"SYSTEM_CLIENT_DOMAIN_SVC"};n.inputFields=t.inputFields;var a={};return a.requestParams=n,a.URI="/api/system/callService",W(a).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(Ds({state:t,info:["Save Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",error:n.errors}):actionUtils.checkConnectivity(n,e)})).catch((function(e){throw e}))}}function Gs(e){var t=e.state,n=e.id;return function(e){var a={action:"DELETE",service:"SYSTEM_CLIENT_DOMAIN_SVC"};a.itemId=n;var r={};return r.requestParams=a,r.URI="/api/system/callService",W(r).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(Ds({state:t,info:["Delete Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):actionUtils.checkConnectivity(n,e)})).catch((function(e){throw e}))}}function Us(e){var t=e.id,n=e.appPrefs;return function(e){var a={action:"ITEM",service:"SYSTEM_CLIENT_DOMAIN_SVC"};a.prefFormKeys=new Array("SYSTEM_CLIENT_DOMAIN_FORM"),null!=t&&(a.itemId=t);var r={};return r.requestParams=a,r.URI="/api/system/callService",W(r).then((function(t){null!=t&&null==t.protocalError?e({type:"SYSTEM_CLIENT_DOMAIN_ITEM",responseJson:t,appPrefs:n}):actionUtils.checkConnectivity(t,e)})).catch((function(e){throw e}))}}function js(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"SYSTEM_CLIENT_DOMAIN_INPUT_CHANGE",params:a})}}function xs(e){var t=e.state,n=e.orderCriteria;return function(e){e({type:"SYSTEM_CLIENT_DOMAIN_ORDERBY",orderCriteria:n}),e(Ds({state:t,orderCriteria:n}))}}function Vs(){return function(e){e({type:"SYSTEM_CLIENT_DOMAIN_CLEAR_ITEM"})}}function Hs(e){return function(t){var n={};n.field=e,t({type:"SYSTEM_CLIENT_DOMAIN_CLEAR_FIELD",params:n})}}function Js(e){var t=e.errors;return function(e){e({type:"SYSTEM_CLIENT_DOMAIN_SET_ERRORS",errors:t})}}function Ys(e){var t=e.item;return function(e){e({type:"SYSTEM_CLIENT_DOMAIN_OPEN_DELETE_MODAL",item:t})}}function qs(){return function(e){e({type:"SYSTEM_CLIENT_DOMAIN_CLOSE_DELETE_MODAL"})}}function Ws(e){var t=e.state;return function(e){e({type:"SYSTEM_CLIENT_DOMAIN_CANCEL"}),e(Ds({state:t}))}}function zs(e){var t=e.itemState,n=e.appPrefs,a=e.onListLimitChange,r=e.onSearchChange,l=e.onSearchClick,i=e.onPaginationClick,s=e.onOrderBy,o=e.onOption,c=e.closeModal,u=e.session,m=[];null!=t.prefLabels&&null!=t.prefLabels.SYSTEM_CLIENT_DOMAIN_PAGE&&(m=t.prefLabels.SYSTEM_CLIENT_DOMAIN_PAGE);var p="";null!=t.prefTexts.SYSTEM_CLIENT_DOMAIN_PAGE&&null!=t.prefTexts.SYSTEM_CLIENT_DOMAIN_PAGE.SYSTEM_CLIENT_DOMAIN_PAGE_HEADER&&(p=t.prefTexts.SYSTEM_CLIENT_DOMAIN_PAGE.SYSTEM_CLIENT_DOMAIN_PAGE_HEADER.value);var f="Delete ";null!=t.selected&&null!=t.selected.name&&(f+=t.selected.name);var d=!1;return"small"===u.viewPort&&(d=!0),g.createElement("div",null,d?g.createElement(Wr,{itemState:t,header:p,columns:m,appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o}):g.createElement(Ca,{itemState:t,header:p,columns:m,labelGroup:"TABLE1",appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o}),g.createElement(ga,{isOpen:t.isDeleteModalOpen,onClose:function(){return c()}},g.createElement("div",{className:"modal-dialog"},g.createElement("div",{className:"modal-content"},g.createElement("div",{className:"modal-header"},g.createElement("button",{type:"button",className:"close","data-dismiss":"modal","aria-hidden":"true"},g.createElement("i",{className:"fa fa-close"})),g.createElement("h4",{className:"modal-title"},f)),g.createElement("div",{className:"modal-body"},g.createElement("h3",null,"Are you sure you want to delete?")),g.createElement("div",{className:"modal-footer"},g.createElement("button",{type:"button",className:"btn btn-primary",onClick:function(){return o("DELETEFINAL",t.selected)}},"Delete"),g.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return c()}},"Close"))))))}function Ks(e){var t=e.itemState,n=e.appPrefs,a=e.onSave,r=e.onCancel,l=e.inputChange;e.onBlur;return g.createElement(Mt,{itemState:t,formName:"SYSTEM_CLIENT_DOMAIN_FORM",formTitle:"Client Domain",formGroup:"FORM1",appPrefs:n,onSave:a,onCancel:r,inputChange:l})}ys.propTypes={children:$().array},zs.propTypes={itemState:$().object.isRequired,appPrefs:$().object,onListLimitChange:$().func,onSearchChange:$().func,onSearchClick:$().func,onPaginationClick:$().func,onOrderBy:$().func,closeModal:$().func,onOption:$().func,session:$().object},Ks.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onSave:$().func,onCancel:$().func,inputChange:$().func,onBlur:$().func};const Xs=function(e){e.location,e.navigate;var t=(0,J.v9)((function(e){return e.systemclientdomain})),n=(0,J.v9)((function(e){return e.session})),a=(0,J.v9)((function(e){return e.appPrefs})),r=(0,J.I0)();(0,g.useEffect)((function(){r(Ps())}),[]);var l=function(e,n,l,i){Pt.inputChange({state:t,actions:C,dispatch:r,appPrefs:a,type:e,field:n,value:l,event:i})};return q({level:"TRACE",loc:"ClientDomainContainer::render",msg:"Hi there"}),"MODIFY"==t.view?g.createElement(Ks,{itemState:t,appPrefs:a,onSave:function(){Pt.onSave({state:t,actions:C,dispatch:r,appPrefs:a,form:"PM_PRODUCT_FORM"})},onCancel:function(){Pt.onCancel({state:t,actions:C,dispatch:r})},inputChange:l,onBlur:function(e){Pt.onCancel({state:t,actions:C,dispatch:r,field:e})}}):"MAIN"==t.view&&null!=t.items?g.createElement(zs,{itemState:t,appPrefs:a,onListLimitChange:function(e,n){Pt.onListLimitChange({state:t,actions:C,dispatch:r,appPrefs:a,fieldName:e,event:n})},onSearchChange:function(e,n){Pt.onSearchChange({state:t,actions:C,dispatch:r,appPrefs:a,field:e,event:n})},onSearchClick:function(e,n){Pt.onSearchClick({state:t,actions:C,dispatch:r,field:e,event:n})},onPaginationClick:function(e){Pt.onPaginationClick({state:t,actions:C,dispatch:r,value:e})},onOrderBy:function(e,n){Pt.onOrderBy({state:t,actions:C,dispatch:r,appPrefs:a,field:e,event:n})},closeModal:function(){Pt.closeModal({actions:C,dispatch:r})},onOption:function(e,n){q({level:"TRACE",loc:"ClientDomainContainer::onOption",msg:" code "+e}),Pt.onOptionBase({state:t,actions:C,dispatch:r,code:e,appPrefs:a,item:n})},inputChange:l,session:n}):g.createElement("div",null," Loading... ")};function Zs(){return function(e){var t={action:"INIT",service:"SYSTEM_SERVICES_SVC"};t.prefTextKeys=new Array("SYSTEM_SERVICES_PAGE"),t.prefLabelKeys=new Array("SYSTEM_SERVICES_PAGE");var n={};return n.requestParams=t,n.URI="/api/system/callService",W(n).then((function(t){null!=t&&null==t.protocalError?e({type:"SYSTEM_SERVICES_INIT",responseJson:t}):K(t,e)})).catch((function(e){throw e}))}}function $s(e){var t=e.state,n=e.listStart,a=e.listLimit,r=e.searchCriteria,l=e.orderCriteria,i=e.info,s=e.paginationSegment;return function(e){var o={action:"LIST",service:"SYSTEM_SERVICES_SVC"};o.listStart=null!=n?n:t.listStart,o.listLimit=null!=a?a:t.listLimit,o.searchCriteria=null!=r?r:t.searchCriteria,o.orderCriteria=null!=l?l:t.orderCriteria;var c={page:"users",orderCriteria:o.orderCriteria,listStart:o.listStart,listLimit:o.listLimit};e({type:"SYSTEM_SERVICES_PREF_CHANGE",userPrefChange:c});var u={};return u.requestParams=o,u.URI="/api/system/callService",W(u).then((function(t){null!=t&&null==t.protocalError?(e({type:"SYSTEM_SERVICES_LIST",responseJson:t,paginationSegment:s}),null!=i&&e({type:"SHOW_STATUS",info:i})):K(t,e)})).catch((function(e){throw e}))}}function Qs(e){var t=e.state,n=e.listLimit;return function(e){e({type:"SYSTEM_SERVICES_LISTLIMIT",listLimit:n}),e($s({state:t,listLimit:n}))}}function eo(e){var t=e.state,n=e.searchCriteria;return function(e){e({type:"SYSTEM_SERVICES_SEARCH",searchCriteria:n}),e($s({state:t,searchCriteria:n,listStart:0}))}}function to(e){var t=e.field,n=e.value;return function(e){var a={};a.field=t,a.value=n,e({type:"SYSTEM_SERVICES_SEARCH_CHANGE",params:a})}}function no(e){var t=e.state;return function(e){var n={action:"SAVE",service:"SYSTEM_SERVICES_SVC"};n.inputFields=t.inputFields;var a={};return a.requestParams=n,a.URI="/api/system/callService",W(a).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e($s({state:t,info:["Save Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",error:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function ao(e){var t=e.state,n=e.id;return function(e){var a={action:"DELETE",service:"SYSTEM_SERVICES_SVC"};a.itemId=n;var r={};return r.requestParams=a,r.URI="/api/system/callService",W(r).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e($s({state:t,info:["Delete Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function ro(e){var t=e.id,n=e.appPrefs;return function(e){var a={action:"ITEM",service:"SYSTEM_SERVICES_SVC"};a.prefFormKeys=new Array("SYSTEM_SERVICES_FORM"),null!=t&&(a.itemId=t);var r={};return r.requestParams=a,r.URI="/api/system/callService",W(r).then((function(t){null!=t&&null==t.protocalError?e({type:"SYSTEM_SERVICES_ITEM",responseJson:t,appPrefs:n}):K(t,e)})).catch((function(e){throw e}))}}function lo(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"SYSTEM_SERVICES_INPUT_CHANGE",params:a})}}function io(e){var t=e.state,n=e.orderCriteria;return function(e){e({type:"SYSTEM_SERVICES_ORDERBY",orderCriteria:n}),e($s({state:t,orderCriteria:n}))}}function so(){return function(e){e({type:"SYSTEM_SERVICES_CLEAR_ITEM"})}}function oo(e){return function(t){var n={};n.field=e,t({type:"SYSTEM_SERVICES_CLEAR_FIELD",params:n})}}function co(e){var t=e.errors;return function(e){e({type:"SYSTEM_SERVICES_SET_ERRORS",errors:t})}}function uo(e){var t=e.item;return function(e){e({type:"SYSTEM_SERVICES_OPEN_DELETE_MODAL",item:t})}}function mo(){return function(e){e({type:"SYSTEM_SERVICES_CLOSE_DELETE_MODAL"})}}function po(e){var t=e.state;return function(e){e({type:"SYSTEM_SERVICES_CANCEL"}),e($s({state:t}))}}function fo(e){var t=e.itemState,n=e.appPrefs,a=e.onListLimitChange,r=e.onSearchChange,l=e.onSearchClick,i=e.onPaginationClick,s=e.onOrderBy,o=e.onOption,c=e.closeModal,u=e.session,m=[];null!=t.prefLabels&&null!=t.prefLabels.SYSTEM_SERVICES_PAGE&&(m=t.prefLabels.SYSTEM_SERVICES_PAGE);var p="";null!=t.prefTexts.SYSTEM_SERVICES_PAGE&&null!=t.prefTexts.SYSTEM_SERVICES_PAGE.SYSTEM_SERVICES_PAGE_HEADER&&(p=t.prefTexts.SYSTEM_SERVICES_PAGE.SYSTEM_SERVICES_PAGE_HEADER.value);var f="Delete ";null!=t.selected&&null!=t.selected.name&&(f+=t.selected.name);var d=!1;return"small"===u.viewPort&&(d=!0),g.createElement("div",null,d?g.createElement(Wr,{itemState:t,header:p,columns:m,appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o}):g.createElement(Ca,{itemState:t,header:p,columns:m,labelGroup:"TABLE1",appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o}),g.createElement(ga,{isOpen:t.isDeleteModalOpen,onClose:function(){return c()}},g.createElement("div",{className:"modal-dialog"},g.createElement("div",{className:"modal-content"},g.createElement("div",{className:"modal-header"},g.createElement("button",{type:"button",className:"close","data-dismiss":"modal","aria-hidden":"true"},g.createElement("i",{className:"fa fa-close"})),g.createElement("h4",{className:"modal-title"},f)),g.createElement("div",{className:"modal-body"},g.createElement("h3",null,"Are you sure you want to delete?")),g.createElement("div",{className:"modal-footer"},g.createElement("button",{type:"button",className:"btn btn-primary",onClick:function(){return o("DELETEFINAL",t.selected)}},"Delete"),g.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return c()}},"Close"))))))}function Eo(e){var t=e.itemState,n=e.appPrefs,a=e.onSave,r=e.onCancel,l=e.inputChange;e.onBlur;return g.createElement(Mt,{itemState:t,formName:"SYSTEM_SERVICES_FORM",formTitle:"Products",formGroup:"FORM1",appPrefs:n,onSave:a,onCancel:r,inputChange:l})}fo.propTypes={itemState:$().object.isRequired,appPrefs:$().object,onListLimitChange:$().func,onSearchChange:$().func,onSearchClick:$().func,onPaginationClick:$().func,onOrderBy:$().func,closeModal:$().func,onOption:$().func,session:$().object},Eo.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onSave:$().func,onCancel:$().func,inputChange:$().func,onBlur:$().func};const Ao=function(e){e.location,e.navigate;var t=(0,J.v9)((function(e){return e.systemservice})),n=(0,J.v9)((function(e){return e.session})),a=(0,J.v9)((function(e){return e.appPrefs})),r=(0,J.I0)();(0,g.useEffect)((function(){r(Zs(n.selected.lang))}),[]);var l=function(e,n,l,i){Pt.inputChange({state:t,actions:h,dispatch:r,appPrefs:a,type:e,field:n,value:l,event:i})};return q({level:"TRACE",loc:"ServiceContainer::render",msg:"Hi there"}),"MODIFY"==t.view?g.createElement(Eo,{itemState:t,appPrefs:a,onSave:function(){Pt.onSave({state:t,actions:h,dispatch:r,appPrefs:a,form:"PM_PRODUCT_FORM"})},onCancel:function(){Pt.onCancel({state:t,actions:h,dispatch:r})},inputChange:l,onBlur:function(e){Pt.onCancel({state:t,actions:h,dispatch:r,field:e})}}):"MAIN"==t.view&&null!=t.items?g.createElement(fo,{itemState:t,appPrefs:a,onListLimitChange:function(e,n){Pt.onListLimitChange({state:t,actions:h,dispatch:r,appPrefs:a,fieldName:e,event:n})},onSearchChange:function(e,n){Pt.onSearchChange({state:t,actions:h,dispatch:r,appPrefs:a,field:e,event:n})},onSearchClick:function(e,n){Pt.onSearchClick({state:t,actions:h,dispatch:r,field:e,event:n})},onPaginationClick:function(e){Pt.onPaginationClick({state:t,actions:h,dispatch:r,value:e})},onOrderBy:function(e,n){Pt.onOrderBy({state:t,actions:h,dispatch:r,appPrefs:a,field:e,event:n})},closeModal:function(){Pt.closeModal({actions:h,dispatch:r})},onOption:function(e,n){q({level:"TRACE",loc:"ServiceContainer::onOption",msg:" code "+e}),Pt.onOptionBase({state:t,actions:h,dispatch:r,code:e,appPrefs:a,item:n})},inputChange:l,session:n}):g.createElement("div",null," Loading... ")};function So(){return function(e){var t={action:"INIT",service:"SYSTEM_APPLICATION_SVC"};t.prefTextKeys=new Array("SYSTEM_APPLICATION_PAGE"),t.prefLabelKeys=new Array("SYSTEM_APPLICATION_PAGE");var n={};return n.requestParams=t,n.URI="/api/system/callService",W(n).then((function(t){null!=t&&null==t.protocalError?e({type:"SYSTEM_APPLICATION_INIT",responseJson:t}):K(t,e)})).catch((function(e){throw e}))}}function vo(e){var t=e.listStart,n=e.listLimit,a=e.searchCriteria,r=e.orderCriteria,l=e.info;e.paginationSegment;return function(e){var i={action:"LIST",service:"SYSTEM_APPLICATION_SVC"};i.listStart=null!=t?t:state.listStart,i.listLimit=null!=n?n:state.listLimit,i.searchCriteria=null!=a?a:state.searchCriteria,i.orderCriteria=null!=r?r:state.orderCriteria,e({type:"APPLICATION_PREF_CHANGE",prefChange:{page:"languages",orderCriteria:r,listStart:t,listLimit:n}});var s={};return s.requestParams=i,s.URI="/api/system/callService",W(s).then((function(t){null!=t&&null==t.protocalError?(e({type:"SYSTEM_APPLICATION_LIST",responseJson:t}),null!=l&&e({type:"SHOW_STATUS",info:l})):K(t,e)})).catch((function(e){throw e}))}}function Co(e){var t=e.state,n=e.listLimit;return function(e){e({type:"SYSTEM_APPLICATION_LISTLIMIT",listLimit:n}),e(vo({state:t,listLimit:n}))}}function ho(e){var t=e.state,n=e.searchCriteria;return function(e){e({type:"SYSTEM_APPLICATION_SEARCH",searchCriteria:n}),e(vo({state:t,searchCriteria:n,listStart:0}))}}function _o(e){var t=e.field,n=e.value;return function(e){var a={};a.field=t,a.value=n,e({type:"SYSTEM_APPLICATION_SEARCH_CHANGE",params:a})}}function go(e){var t=e.state;return function(e){var n={action:"SAVE",service:"SYSTEM_APPLICATION_SVC"};n.inputFields=t.inputFields;var a={};return a.requestParams=n,a.URI="/api/system/callService",W(a).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(vo({state:t,info:["Save Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",error:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function Io(e){var t=e.state,n=e.id;return function(e){var a={action:"DELETE",service:"SYSTEM_APPLICATION_SVC"};a.itemId=n;var r={};return r.requestParams=a,r.URI="/api/system/callService",W(r).then((function(n){null!=n&&null==n.protocalError?null!=n&&null!=n.status&&"SUCCESS"==n.status?e(vo({state:t,info:["Delete Successful"]})):null!=n&&null!=n.status&&"ACTIONFAILED"==n.status&&e({type:"SHOW_STATUS",warn:n.errors}):K(n,e)})).catch((function(e){throw e}))}}function No(e){var t=e.id,n=e.appPrefs;return function(e){var a={action:"ITEM",service:"SYSTEM_APPLICATION_SVC"};a.prefFormKeys=new Array("SYSTEM_APPLICATION_FORM"),null!=t&&(a.itemId=t);var r={};return r.requestParams=a,r.URI="/api/system/callService",W(r).then((function(t){null!=t&&null==t.protocalError?e({type:"SYSTEM_APPLICATION_ITEM",responseJson:t,appPrefs:n}):K(t,e)})).catch((function(e){throw e}))}}function Oo(e,t){return function(n){var a={};a.field=e,a.value=t,n({type:"SYSTEM_APPLICATION_INPUT_CHANGE",params:a})}}function To(e){var t=e.state,n=e.orderCriteria;return function(e){e({type:"SYSTEM_APPLICATION_ORDERBY",orderCriteria:n}),e(vo({state:t,orderCriteria:n}))}}function bo(){return function(e){e({type:"SYSTEM_APPLICATION_CLEAR_APPLICATION"})}}function Mo(e){return function(t){var n={};n.field=e,t({type:"SYSTEM_APPLICATION_CLEAR_FIELD",params:n})}}function Ro(e){var t=e.errors;return function(e){e({type:"SYSTEM_APPLICATION_SET_ERRORS",errors:t})}}function Lo(e){var t=e.item;return function(e){e({type:"SYSTEM_APPLICATION_OPEN_DELETE_MODAL",item:t})}}function yo(){return function(e){e({type:"SYSTEM_APPLICATION_CLOSE_DELETE_MODAL"})}}function Po(e){var t=e.state;return function(e){e({type:"SYSTEM_APPLICATION_CANCEL"}),e(vo({state:t}))}}function Do(e){var t=e.itemState,n=e.appPrefs,a=e.onListLimitChange,r=e.onSearchChange,l=e.onSearchClick,i=e.onPaginationClick,s=e.onOrderBy,o=e.onOption,c=e.closeModal,u=e.session,m=[];null!=t.prefLabels&&null!=t.prefLabels.SYSTEM_APPLICATION_PAGE&&(m=t.prefLabels.SYSTEM_APPLICATION_PAGE);var p="";null!=t.prefTexts.SYSTEM_APPLICATION_PAGE&&null!=t.prefTexts.SYSTEM_APPLICATION_PAGE.SYSTEM_APPLICATION_PAGE_HEADER&&(p=t.prefTexts.SYSTEM_APPLICATION_PAGE.SYSTEM_APPLICATION_PAGE_HEADER.value);var f="Delete ";null!=t.selected&&null!=t.selected.name&&(f+=t.selected.name);var d=!1;return"small"===u.viewPort&&(d=!0),g.createElement("div",null,d?g.createElement(ListBuilder,{itemState:t,header:p,columns:m,appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o}):g.createElement(Ca,{itemState:t,header:p,columns:m,labelGroup:"TABLE1",appPrefs:n,onListLimitChange:a,onSearchChange:r,onSearchClick:l,onPaginationClick:i,onOrderBy:s,onOption:o}),g.createElement(ga,{isOpen:t.isDeleteModalOpen,onClose:function(){return c()}},g.createElement("div",{className:"modal-dialog"},g.createElement("div",{className:"modal-content"},g.createElement("div",{className:"modal-header"},g.createElement("button",{type:"button",className:"close","data-dismiss":"modal","aria-hidden":"true"},g.createElement("i",{className:"fa fa-close"})),g.createElement("h4",{className:"modal-title"},f)),g.createElement("div",{className:"modal-body"},g.createElement("h3",null,"Are you sure you want to delete?")),g.createElement("div",{className:"modal-footer"},g.createElement("button",{type:"button",className:"btn btn-primary",onClick:function(){return o("DELETEFINAL",t.selected)}},"Delete"),g.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:function(){return c()}},"Close"))))))}function Fo(e){var t=e.itemState,n=e.appPrefs,a=e.onSave,r=e.onCancel,l=e.inputChange;e.onBlur;return g.createElement(Mt,{itemState:t,formName:"SYSTEM_APPLICATION_FORM",formTitle:"Application",formGroup:"FORM1",appPrefs:n,onSave:a,onCancel:r,inputChange:l})}Do.propTypes={itemState:$().object.isRequired,appPrefs:$().object,onListLimitChange:$().func,onSearchChange:$().func,onSearchClick:$().func,onPaginationClick:$().func,onOrderBy:$().func,closeModal:$().func,onOption:$().func,session:$().object},Fo.propTypes={itemState:$().object.isRequired,appPrefs:$().object.isRequired,onSave:$().func,onCancel:$().func,inputChange:$().func,onBlur:$().func};const Bo=function(e){e.location,e.navigate;var t=(0,J.v9)((function(e){return e.systemapplication})),n=(0,J.v9)((function(e){return e.session})),a=(0,J.v9)((function(e){return e.appPrefs})),r=(0,J.I0)();(0,g.useEffect)((function(){r(So())}),[]);var l=function(e,n,l,i){Pt.inputChange({state:t,actions:_,dispatch:r,appPrefs:a,type:e,field:n,value:l,event:i})};return q({level:"TRACE",loc:"ApplicationContainer::render",msg:"Hi there"}),"MODIFY"==t.view?g.createElement(Fo,{itemState:t,appPrefs:a,onSave:function(){Pt.onSave({state:t,actions:_,dispatch:r,appPrefs:a,form:"PM_PRODUCT_FORM"})},onCancel:function(){Pt.onCancel({state:t,actions:_,dispatch:r})},inputChange:l}):"MAIN"==t.view&&null!=t.items?g.createElement(Do,{itemState:t,appPrefs:a,onListLimitChange:function(e,n){Pt.onListLimitChange({state:t,actions:_,dispatch:r,appPrefs:a,fieldName:e,event:n})},onSearchChange:function(e,n){Pt.onSearchChange({state:t,actions:_,dispatch:r,appPrefs:a,field:e,event:n})},onSearchClick:function(e,n){Pt.onSearchClick({state:t,actions:_,dispatch:r,field:e,event:n})},onPaginationClick:function(e){Pt.onPaginationClick({state:t,actions:_,dispatch:r,value:e})},onOrderBy:function(e,n){Pt.onOrderBy({state:t,actions:_,dispatch:r,appPrefs:a,field:e,event:n})},closeModal:function(){Pt.closeModal({actions:_,dispatch:r})},onOption:function(e,n){q({level:"TRACE",loc:"ApplicationContainer::onOption",msg:" code "+e}),Pt.onOptionBase({state:t,actions:_,dispatch:r,code:e,appPrefs:a,item:n})},inputChange:l,session:n}):g.createElement("div",null," Loading... ")};const wo=function(e){var t=e.location,n=e.navigate,a=(0,J.v9)((function(e){return e.session})),r=(0,J.v9)((function(e){return e.appMenus})),l=(0,J.v9)((function(e){return e.appPrefs})),i=(0,J.I0)();(0,g.useEffect)((function(){i((function(e){var t={action:"INIT",service:"SYSTEM_SVC"};t.prefTexts=new Array("SYSTEM_PAGE"),t.menuNames=new Array("SYSTEM_MENU_TOP");var n={};return n.requestParams=t,n.URI="/api/system/callService",W(n).then((function(t){null!=t&&null==t.protocalError?e({type:"GLOBAL_INIT",responseJson:t}):actionUtils.checkConnectivity(t,e)})).catch((function(e){throw e}))}))}),[]),q({level:"TRACE",loc:"SystemContainer::render",msg:"path "+t.pathname});var s=[];null!=r&&null!=r[l.systemMenu]&&(s=r[l.systemMenu]);var o={};return null!=a&&null!=a.selected&&null!=a.selected.permissions&&(o=a.selected.permissions),s.length>0?g.createElement(ys,null,g.createElement(_e,{appPrefs:l,permissions:o,menus:s,changeTab:function(e,t){n(t)},activeTab:t.pathname}),g.createElement(Ue,null),g.createElement(je.Z5,null,g.createElement(je.AW,{index:!0,component:g.createElement(Ls,null)}),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"SCD",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/clientdomain/*",element:g.createElement(Xs,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"SSC",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/services/*",element:g.createElement(Ao,{location:t,navigate:n})})),g.createElement(je.AW,{element:g.createElement(_n,{permissions:o,code:"SA",pathto:"/access-denied"})},g.createElement(je.AW,{path:"/application/*",element:g.createElement(Bo,{location:t,navigate:n})})))):g.createElement(ys,null," ",g.createElement(xe,null))};function ko(e){e.currentState,e.fields,e.texts,e.labels;return g.createElement("div",null,g.createElement("div",null," AccessDenied Page "))}ko.propTypes={currentState:$().object,fields:$().object,texts:$().object,labels:$().object};const Go=function(){return q({level:"TRACE",loc:"AccessDeniedContainer::render",msg:"Hi there"}),g.createElement(ko,null)};const Uo=function(){var e=(0,J.v9)((function(e){return e.session})),t=(0,J.v9)((function(e){return e.appMenus})),n=(0,J.v9)((function(e){return e.appPrefs})),a=(0,J.I0)(),r=(0,je.TH)(),l=(0,je.s0)();return(0,g.useEffect)((function(){q({level:"TRACE",loc:"PageContainer::useEffect",msg:"page "+r.pathname}),1==e.callComplete&&1==e.sessionActive&&"JUST_LOGGEDIN"===e.status?(q({level:"TRACE",loc:"PageContainer::session active",msg:"page "+r.pathname}),a({type:"CLEAR_SESSION_LOGIN"}),l("/member")):1==e.callComplete&&1==e.sessionActive&&"/"===r.pathname?l("/member"):1==e.callComplete&&0==e.sessionActive&&("/member-logout"===r.pathname?l("/login"):"/"!==r.pathname&&"/login"!==r.pathname&&"/about"!==r.pathname&&"/services"!==r.pathname&&l("/"))}),[e]),1==e.callComplete&&1==e.sessionActive?(q({level:"TRACE",loc:"PageContainer::render session Active",msg:"page "+r.pathname}),g.createElement(je.Z5,null,g.createElement(je.AW,{path:"/member/*",element:g.createElement(gn,{location:r,navigate:l})}),g.createElement(je.AW,{path:"/access-denied",element:g.createElement(Go,null)}),g.createElement(je.AW,{path:"/admin/*",element:g.createElement(bs,{location:r,navigate:l})}),g.createElement(je.AW,{path:"/system/*",element:g.createElement(wo,{location:r,navigate:l})}))):(q({level:"TRACE",loc:"PageContainer::render session NOT Active",msg:"page "+r.pathname}),g.createElement("div",null,g.createElement(_e,{appPrefs:n,activeTab:r.pathname,menus:t.PUBLIC_MENU_RIGHT}),g.createElement(Ue,null),g.createElement(je.Z5,null,g.createElement(je.AW,{path:"/*",element:g.createElement(yn,{location:r,navigate:l})}),g.createElement(je.AW,{path:"/login/*",element:g.createElement(ke,{location:r,navigate:l})}),g.createElement(je.AW,{path:"/about/*",element:g.createElement(yn,{location:r,navigate:l})}),g.createElement(je.AW,{path:"/services/*",element:g.createElement(jn,{location:r,navigate:l})}))))};n(2814);var jo=n(3379),xo=n.n(jo),Vo=n(7795),Ho=n.n(Vo),Jo=n(569),Yo=n.n(Jo),qo=n(3565),Wo=n.n(qo),zo=n(9216),Ko=n.n(zo),Xo=n(4589),Zo=n.n(Xo),$o=n(8195),Qo={};Qo.styleTagTransform=Zo(),Qo.setAttributes=Wo(),Qo.insert=Yo().bind(null,"head"),Qo.domAPI=Ho(),Qo.insertStyleElement=Ko();xo()($o.Z,Qo);$o.Z&&$o.Z.locals&&$o.Z.locals;var ec,tc=(ec={appPrefs:{lang:localStorage.getItem("lang"),headerName:"Trade Analyzer",codeType:"WEB",debugClient:"TRACE",memberMenu:"MEMBER_MENU_TOP",adminMenu:"ADMIN_MENU_TOP",systemMenu:"SYSTEM_MENU_TOP"},session:{sessionActive:null,viewPort:"large",callComplete:!1},status:{error:null,info:null,warn:null},member:{view:"login"},stocks:{},crypto:{},dashboard:{},trade:{}},(0,N.MT)(x,ec,(0,O.Uo)((0,N.md)(V.Z,(0,H.Z)()))));tc.dispatch(z()),tc.dispatch((function(e){var t={action:"CHECK",service:"MEMBER_SVC"},n={};return n.requestParams=t,n.URI="/api/member/callService",W(n).then((function(t){null!=t&&null==t.protocalError?e({type:"LOAD_SESSION_CHECK",responseJson:t}):K(t,e)})).catch((function(e){throw e}))})),tc.dispatch(X(window.innerWidth,window.innerHeight));function nc(){return tc.getState().appPrefs.debugClient}function ac(){return""}window.addEventListener("resize",he((function(){console.log("resized to",window.innerWidth,window.innerHeight),tc.dispatch(X(window.innerWidth,window.innerHeight))}),1e3)),(0,I.render)(g.createElement(J.zt,{store:tc},g.createElement(Y.VK,null,g.createElement(Uo,null))),document.getElementById("app"))},8195:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var a=n(7537),r=n.n(a),l=n(3645),i=n.n(l)()(r());i.push([e.id,'@CHARSET "UTF-8";\n\nbody {\n  padding-bottom: 30px;\n}\n\n.theme-dropdown .dropdown-menu {\n  display: block;\n  margin-bottom: 20px;\n  position: static;\n}\n\n.toasthub-autocomplete {\n  /*the container must be positioned relative:*/\n  position: relative;\n}\n\n.toasthub-autocomplete-items {\n  position: absolute;\n  border: 1px solid #d4d4d4;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  /*position the autocomplete items to be the same width as the container:*/\n  top: 100%;\n  left: 0;\n  right: 0;\n}\n.toasthub-autocomplete-items div {\n  padding: 10px;\n  cursor: pointer;\n  background-color: #fff;\n  border-bottom: 1px solid #d4d4d4;\n}\n.toasthub-autocomplete-items div:hover {\n  /*when hovering an item:*/\n  background-color: #e9e9e9;\n}\n.toasthub-autocomplete-active {\n  /*when navigating through the items using the arrow keys:*/\n  background-color: DodgerBlue !important;\n  color: #ffffff;\n}\n\n.main_content {\n\tbackground: #F7F7F7;\n}\n\n.clear-padding {\n\tpadding-left: 0px !important;\n\tpadding-right: 0px !important;\n}\n\n.panel-login {\n\tbackground-color: #F5F5F5;\n\t-moz-box-shadow: 0px 2px 3px 0px rgba(0,0,0,0.2);\n\t-webkit-box-shadow: 0px 2px 3px 0px rgba(0,0,0,0.2);\n\tbox-shadow: 0px 2px 3px 0px rgba(0,0,0,0.2);\n}\n\n.panel-login>.panel-heading {\n\tborder-color: #fff;\n\tcolor: #00415d;\n\ttext-align:center;\n}\n.panel-login>.panel-heading a{\n\tcolor: #9E9E9E;\n\tfont-weight: bold;\n\tfont-size: 15px;\n\ttext-decoration: none;\n\ttransition: all 0.1s linear;\n\t-webkit-transition: all 0.1s linear;\n\t-moz-transition: all 0.1s linear;\n}\n.panel-login>.panel-heading a.active{\n\tcolor: #212121;\n\tfont-size: 18px;\n}\n.panel-login>.panel-heading hr{\n\tmargin-top: 10px;\n\tmargin-bottom: 0px;\n\tclear: both;\n\tborder: 0;\n\theight: 1px;\n\tbackground-image: -webkit-linear-gradient(left,rgba(0, 0, 0, 0),rgba(0, 0, 0, 0.15),rgba(0, 0, 0, 0));\n\tbackground-image: -moz-linear-gradient(left,rgba(0,0,0,0),rgba(0,0,0,0.15),rgba(0,0,0,0));\n\tbackground-image: -ms-linear-gradient(left,rgba(0,0,0,0),rgba(0,0,0,0.15),rgba(0,0,0,0));\n\tbackground-image: -o-linear-gradient(left,rgba(0,0,0,0),rgba(0,0,0,0.15),rgba(0,0,0,0));\n}\n.panel-login input[type="text"],.panel-login input[type="email"],.panel-login input[type="password"] {\n\theight: 45px;\n\tborder: 1px solid #ddd;\n\tfont-size: 16px;\n\t-webkit-transition: all 0.1s linear;\n\t-moz-transition: all 0.1s linear;\n\ttransition: all 0.1s linear;\n}\n.panel-login input:hover,\n.panel-login input:focus {\n\toutline:none;\n\t-webkit-box-shadow: none;\n\t-moz-box-shadow: none;\n\tbox-shadow: none;\n\tborder-color: #ccc;\n}\n.panel-body-login {\n\tbackground-color: #F5F5F5;\n\tborder-radius: 4px;\n}\n.btn-login {\n\tbackground-color: #01579B;\n\toutline: none;\n\tcolor: #fff;\n\tfont-size: 14px;\n\theight: auto;\n\tfont-weight: normal;\n\tpadding: 14px 0;\n\ttext-transform: uppercase;\n}\n.btn-login:hover,\n.btn-login:focus {\n\tcolor: #fff;\n\tbackground-color: #53A3CD;\n\tborder-color: #53A3CD;\n}\n.forgot-password {\n\ttext-decoration: underline;\n\tcolor: #888;\n}\n.forgot-password:hover,\n.forgot-password:focus {\n\ttext-decoration: underline;\n\tcolor: #666;\n}\n\n.btn-register {\n\tbackground-color: #1CB94E;\n\toutline: none;\n\tcolor: #fff;\n\tfont-size: 14px;\n\theight: auto;\n\tfont-weight: normal;\n\tpadding: 14px 0;\n\ttext-transform: uppercase;\n\tborder-color: #1CB94A;\n}\n.btn-register:hover,\n.btn-register:focus {\n\tcolor: #fff;\n\tbackground-color: #1CA347;\n\tborder-color: #1CA347;\n}\n.btn.btn-radio.active {\n\tcolor: #fed136;\n\tbackground-color: #fff\n}\n.alert {\n\tmargin: 0px !important;\n}\n\n.x_panel {\n\tposition: relative;\n  width: 100%;\n  margin-bottom: 10px;\n  padding: 10px 17px;\n  display: inline-block;\n  background: #fff;\n  border: 1px solid #E6E9ED;\n  -webkit-column-break-inside: avoid;\n  -moz-column-break-inside: avoid;\n  column-break-inside: avoid;\n  opacity: 1;\n  transition: all .2s ease;\n}\n\n.x_title {\n\tborder-bottom: 2px solid #E6E9ED;\n  padding: 1px 5px 6px;\n  margin-bottom: 10px;\n}\n\n.x_content {\n\tpadding: 0 5px 6px;\n  position: relative;\n  width: 100%;\n  float: left;\n  clear: both;\n  margin-top: 5px;\n}\n\n.dataTables_length {\n  width: 40%;\n  float: left;\n}\n\ndiv.dataTables_length label {\n    font-weight: normal;\n    text-align: left;\n    white-space: nowrap;\n}\n\ndiv.dataTables_length select {\n    width: 75px;\n    display: inline-block;\n}\n\n.dataTables_info {\n\tpadding-top: 8px;\n\twhite-space: nowrap;\n  width: 60%;\n  float: left;\n}\n\ndiv.dataTables_paginate ul.pagination {\n    margin: 2px 0;\n    white-space: nowrap;\n}\n\n.dataTables_paginate {\n\tmargin: 0;\n\twhite-space: nowrap;\n  float: right;\n  text-align: right;\n}\n\n#pageSearch .form-group {\n\tmargin: 0;\n}\n\n.panel_toolbox {\n    float: right;\n    min-width: 70px;\n}\n\n.navbar-right {\n    margin-right: 0;\n\t\tlist-style: none;\n}\n\n.panel_toolbox>li {\n    float: left;\n    cursor: pointer;\n}\n.panel_toolbox>li>a {\n    padding: 5px;\n    color: #C5C7CB;\n    font-size: 14px;\n}\n\n.paginate_button>span {\n\t    cursor: pointer;\n}\n\n.list-table {\n\tpadding: 0px;\n}\n.list-table>li {\n\tlist-style: none;\n\tborder: 1px solid #E6E9ED;\n}\n.list-table>li>div {\n\twidth: 20%;\n\tdisplay: inline-block;\n}\n\nul.list-group.list-group-striped li:nth-of-type(odd){\n    background: #f8f8f8;\n}\nul.list-group.list-group-striped li:nth-of-type(even){\n    background: #ffffff;\n}\nul.list-group.list-group-hover li:hover{\n    background: red;\n}\n\n.tab-list {\n  border-bottom: 1px solid #ccc;\n  padding-left: 0;\n}\n\n.tab-list-item {\n  display: inline-block;\n  list-style: none;\n  margin-bottom: -1px;\n  padding: 0.5rem 0.75rem;\n}\n\n.tab-list-active {\n  background-color: white;\n  border: solid #ccc;\n  border-width: 1px 1px 0 1px;\n}\n\n.thub-1 {\n\tfont-size: 1em;\n\tmargin-right: 5px;\n\tcolor: Dodgerblue;\n}\n.thub-2 {\n\tfont-size: 2em;\n\tmargin-right: 3px;\n\tcolor: Dodgerblue;\n}\n.thub-3 {\n\tfont-size: 4em;\n\tmargin-right: 3px;\n\tcolor: Dodgerblue;\n}\n.toasthub-login-top {\n\tmargin-top: 60px;\n}\n.thub-field {\n\tmargin-bottom: 5px;\n}',"",{version:3,sources:["webpack://./src/main/js/site.css"],names:[],mappings:"AAAA,gBAAgB;;AAEhB;EACE,oBAAoB;AACtB;;AAEA;EACE,cAAc;EACd,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,6CAA6C;EAC7C,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,yBAAyB;EACzB,mBAAmB;EACnB,gBAAgB;EAChB,WAAW;EACX,yEAAyE;EACzE,SAAS;EACT,OAAO;EACP,QAAQ;AACV;AACA;EACE,aAAa;EACb,eAAe;EACf,sBAAsB;EACtB,gCAAgC;AAClC;AACA;EACE,yBAAyB;EACzB,yBAAyB;AAC3B;AACA;EACE,0DAA0D;EAC1D,uCAAuC;EACvC,cAAc;AAChB;;AAEA;CACC,mBAAmB;AACpB;;AAEA;CACC,4BAA4B;CAC5B,6BAA6B;AAC9B;;AAEA;CACC,yBAAyB;CACzB,gDAAgD;CAChD,mDAAmD;CACnD,2CAA2C;AAC5C;;AAEA;CACC,kBAAkB;CAClB,cAAc;CACd,iBAAiB;AAClB;AACA;CACC,cAAc;CACd,iBAAiB;CACjB,eAAe;CACf,qBAAqB;CACrB,2BAA2B;CAC3B,mCAAmC;CACnC,gCAAgC;AACjC;AACA;CACC,cAAc;CACd,eAAe;AAChB;AACA;CACC,gBAAgB;CAChB,kBAAkB;CAClB,WAAW;CACX,SAAS;CACT,WAAW;CACX,qGAAqG;CACrG,yFAAyF;CACzF,wFAAwF;CACxF,uFAAuF;AACxF;AACA;CACC,YAAY;CACZ,sBAAsB;CACtB,eAAe;CACf,mCAAmC;CACnC,gCAAgC;CAChC,2BAA2B;AAC5B;AACA;;CAEC,YAAY;CACZ,wBAAwB;CACxB,qBAAqB;CACrB,gBAAgB;CAChB,kBAAkB;AACnB;AACA;CACC,yBAAyB;CACzB,kBAAkB;AACnB;AACA;CACC,yBAAyB;CACzB,aAAa;CACb,WAAW;CACX,eAAe;CACf,YAAY;CACZ,mBAAmB;CACnB,eAAe;CACf,yBAAyB;AAC1B;AACA;;CAEC,WAAW;CACX,yBAAyB;CACzB,qBAAqB;AACtB;AACA;CACC,0BAA0B;CAC1B,WAAW;AACZ;AACA;;CAEC,0BAA0B;CAC1B,WAAW;AACZ;;AAEA;CACC,yBAAyB;CACzB,aAAa;CACb,WAAW;CACX,eAAe;CACf,YAAY;CACZ,mBAAmB;CACnB,eAAe;CACf,yBAAyB;CACzB,qBAAqB;AACtB;AACA;;CAEC,WAAW;CACX,yBAAyB;CACzB,qBAAqB;AACtB;AACA;CACC,cAAc;CACd;AACD;AACA;CACC,sBAAsB;AACvB;;AAEA;CACC,kBAAkB;EACjB,WAAW;EACX,mBAAmB;EACnB,kBAAkB;EAClB,qBAAqB;EACrB,gBAAgB;EAChB,yBAAyB;EACzB,kCAAkC;EAClC,+BAA+B;EAC/B,0BAA0B;EAC1B,UAAU;EACV,wBAAwB;AAC1B;;AAEA;CACC,gCAAgC;EAC/B,oBAAoB;EACpB,mBAAmB;AACrB;;AAEA;CACC,kBAAkB;EACjB,kBAAkB;EAClB,WAAW;EACX,WAAW;EACX,WAAW;EACX,eAAe;AACjB;;AAEA;EACE,UAAU;EACV,WAAW;AACb;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,qBAAqB;AACzB;;AAEA;CACC,gBAAgB;CAChB,mBAAmB;EAClB,UAAU;EACV,WAAW;AACb;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;CACC,SAAS;CACT,mBAAmB;EAClB,YAAY;EACZ,iBAAiB;AACnB;;AAEA;CACC,SAAS;AACV;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,eAAe;EACjB,gBAAgB;AAClB;;AAEA;IACI,WAAW;IACX,eAAe;AACnB;AACA;IACI,YAAY;IACZ,cAAc;IACd,eAAe;AACnB;;AAEA;KACK,eAAe;AACpB;;AAEA;CACC,YAAY;AACb;AACA;CACC,gBAAgB;CAChB,yBAAyB;AAC1B;AACA;CACC,UAAU;CACV,qBAAqB;AACtB;;AAEA;IACI,mBAAmB;AACvB;AACA;IACI,mBAAmB;AACvB;AACA;IACI,eAAe;AACnB;;AAEA;EACE,6BAA6B;EAC7B,eAAe;AACjB;;AAEA;EACE,qBAAqB;EACrB,gBAAgB;EAChB,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,uBAAuB;EACvB,kBAAkB;EAClB,2BAA2B;AAC7B;;AAEA;CACC,cAAc;CACd,iBAAiB;CACjB,iBAAiB;AAClB;AACA;CACC,cAAc;CACd,iBAAiB;CACjB,iBAAiB;AAClB;AACA;CACC,cAAc;CACd,iBAAiB;CACjB,iBAAiB;AAClB;AACA;CACC,gBAAgB;AACjB;AACA;CACC,kBAAkB;AACnB",sourcesContent:['@CHARSET "UTF-8";\n\nbody {\n  padding-bottom: 30px;\n}\n\n.theme-dropdown .dropdown-menu {\n  display: block;\n  margin-bottom: 20px;\n  position: static;\n}\n\n.toasthub-autocomplete {\n  /*the container must be positioned relative:*/\n  position: relative;\n}\n\n.toasthub-autocomplete-items {\n  position: absolute;\n  border: 1px solid #d4d4d4;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  /*position the autocomplete items to be the same width as the container:*/\n  top: 100%;\n  left: 0;\n  right: 0;\n}\n.toasthub-autocomplete-items div {\n  padding: 10px;\n  cursor: pointer;\n  background-color: #fff;\n  border-bottom: 1px solid #d4d4d4;\n}\n.toasthub-autocomplete-items div:hover {\n  /*when hovering an item:*/\n  background-color: #e9e9e9;\n}\n.toasthub-autocomplete-active {\n  /*when navigating through the items using the arrow keys:*/\n  background-color: DodgerBlue !important;\n  color: #ffffff;\n}\n\n.main_content {\n\tbackground: #F7F7F7;\n}\n\n.clear-padding {\n\tpadding-left: 0px !important;\n\tpadding-right: 0px !important;\n}\n\n.panel-login {\n\tbackground-color: #F5F5F5;\n\t-moz-box-shadow: 0px 2px 3px 0px rgba(0,0,0,0.2);\n\t-webkit-box-shadow: 0px 2px 3px 0px rgba(0,0,0,0.2);\n\tbox-shadow: 0px 2px 3px 0px rgba(0,0,0,0.2);\n}\n\n.panel-login>.panel-heading {\n\tborder-color: #fff;\n\tcolor: #00415d;\n\ttext-align:center;\n}\n.panel-login>.panel-heading a{\n\tcolor: #9E9E9E;\n\tfont-weight: bold;\n\tfont-size: 15px;\n\ttext-decoration: none;\n\ttransition: all 0.1s linear;\n\t-webkit-transition: all 0.1s linear;\n\t-moz-transition: all 0.1s linear;\n}\n.panel-login>.panel-heading a.active{\n\tcolor: #212121;\n\tfont-size: 18px;\n}\n.panel-login>.panel-heading hr{\n\tmargin-top: 10px;\n\tmargin-bottom: 0px;\n\tclear: both;\n\tborder: 0;\n\theight: 1px;\n\tbackground-image: -webkit-linear-gradient(left,rgba(0, 0, 0, 0),rgba(0, 0, 0, 0.15),rgba(0, 0, 0, 0));\n\tbackground-image: -moz-linear-gradient(left,rgba(0,0,0,0),rgba(0,0,0,0.15),rgba(0,0,0,0));\n\tbackground-image: -ms-linear-gradient(left,rgba(0,0,0,0),rgba(0,0,0,0.15),rgba(0,0,0,0));\n\tbackground-image: -o-linear-gradient(left,rgba(0,0,0,0),rgba(0,0,0,0.15),rgba(0,0,0,0));\n}\n.panel-login input[type="text"],.panel-login input[type="email"],.panel-login input[type="password"] {\n\theight: 45px;\n\tborder: 1px solid #ddd;\n\tfont-size: 16px;\n\t-webkit-transition: all 0.1s linear;\n\t-moz-transition: all 0.1s linear;\n\ttransition: all 0.1s linear;\n}\n.panel-login input:hover,\n.panel-login input:focus {\n\toutline:none;\n\t-webkit-box-shadow: none;\n\t-moz-box-shadow: none;\n\tbox-shadow: none;\n\tborder-color: #ccc;\n}\n.panel-body-login {\n\tbackground-color: #F5F5F5;\n\tborder-radius: 4px;\n}\n.btn-login {\n\tbackground-color: #01579B;\n\toutline: none;\n\tcolor: #fff;\n\tfont-size: 14px;\n\theight: auto;\n\tfont-weight: normal;\n\tpadding: 14px 0;\n\ttext-transform: uppercase;\n}\n.btn-login:hover,\n.btn-login:focus {\n\tcolor: #fff;\n\tbackground-color: #53A3CD;\n\tborder-color: #53A3CD;\n}\n.forgot-password {\n\ttext-decoration: underline;\n\tcolor: #888;\n}\n.forgot-password:hover,\n.forgot-password:focus {\n\ttext-decoration: underline;\n\tcolor: #666;\n}\n\n.btn-register {\n\tbackground-color: #1CB94E;\n\toutline: none;\n\tcolor: #fff;\n\tfont-size: 14px;\n\theight: auto;\n\tfont-weight: normal;\n\tpadding: 14px 0;\n\ttext-transform: uppercase;\n\tborder-color: #1CB94A;\n}\n.btn-register:hover,\n.btn-register:focus {\n\tcolor: #fff;\n\tbackground-color: #1CA347;\n\tborder-color: #1CA347;\n}\n.btn.btn-radio.active {\n\tcolor: #fed136;\n\tbackground-color: #fff\n}\n.alert {\n\tmargin: 0px !important;\n}\n\n.x_panel {\n\tposition: relative;\n  width: 100%;\n  margin-bottom: 10px;\n  padding: 10px 17px;\n  display: inline-block;\n  background: #fff;\n  border: 1px solid #E6E9ED;\n  -webkit-column-break-inside: avoid;\n  -moz-column-break-inside: avoid;\n  column-break-inside: avoid;\n  opacity: 1;\n  transition: all .2s ease;\n}\n\n.x_title {\n\tborder-bottom: 2px solid #E6E9ED;\n  padding: 1px 5px 6px;\n  margin-bottom: 10px;\n}\n\n.x_content {\n\tpadding: 0 5px 6px;\n  position: relative;\n  width: 100%;\n  float: left;\n  clear: both;\n  margin-top: 5px;\n}\n\n.dataTables_length {\n  width: 40%;\n  float: left;\n}\n\ndiv.dataTables_length label {\n    font-weight: normal;\n    text-align: left;\n    white-space: nowrap;\n}\n\ndiv.dataTables_length select {\n    width: 75px;\n    display: inline-block;\n}\n\n.dataTables_info {\n\tpadding-top: 8px;\n\twhite-space: nowrap;\n  width: 60%;\n  float: left;\n}\n\ndiv.dataTables_paginate ul.pagination {\n    margin: 2px 0;\n    white-space: nowrap;\n}\n\n.dataTables_paginate {\n\tmargin: 0;\n\twhite-space: nowrap;\n  float: right;\n  text-align: right;\n}\n\n#pageSearch .form-group {\n\tmargin: 0;\n}\n\n.panel_toolbox {\n    float: right;\n    min-width: 70px;\n}\n\n.navbar-right {\n    margin-right: 0;\n\t\tlist-style: none;\n}\n\n.panel_toolbox>li {\n    float: left;\n    cursor: pointer;\n}\n.panel_toolbox>li>a {\n    padding: 5px;\n    color: #C5C7CB;\n    font-size: 14px;\n}\n\n.paginate_button>span {\n\t    cursor: pointer;\n}\n\n.list-table {\n\tpadding: 0px;\n}\n.list-table>li {\n\tlist-style: none;\n\tborder: 1px solid #E6E9ED;\n}\n.list-table>li>div {\n\twidth: 20%;\n\tdisplay: inline-block;\n}\n\nul.list-group.list-group-striped li:nth-of-type(odd){\n    background: #f8f8f8;\n}\nul.list-group.list-group-striped li:nth-of-type(even){\n    background: #ffffff;\n}\nul.list-group.list-group-hover li:hover{\n    background: red;\n}\n\n.tab-list {\n  border-bottom: 1px solid #ccc;\n  padding-left: 0;\n}\n\n.tab-list-item {\n  display: inline-block;\n  list-style: none;\n  margin-bottom: -1px;\n  padding: 0.5rem 0.75rem;\n}\n\n.tab-list-active {\n  background-color: white;\n  border: solid #ccc;\n  border-width: 1px 1px 0 1px;\n}\n\n.thub-1 {\n\tfont-size: 1em;\n\tmargin-right: 5px;\n\tcolor: Dodgerblue;\n}\n.thub-2 {\n\tfont-size: 2em;\n\tmargin-right: 3px;\n\tcolor: Dodgerblue;\n}\n.thub-3 {\n\tfont-size: 4em;\n\tmargin-right: 3px;\n\tcolor: Dodgerblue;\n}\n.toasthub-login-top {\n\tmargin-top: 60px;\n}\n.thub-field {\n\tmargin-bottom: 5px;\n}'],sourceRoot:""}]);const s=i},6700:(e,t,n)=>{var a={"./af":2786,"./af.js":2786,"./ar":867,"./ar-dz":4130,"./ar-dz.js":4130,"./ar-kw":6135,"./ar-kw.js":6135,"./ar-ly":6440,"./ar-ly.js":6440,"./ar-ma":7702,"./ar-ma.js":7702,"./ar-sa":6040,"./ar-sa.js":6040,"./ar-tn":7100,"./ar-tn.js":7100,"./ar.js":867,"./az":1083,"./az.js":1083,"./be":9808,"./be.js":9808,"./bg":8338,"./bg.js":8338,"./bm":7438,"./bm.js":7438,"./bn":8905,"./bn-bd":6225,"./bn-bd.js":6225,"./bn.js":8905,"./bo":1560,"./bo.js":1560,"./br":1278,"./br.js":1278,"./bs":622,"./bs.js":622,"./ca":2468,"./ca.js":2468,"./cs":5822,"./cs.js":5822,"./cv":877,"./cv.js":877,"./cy":7373,"./cy.js":7373,"./da":4780,"./da.js":4780,"./de":9740,"./de-at":217,"./de-at.js":217,"./de-ch":894,"./de-ch.js":894,"./de.js":9740,"./dv":5300,"./dv.js":5300,"./el":837,"./el.js":837,"./en-au":8348,"./en-au.js":8348,"./en-ca":7925,"./en-ca.js":7925,"./en-gb":2243,"./en-gb.js":2243,"./en-ie":6436,"./en-ie.js":6436,"./en-il":7207,"./en-il.js":7207,"./en-in":4175,"./en-in.js":4175,"./en-nz":6319,"./en-nz.js":6319,"./en-sg":1662,"./en-sg.js":1662,"./eo":2915,"./eo.js":2915,"./es":5655,"./es-do":2088,"./es-do.js":2088,"./es-mx":6112,"./es-mx.js":6112,"./es-us":1146,"./es-us.js":1146,"./es.js":5655,"./et":5603,"./et.js":5603,"./eu":7763,"./eu.js":7763,"./fa":6959,"./fa.js":6959,"./fi":1897,"./fi.js":1897,"./fil":2549,"./fil.js":2549,"./fo":4694,"./fo.js":4694,"./fr":4470,"./fr-ca":3049,"./fr-ca.js":3049,"./fr-ch":2330,"./fr-ch.js":2330,"./fr.js":4470,"./fy":5044,"./fy.js":5044,"./ga":9295,"./ga.js":9295,"./gd":2101,"./gd.js":2101,"./gl":8794,"./gl.js":8794,"./gom-deva":7884,"./gom-deva.js":7884,"./gom-latn":3168,"./gom-latn.js":3168,"./gu":5349,"./gu.js":5349,"./he":4206,"./he.js":4206,"./hi":94,"./hi.js":94,"./hr":316,"./hr.js":316,"./hu":2138,"./hu.js":2138,"./hy-am":1423,"./hy-am.js":1423,"./id":9218,"./id.js":9218,"./is":135,"./is.js":135,"./it":626,"./it-ch":150,"./it-ch.js":150,"./it.js":626,"./ja":9183,"./ja.js":9183,"./jv":4286,"./jv.js":4286,"./ka":2105,"./ka.js":2105,"./kk":7772,"./kk.js":7772,"./km":8758,"./km.js":8758,"./kn":9282,"./kn.js":9282,"./ko":3730,"./ko.js":3730,"./ku":1408,"./ku.js":1408,"./ky":3291,"./ky.js":3291,"./lb":6841,"./lb.js":6841,"./lo":5466,"./lo.js":5466,"./lt":7010,"./lt.js":7010,"./lv":7595,"./lv.js":7595,"./me":9861,"./me.js":9861,"./mi":5493,"./mi.js":5493,"./mk":5966,"./mk.js":5966,"./ml":7341,"./ml.js":7341,"./mn":4462,"./mn.js":4462,"./mr":370,"./mr.js":370,"./ms":9847,"./ms-my":1237,"./ms-my.js":1237,"./ms.js":9847,"./mt":2126,"./mt.js":2126,"./my":6165,"./my.js":6165,"./nb":4924,"./nb.js":4924,"./ne":6744,"./ne.js":6744,"./nl":3901,"./nl-be":9814,"./nl-be.js":9814,"./nl.js":3901,"./nn":3877,"./nn.js":3877,"./oc-lnc":2135,"./oc-lnc.js":2135,"./pa-in":5858,"./pa-in.js":5858,"./pl":4495,"./pl.js":4495,"./pt":9520,"./pt-br":7971,"./pt-br.js":7971,"./pt.js":9520,"./ro":6459,"./ro.js":6459,"./ru":1793,"./ru.js":1793,"./sd":950,"./sd.js":950,"./se":490,"./se.js":490,"./si":124,"./si.js":124,"./sk":4249,"./sk.js":4249,"./sl":4082,"./sl.js":4082,"./sq":1104,"./sq.js":1104,"./sr":9131,"./sr-cyrl":9915,"./sr-cyrl.js":9915,"./sr.js":9131,"./ss":5606,"./ss.js":5606,"./sv":8760,"./sv.js":8760,"./sw":1172,"./sw.js":1172,"./ta":7333,"./ta.js":7333,"./te":3110,"./te.js":3110,"./tet":2095,"./tet.js":2095,"./tg":7321,"./tg.js":7321,"./th":9041,"./th.js":9041,"./tk":9005,"./tk.js":9005,"./tl-ph":5768,"./tl-ph.js":5768,"./tlh":9444,"./tlh.js":9444,"./tr":2397,"./tr.js":2397,"./tzl":8254,"./tzl.js":8254,"./tzm":1106,"./tzm-latn":699,"./tzm-latn.js":699,"./tzm.js":1106,"./ug-cn":9288,"./ug-cn.js":9288,"./uk":7691,"./uk.js":7691,"./ur":3795,"./ur.js":3795,"./uz":6791,"./uz-latn":588,"./uz-latn.js":588,"./uz.js":6791,"./vi":5666,"./vi.js":5666,"./x-pseudo":4378,"./x-pseudo.js":4378,"./yo":5805,"./yo.js":5805,"./zh-cn":3839,"./zh-cn.js":3839,"./zh-hk":5726,"./zh-hk.js":5726,"./zh-mo":9807,"./zh-mo.js":9807,"./zh-tw":4152,"./zh-tw.js":4152};function r(e){var t=l(e);return n(t)}function l(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}r.keys=function(){return Object.keys(a)},r.resolve=l,e.exports=r,r.id=6700},2204:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%272%27 fill=%27%23fff%27/%3e%3c/svg%3e"},9609:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%2386b7fe%27/%3e%3c/svg%3e"},2469:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%23fff%27/%3e%3c/svg%3e"},7486:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27rgba%280, 0, 0, 0.25%29%27/%3e%3c/svg%3e"},4144:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 12 12%27 width=%2712%27 height=%2712%27 fill=%27none%27 stroke=%27%23dc3545%27%3e%3ccircle cx=%276%27 cy=%276%27 r=%274.5%27/%3e%3cpath stroke-linejoin=%27round%27 d=%27M5.8 3.6h.4L6 6.5z%27/%3e%3ccircle cx=%276%27 cy=%278.2%27 r=%27.6%27 fill=%27%23dc3545%27 stroke=%27none%27/%3e%3c/svg%3e"},6254:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23000%27%3e%3cpath d=%27M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z%27/%3e%3c/svg%3e"},2740:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%230c63e4%27%3e%3cpath fill-rule=%27evenodd%27 d=%27M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e"},5647:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23fff%27%3e%3cpath d=%27M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z%27/%3e%3c/svg%3e"},1692:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23fff%27%3e%3cpath d=%27M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e"},6529:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27var%28--bs-body-color%29%27%3e%3cpath fill-rule=%27evenodd%27 d=%27M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e"},6770:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27%3e%3cpath fill=%27none%27 stroke=%27%23343a40%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%272%27 d=%27m2 5 6 6 6-6%27/%3e%3c/svg%3e"},8931:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 20%27%3e%3cpath fill=%27none%27 stroke=%27%23fff%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%273%27 d=%27M6 10h8%27/%3e%3c/svg%3e"},6199:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 20%27%3e%3cpath fill=%27none%27 stroke=%27%23fff%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%273%27 d=%27m6 10 3 3 6-6%27/%3e%3c/svg%3e"},1217:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%280, 0, 0, 0.55%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e"},2956:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%28255, 255, 255, 0.55%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e"},5122:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 8 8%27%3e%3cpath fill=%27%23198754%27 d=%27M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z%27/%3e%3c/svg%3e"}},e=>{e.O(0,[8683,3294,2591,4407,4917,6151,9794,8612,3301,7824,7020,4931,4774,9697,4948,335,668,7068,33,75,9025,1555,9993,6418,5738,7198,8464,3655,9220,5105,3537,9595,6989,607,6912,6548,593,623,566,3617,1216,3382,8381,3546,4513,5440,290,5862,9134,698,7200,7080,8261,9381,3642,4162,6602,7877,8260,4714,259],(()=>{return t=7755,e(e.s=t);var t}));e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,