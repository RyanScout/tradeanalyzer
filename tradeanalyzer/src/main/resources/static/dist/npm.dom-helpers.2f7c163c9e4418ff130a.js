"use strict";(self.webpackChunktradeanalyzer=self.webpackChunktradeanalyzer||[]).push([[3301],{9621:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(7216);function a(e){void 0===e&&(e=(0,r.Z)());try{var t=e.activeElement;return t&&t.nodeName?t:null}catch(t){return e.body}}},479:(e,t,n)=>{function r(e,t){e.classList?e.classList.add(t):function(e,t){return e.classList?!!t&&e.classList.contains(t):-1!==(" "+(e.className.baseVal||e.className)+" ").indexOf(" "+t+" ")}(e,t)||("string"==typeof e.className?e.className=e.className+" "+t:e.setAttribute("class",(e.className&&e.className.baseVal||"")+" "+t))}n.d(t,{Z:()=>r})},9351:(e,t,n)=>{n.d(t,{ZP:()=>c});var r=n(3004),a=!1,s=!1;try{var o={get passive(){return a=!0},get once(){return s=a=!0}};r.Z&&(window.addEventListener("test",o,o),window.removeEventListener("test",o,!0))}catch(e){}const c=function(e,t,n,r){if(r&&"boolean"!=typeof r&&!s){var o=r.once,c=r.capture,i=n;!s&&o&&(i=n.__once||function e(r){this.removeEventListener(t,e,c),n.call(this,r)},n.__once=i),e.addEventListener(t,i,a?r:c)}e.addEventListener(t,n,r)}},3576:(e,t,n)=>{n.d(t,{Z:()=>a});var r=/-(.)/g;function a(e){return e.replace(r,(function(e,t){return t.toUpperCase()}))}},3004:(e,t,n)=>{n.d(t,{Z:()=>r});const r=!("undefined"==typeof window||!window.document||!window.document.createElement)},424:(e,t,n)=>{function r(e,t){return e.contains?e.contains(t):e.compareDocumentPosition?e===t||!!(16&e.compareDocumentPosition(t)):void 0}n.d(t,{Z:()=>r})},3164:(e,t,n)=>{n.d(t,{Z:()=>u});var r=n(7216);function a(e,t){return function(e){var t=(0,r.Z)(e);return t&&t.defaultView||window}(e).getComputedStyle(e,t)}var s=/([A-Z])/g;var o=/^ms-/;function c(e){return function(e){return e.replace(s,"-$1").toLowerCase()}(e).replace(o,"-ms-")}var i=/^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;const u=function(e,t){var n="",r="";if("string"==typeof t)return e.style.getPropertyValue(c(t))||a(e).getPropertyValue(c(t));Object.keys(t).forEach((function(a){var s=t[a];s||0===s?!function(e){return!(!e||!i.test(e))}(a)?n+=c(a)+": "+s+";":r+=a+"("+s+") ":e.style.removeProperty(c(a))})),r&&(n+="transform: "+r+";"),e.style.cssText+=";"+n}},3299:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(9351);const a=function(e,t,n,r){var a=r&&"boolean"!=typeof r?r.capture:r;e.removeEventListener(t,n,a),n.__once&&e.removeEventListener(t,n.__once,a)};const s=function(e,t,n,s){return(0,r.ZP)(e,t,n,s),function(){a(e,t,n,s)}}},7216:(e,t,n)=>{function r(e){return e&&e.ownerDocument||document}n.d(t,{Z:()=>r})},930:(e,t,n)=>{n.d(t,{Z:()=>a});var r=Function.prototype.bind.call(Function.prototype.call,[].slice);function a(e,t){return r(e.querySelectorAll(t))}},4277:(e,t,n)=>{function r(e,t){return e.replace(new RegExp("(^|\\s)"+t+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,"")}function a(e,t){e.classList?e.classList.remove(t):"string"==typeof e.className?e.className=r(e.className,t):e.setAttribute("class",r(e.className&&e.className.baseVal||"",t))}n.d(t,{Z:()=>a})},6914:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(3164),a=n(3299);function s(e,t,n){void 0===n&&(n=5);var r=!1,s=setTimeout((function(){r||function(e,t,n,r){if(void 0===n&&(n=!1),void 0===r&&(r=!0),e){var a=document.createEvent("HTMLEvents");a.initEvent(t,n,r),e.dispatchEvent(a)}}(e,"transitionend",!0)}),t+n),o=(0,a.Z)(e,"transitionend",(function(){r=!0}),{once:!0});return function(){clearTimeout(s),o()}}function o(e,t,n,o){var c,i,u;null==n&&(c=e,i=(0,r.Z)(c,"transitionDuration")||"",u=-1===i.indexOf("ms")?1e3:1,n=parseFloat(i)*u||0);var l=s(e,n,o),d=(0,a.Z)(e,"transitionend",t);return function(){l(),d()}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnBtLmRvbS1oZWxwZXJzLjNiZWQ4ZTdhNjdmZGYyMWVhYjI4LmpzIiwibWFwcGluZ3MiOiI2SUFPZSxTQUFTQSxFQUFjQyxRQUN4QixJQUFSQSxJQUNGQSxHQUFNLFVBS1IsSUFDRSxJQUFJQyxFQUFTRCxFQUFJRCxjQUdqQixPQUFLRSxHQUFXQSxFQUFPQyxTQUNoQkQsRUFEaUMsSUFLMUMsQ0FIRSxNQUFPRSxHQUVQLE9BQU9ILEVBQUlJLElBQ2IsQ0FDRixDLGdCQ2hCZSxTQUFTQyxFQUFTQyxFQUFTQyxHQUNwQ0QsRUFBUUUsVUFBV0YsRUFBUUUsVUFBVUMsSUFBSUYsR0NIaEMsU0FBa0JELEVBQVNDLEdBQ3hDLE9BQUlELEVBQVFFLFlBQW9CRCxHQUFhRCxFQUFRRSxVQUFVRSxTQUFTSCxJQUNrQyxLQUFsRyxLQUFPRCxFQUFRQyxVQUFVSSxTQUFXTCxFQUFRQyxXQUFhLEtBQUtLLFFBQVEsSUFBTUwsRUFBWSxJQUNsRyxDREFvRU0sQ0FBU1AsRUFBU0MsS0FBNkMsaUJBQXRCRCxFQUFRQyxVQUF3QkQsRUFBUUMsVUFBWUQsRUFBUUMsVUFBWSxJQUFNQSxFQUFlRCxFQUFRUSxhQUFhLFNBQVVSLEVBQVFDLFdBQWFELEVBQVFDLFVBQVVJLFNBQVcsSUFBTSxJQUFNSixHQUN2UyxDLGlFRVJXUSxHQUFtQixFQUNuQkMsR0FBZ0IsRUFFM0IsSUFDRSxJQUFJQyxFQUFVLENBQ1JDLGNBQ0YsT0FBT0gsR0FBbUIsQ0FDNUIsRUFFSUksV0FFRixPQUFPSCxFQUFnQkQsR0FBbUIsQ0FDNUMsR0FJRSxNQUNGSyxPQUFPQyxpQkFBaUIsT0FBUUosRUFBU0EsR0FDekNHLE9BQU9FLG9CQUFvQixPQUFRTCxHQUFTLEdBSWhELENBRkUsTUFBT2QsR0FFVCxDQStCQSxRQXJCQSxTQUEwQm9CLEVBQU1DLEVBQVdDLEVBQVNSLEdBQ2xELEdBQUlBLEdBQThCLGtCQUFaQSxJQUEwQkQsRUFBZSxDQUM3RCxJQUFJRyxFQUFPRixFQUFRRSxLQUNmTyxFQUFVVCxFQUFRUyxRQUNs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QTFCM0M0RixHQUFNLEVBQUExQyxFQUFBLEdBQUlqQyxFQUFNLHVCQUF5QixHQUN6QzRFLEdBQThCLElBQXZCRCxFQUFJdEYsUUFBUSxNQUFlLElBQU8sRUF5QnZCd0UsRUF4QmZnQixXQUFXRixHQUFPQyxHQXdCa0MsR0FDM0QsSUFBSUUsRUFBZ0JsQixFQUFxQjdFLEVBQVM4RSxFQUFVQyxHQUN4REgsR0FBUyxFQUFBYSxFQUFBLEdBQU96RixFQUFTLGdCQUFpQm1CLEdBQzlDLE9BQU8sV0FDTDRFLElBQ0FuQixHQUNGLENBQ0YsQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWRlYW5hbHl6ZXIvLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvZXNtL2FjdGl2ZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdHJhZGVhbmFseXplci8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9lc20vYWRkQ2xhc3MuanMiLCJ3ZWJwYWNrOi8vdHJhZGVhbmFseXplci8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9lc20vaGFzQ2xhc3MuanMiLCJ3ZWJwYWNrOi8vdHJhZGVhbmFseXplci8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9lc20vYWRkRXZlbnRMaXN0ZW5lci5qcyIsIndlYnBhY2s6Ly90cmFkZWFuYWx5emVyLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS9jYW1lbGl6ZS5qcyIsIndlYnBhY2s6Ly90cmFkZWFuYWx5emVyLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS9jYW5Vc2VET00uanMiLCJ3ZWJwYWNrOi8vdHJhZGVhbmFseXplci8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9lc20vY29udGFpbnMuanMiLCJ3ZWJwYWNrOi8vdHJhZGVhbmFseXplci8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9lc20vZ2V0Q29tcHV0ZWRTdHlsZS5qcyIsIndlYnBhY2s6Ly90cmFkZWFuYWx5emVyLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS9vd25lcldpbmRvdy5qcyIsIndlYnBhY2s6Ly90cmFkZWFuYWx5emVyLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS9oeXBoZW5hdGUuanMiLCJ3ZWJwYWNrOi8vdHJhZGVhbmFseXplci8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9lc20vaHlwaGVuYXRlU3R5bGUuanMiLCJ3ZWJwYWNrOi8vdHJhZGVhbmFseXplci8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9lc20vaXNUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdHJhZGVhbmFseXplci8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9lc20vY3NzLmpzIiwid2VicGFjazovL3RyYWRlYW5hbHl6ZXIvLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvZXNtL3JlbW92ZUV2ZW50TGlzdGVuZXIuanMiLCJ3ZWJwYWNrOi8vdHJhZGVhbmFseXplci8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9lc20vbGlzdGVuLmpzIiwid2VicGFjazovL3RyYWRlYW5hbHl6ZXIvLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvZXNtL293bmVyRG9jdW1lbnQuanMiLCJ3ZWJwYWNrOi8vdHJhZGVhbmFseXplci8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9lc20vcXVlcnlTZWxlY3RvckFsbC5qcyIsIndlYnBhY2s6Ly90cmFkZWFuYWx5emVyLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS9yZW1vdmVDbGFzcy5qcyIsIndlYnBhY2s6Ly90cmFkZWFuYWx5emVyLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS90cmFuc2l0aW9uRW5kLmpzIiwid2VicGFjazovL3RyYWRlYW5hbHl6ZXIvLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvZXNtL3RyaWdnZXJFdmVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgb3duZXJEb2N1bWVudCBmcm9tICcuL293bmVyRG9jdW1lbnQnO1xuLyoqXG4gKiBSZXR1cm5zIHRoZSBhY3RpdmVseSBmb2N1c2VkIGVsZW1lbnQgc2FmZWx5LlxuICpcbiAqIEBwYXJhbSBkb2MgdGhlIGRvY3VtZW50IHRvIGNoZWNrXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYWN0aXZlRWxlbWVudChkb2MpIHtcbiAgaWYgKGRvYyA9PT0gdm9pZCAwKSB7XG4gICAgZG9jID0gb3duZXJEb2N1bWVudCgpO1xuICB9XG5cbiAgLy8gU3VwcG9ydDogSUUgOSBvbmx5XG4gIC8vIElFOSB0aHJvd3MgYW4gXCJVbnNwZWNpZmllZCBlcnJvclwiIGFjY2Vzc2luZyBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGZyb20gYW4gPGlmcmFtZT5cbiAgdHJ5IHtcbiAgICB2YXIgYWN0aXZlID0gZG9jLmFjdGl2ZUVsZW1lbnQ7IC8vIElFMTEgcmV0dXJucyBhIHNlZW1pbmdseSBlbXB0eSBvYmplY3QgaW4gc29tZSBjYXNlcyB3aGVuIGFjY2Vzc2luZ1xuICAgIC8vIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgZnJvbSBhbiA8aWZyYW1lPlxuXG4gICAgaWYgKCFhY3RpdmUgfHwgIWFjdGl2ZS5ub2RlTmFtZSkgcmV0dXJuIG51bGw7XG4gICAgcmV0dXJuIGFjdGl2ZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8qIGllIHRocm93cyBpZiBubyBhY3RpdmUgZWxlbWVudCAqL1xuICAgIHJldHVybiBkb2MuYm9keTtcbiAgfVxufSIsImltcG9ydCBoYXNDbGFzcyBmcm9tICcuL2hhc0NsYXNzJztcbi8qKlxuICogQWRkcyBhIENTUyBjbGFzcyB0byBhIGdpdmVuIGVsZW1lbnQuXG4gKiBcbiAqIEBwYXJhbSBlbGVtZW50IHRoZSBlbGVtZW50XG4gKiBAcGFyYW0gY2xhc3NOYW1lIHRoZSBDU1MgY2xhc3MgbmFtZVxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGFkZENsYXNzKGVsZW1lbnQsIGNsYXNzTmFtZSkge1xuICBpZiAoZWxlbWVudC5jbGFzc0xpc3QpIGVsZW1lbnQuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO2Vsc2UgaWYgKCFoYXNDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpKSBpZiAodHlwZW9mIGVsZW1lbnQuY2xhc3NOYW1lID09PSAnc3RyaW5nJykgZWxlbWVudC5jbGFzc05hbWUgPSBlbGVtZW50LmNsYXNzTmFtZSArIFwiIFwiICsgY2xhc3NOYW1lO2Vsc2UgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgKGVsZW1lbnQuY2xhc3NOYW1lICYmIGVsZW1lbnQuY2xhc3NOYW1lLmJhc2VWYWwgfHwgJycpICsgXCIgXCIgKyBjbGFzc05hbWUpO1xufSIsIi8qKlxuICogQ2hlY2tzIGlmIGEgZ2l2ZW4gZWxlbWVudCBoYXMgYSBDU1MgY2xhc3MuXG4gKiBcbiAqIEBwYXJhbSBlbGVtZW50IHRoZSBlbGVtZW50XG4gKiBAcGFyYW0gY2xhc3NOYW1lIHRoZSBDU1MgY2xhc3MgbmFtZVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoYXNDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0KSByZXR1cm4gISFjbGFzc05hbWUgJiYgZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKTtcbiAgcmV0dXJuIChcIiBcIiArIChlbGVtZW50LmNsYXNzTmFtZS5iYXNlVmFsIHx8IGVsZW1lbnQuY2xhc3NOYW1lKSArIFwiIFwiKS5pbmRleE9mKFwiIFwiICsgY2xhc3NOYW1lICsgXCIgXCIpICE9PSAtMTtcbn0iLCIvKiBlc2xpbnQtZGlzYWJsZSBuby1yZXR1cm4tYXNzaWduICovXG5pbXBvcnQgY2FuVXNlRE9NIGZyb20gJy4vY2FuVXNlRE9NJztcbmV4cG9ydCB2YXIgb3B0aW9uc1N1cHBvcnRlZCA9IGZhbHNlO1xuZXhwb3J0IHZhciBvbmNlU3VwcG9ydGVkID0gZmFsc2U7XG5cbnRyeSB7XG4gIHZhciBvcHRpb25zID0ge1xuICAgIGdldCBwYXNzaXZlKCkge1xuICAgICAgcmV0dXJuIG9wdGlvbnNTdXBwb3J0ZWQgPSB0cnVlO1xuICAgIH0sXG5cbiAgICBnZXQgb25jZSgpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1tdWx0aS1hc3NpZ25cbiAgICAgIHJldHVybiBvbmNlU3VwcG9ydGVkID0gb3B0aW9uc1N1cHBvcnRlZCA9IHRydWU7XG4gICAgfVxuXG4gIH07XG5cbiAgaWYgKGNhblVzZURPTSkge1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd0ZXN0Jywgb3B0aW9ucywgb3B0aW9ucyk7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Rlc3QnLCBvcHRpb25zLCB0cnVlKTtcbiAgfVxufSBjYXRjaCAoZSkge1xuICAvKiAqL1xufVxuXG4vKipcbiAqIEFuIGBhZGRFdmVudExpc3RlbmVyYCBwb255ZmlsbCwgc3VwcG9ydHMgdGhlIGBvbmNlYCBvcHRpb25cbiAqIFxuICogQHBhcmFtIG5vZGUgdGhlIGVsZW1lbnRcbiAqIEBwYXJhbSBldmVudE5hbWUgdGhlIGV2ZW50IG5hbWVcbiAqIEBwYXJhbSBoYW5kbGUgdGhlIGhhbmRsZXJcbiAqIEBwYXJhbSBvcHRpb25zIGV2ZW50IG9wdGlvbnNcbiAqL1xuZnVuY3Rpb24gYWRkRXZlbnRMaXN0ZW5lcihub2RlLCBldmVudE5hbWUsIGhhbmRsZXIsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgJiYgdHlwZW9mIG9wdGlvbnMgIT09ICdib29sZWFuJyAmJiAhb25jZVN1cHBvcnRlZCkge1xuICAgIHZhciBvbmNlID0gb3B0aW9ucy5vbmNlLFxuICAgICAgICBjYXB0dXJlID0gb3B0aW9ucy5jYXB0dXJlO1xuICAgIHZhciB3cmFwcGVkSGFuZGxlciA9IGhhbmRsZXI7XG5cbiAgICBpZiAoIW9uY2VTdXBwb3J0ZWQgJiYgb25jZSkge1xuICAgICAgd3JhcHBlZEhhbmRsZXIgPSBoYW5kbGVyLl9fb25jZSB8fCBmdW5jdGlvbiBvbmNlSGFuZGxlcihldmVudCkge1xuICAgICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBvbmNlSGFuZGxlciwgY2FwdHVyZSk7XG4gICAgICAgIGhhbmRsZXIuY2FsbCh0aGlzLCBldmVudCk7XG4gICAgICB9O1xuXG4gICAgICBoYW5kbGVyLl9fb25jZSA9IHdyYXBwZWRIYW5kbGVyO1xuICAgIH1cblxuICAgIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIHdyYXBwZWRIYW5kbGVyLCBvcHRpb25zU3VwcG9ydGVkID8gb3B0aW9ucyA6IGNhcHR1cmUpO1xuICB9XG5cbiAgbm9kZS5hZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgaGFuZGxlciwgb3B0aW9ucyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFkZEV2ZW50TGlzdGVuZXI7IiwidmFyIHJIeXBoZW4gPSAvLSguKS9nO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY2FtZWxpemUoc3RyaW5nKSB7XG4gIHJldHVybiBzdHJpbmcucmVwbGFjZShySHlwaGVuLCBmdW5jdGlvbiAoXywgY2hyKSB7XG4gICAgcmV0dXJuIGNoci50b1VwcGVyQ2FzZSgpO1xuICB9KTtcbn0iLCJleHBvcnQgZGVmYXVsdCAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpOyIsIi8qIGVzbGludC1kaXNhYmxlIG5vLWJpdHdpc2UsIG5vLWNvbmQtYXNzaWduICovXG5cbi8qKlxuICogQ2hlY2tzIGlmIGFuIGVsZW1lbnQgY29udGFpbnMgYW5vdGhlciBnaXZlbiBlbGVtZW50LlxuICogXG4gKiBAcGFyYW0gY29udGV4dCB0aGUgY29udGV4dCBlbGVtZW50XG4gKiBAcGFyYW0gbm9kZSB0aGUgZWxlbWVudCB0byBjaGVja1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb250YWlucyhjb250ZXh0LCBub2RlKSB7XG4gIC8vIEhUTUwgRE9NIGFuZCBTVkcgRE9NIG1heSBoYXZlIGRpZmZlcmVudCBzdXBwb3J0IGxldmVscyxcbiAgLy8gc28gd2UgbmVlZCB0byBjaGVjayBvbiBjb250ZXh0IGluc3RlYWQgb2YgYSBkb2N1bWVudCByb290IGVsZW1lbnQuXG4gIGlmIChjb250ZXh0LmNvbnRhaW5zKSByZXR1cm4gY29udGV4dC5jb250YWlucyhub2RlKTtcbiAgaWYgKGNvbnRleHQuY29tcGFyZURvY3VtZW50UG9zaXRpb24pIHJldHVybiBjb250ZXh0ID09PSBub2RlIHx8ICEhKGNvbnRleHQuY29tcGFyZURvY3VtZW50UG9zaXRpb24obm9kZSkgJiAxNik7XG59IiwiaW1wb3J0IG93bmVyV2luZG93IGZyb20gJy4vb3duZXJXaW5kb3cnO1xuLyoqXG4gKiBSZXR1cm5zIG9uZSBvciBhbGwgY29tcHV0ZWQgc3R5bGUgcHJvcGVydGllcyBvZiBhbiBlbGVtZW50LlxuICogXG4gKiBAcGFyYW0gbm9kZSB0aGUgZWxlbWVudFxuICogQHBhcmFtIHBzdWVkb0VsZW1lbnQgdGhlIHN0eWxlIHByb3BlcnR5XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0Q29tcHV0ZWRTdHlsZShub2RlLCBwc3VlZG9FbGVtZW50KSB7XG4gIHJldHVybiBvd25lcldpbmRvdyhub2RlKS5nZXRDb21wdXRlZFN0eWxlKG5vZGUsIHBzdWVkb0VsZW1lbnQpO1xufSIsImltcG9ydCBvd25lckRvY3VtZW50IGZyb20gJy4vb3duZXJEb2N1bWVudCc7XG4vKipcbiAqIFJldHVybnMgdGhlIG93bmVyIHdpbmRvdyBvZiBhIGdpdmVuIGVsZW1lbnQuXG4gKiBcbiAqIEBwYXJhbSBub2RlIHRoZSBlbGVtZW50XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gb3duZXJXaW5kb3cobm9kZSkge1xuICB2YXIgZG9jID0gb3duZXJEb2N1bWVudChub2RlKTtcbiAgcmV0dXJuIGRvYyAmJiBkb2MuZGVmYXVsdFZpZXcgfHwgd2luZG93O1xufSIsInZhciByVXBwZXIgPSAvKFtBLVpdKS9nO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaHlwaGVuYXRlKHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoclVwcGVyLCAnLSQxJykudG9Mb3dlckNhc2UoKTtcbn0iLCIvKipcbiAqIENvcHlyaWdodCAyMDEzLTIwMTQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvMmFlYjhhMmE2YmViMDA2MTdhNDIxN2Y3ZjgyODQ5MjRmYTJhZDgxOS9zcmMvdmVuZG9yL2NvcmUvaHlwaGVuYXRlU3R5bGVOYW1lLmpzXG4gKi9cbmltcG9ydCBoeXBoZW5hdGUgZnJvbSAnLi9oeXBoZW5hdGUnO1xudmFyIG1zUGF0dGVybiA9IC9ebXMtLztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGh5cGhlbmF0ZVN0eWxlTmFtZShzdHJpbmcpIHtcbiAgcmV0dXJuIGh5cGhlbmF0ZShzdHJpbmcpLnJlcGxhY2UobXNQYXR0ZXJuLCAnLW1zLScpO1xufSIsInZhciBzdXBwb3J0ZWRUcmFuc2Zvcm1zID0gL14oKHRyYW5zbGF0ZXxyb3RhdGV8c2NhbGUpKFh8WXxafDNkKT98bWF0cml4KDNkKT98cGVyc3BlY3RpdmV8c2tldyhYfFkpPykkL2k7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc1RyYW5zZm9ybSh2YWx1ZSkge1xuICByZXR1cm4gISEodmFsdWUgJiYgc3VwcG9ydGVkVHJhbnNmb3Jtcy50ZXN0KHZhbHVlKSk7XG59IiwiaW1wb3J0IGdldENvbXB1dGVkU3R5bGUgZnJvbSAnLi9nZXRDb21wdXRlZFN0eWxlJztcbmltcG9ydCBoeXBoZW5hdGUgZnJvbSAnLi9oeXBoZW5hdGVTdHlsZSc7XG5pbXBvcnQgaXNUcmFuc2Zvcm0gZnJvbSAnLi9pc1RyYW5zZm9ybSc7XG5cbmZ1bmN0aW9uIHN0eWxlKG5vZGUsIHByb3BlcnR5KSB7XG4gIHZhciBjc3MgPSAnJztcbiAgdmFyIHRyYW5zZm9ybXMgPSAnJztcblxuICBpZiAodHlwZW9mIHByb3BlcnR5ID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBub2RlLnN0eWxlLmdldFByb3BlcnR5VmFsdWUoaHlwaGVuYXRlKHByb3BlcnR5KSkgfHwgZ2V0Q29tcHV0ZWRTdHlsZShub2RlKS5nZXRQcm9wZXJ0eVZhbHVlKGh5cGhlbmF0ZShwcm9wZXJ0eSkpO1xuICB9XG5cbiAgT2JqZWN0LmtleXMocHJvcGVydHkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciB2YWx1ZSA9IHByb3BlcnR5W2tleV07XG5cbiAgICBpZiAoIXZhbHVlICYmIHZhbHVlICE9PSAwKSB7XG4gICAgICBub2RlLnN0eWxlLnJlbW92ZVByb3BlcnR5KGh5cGhlbmF0ZShrZXkpKTtcbiAgICB9IGVsc2UgaWYgKGlzVHJhbnNmb3JtKGtleSkpIHtcbiAgICAgIHRyYW5zZm9ybXMgKz0ga2V5ICsgXCIoXCIgKyB2YWx1ZSArIFwiKSBcIjtcbiAgICB9IGVsc2Uge1xuICAgICAgY3NzICs9IGh5cGhlbmF0ZShrZXkpICsgXCI6IFwiICsgdmFsdWUgKyBcIjtcIjtcbiAgICB9XG4gIH0pO1xuXG4gIGlmICh0cmFuc2Zvcm1zKSB7XG4gICAgY3NzICs9IFwidHJhbnNmb3JtOiBcIiArIHRyYW5zZm9ybXMgKyBcIjtcIjtcbiAgfVxuXG4gIG5vZGUuc3R5bGUuY3NzVGV4dCArPSBcIjtcIiArIGNzcztcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3R5bGU7IiwiLyoqXG4gKiBBIGByZW1vdmVFdmVudExpc3RlbmVyYCBwb255ZmlsbFxuICogXG4gKiBAcGFyYW0gbm9kZSB0aGUgZWxlbWVudFxuICogQHBhcmFtIGV2ZW50TmFtZSB0aGUgZXZlbnQgbmFtZVxuICogQHBhcmFtIGhhbmRsZSB0aGUgaGFuZGxlclxuICogQHBhcmFtIG9wdGlvbnMgZXZlbnQgb3B0aW9uc1xuICovXG5mdW5jdGlvbiByZW1vdmVFdmVudExpc3RlbmVyKG5vZGUsIGV2ZW50TmFtZSwgaGFuZGxlciwgb3B0aW9ucykge1xuICB2YXIgY2FwdHVyZSA9IG9wdGlvbnMgJiYgdHlwZW9mIG9wdGlvbnMgIT09ICdib29sZWFuJyA/IG9wdGlvbnMuY2FwdHVyZSA6IG9wdGlvbnM7XG4gIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGhhbmRsZXIsIGNhcHR1cmUpO1xuXG4gIGlmIChoYW5kbGVyLl9fb25jZSkge1xuICAgIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGhhbmRsZXIuX19vbmNlLCBjYXB0dXJlKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCByZW1vdmVFdmVudExpc3RlbmVyOyIsImltcG9ydCBhZGRFdmVudExpc3RlbmVyIGZyb20gJy4vYWRkRXZlbnRMaXN0ZW5lcic7XG5pbXBvcnQgcmVtb3ZlRXZlbnRMaXN0ZW5lciBmcm9tICcuL3JlbW92ZUV2ZW50TGlzdGVuZXInO1xuXG5mdW5jdGlvbiBsaXN0ZW4obm9kZSwgZXZlbnROYW1lLCBoYW5kbGVyLCBvcHRpb25zKSB7XG4gIGFkZEV2ZW50TGlzdGVuZXIobm9kZSwgZXZlbnROYW1lLCBoYW5kbGVyLCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZW1vdmVFdmVudExpc3RlbmVyKG5vZGUsIGV2ZW50TmFtZSwgaGFuZGxlciwgb3B0aW9ucyk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGxpc3RlbjsiLCIvKipcbiAqIFJldHVybnMgdGhlIG93bmVyIGRvY3VtZW50IG9mIGEgZ2l2ZW4gZWxlbWVudC5cbiAqIFxuICogQHBhcmFtIG5vZGUgdGhlIGVsZW1lbnRcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gb3duZXJEb2N1bWVudChub2RlKSB7XG4gIHJldHVybiBub2RlICYmIG5vZGUub3duZXJEb2N1bWVudCB8fCBkb2N1bWVudDtcbn0iLCJ2YXIgdG9BcnJheSA9IEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLmNhbGwoRnVuY3Rpb24ucHJvdG90eXBlLmNhbGwsIFtdLnNsaWNlKTtcbi8qKlxuICogUnVucyBgcXVlcnlTZWxlY3RvckFsbGAgb24gYSBnaXZlbiBlbGVtZW50LlxuICogXG4gKiBAcGFyYW0gZWxlbWVudCB0aGUgZWxlbWVudFxuICogQHBhcmFtIHNlbGVjdG9yIHRoZSBzZWxlY3RvclxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHFzYShlbGVtZW50LCBzZWxlY3Rvcikge1xuICByZXR1cm4gdG9BcnJheShlbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpKTtcbn0iLCJmdW5jdGlvbiByZXBsYWNlQ2xhc3NOYW1lKG9yaWdDbGFzcywgY2xhc3NUb1JlbW92ZSkge1xuICByZXR1cm4gb3JpZ0NsYXNzLnJlcGxhY2UobmV3IFJlZ0V4cChcIihefFxcXFxzKVwiICsgY2xhc3NUb1JlbW92ZSArIFwiKD86XFxcXHN8JClcIiwgJ2cnKSwgJyQxJykucmVwbGFjZSgvXFxzKy9nLCAnICcpLnJlcGxhY2UoL15cXHMqfFxccyokL2csICcnKTtcbn1cbi8qKlxuICogUmVtb3ZlcyBhIENTUyBjbGFzcyBmcm9tIGEgZ2l2ZW4gZWxlbWVudC5cbiAqIFxuICogQHBhcmFtIGVsZW1lbnQgdGhlIGVsZW1lbnRcbiAqIEBwYXJhbSBjbGFzc05hbWUgdGhlIENTUyBjbGFzcyBuYW1lXG4gKi9cblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZW1vdmVDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0KSB7XG4gICAgZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGVsZW1lbnQuY2xhc3NOYW1lID09PSAnc3RyaW5nJykge1xuICAgIGVsZW1lbnQuY2xhc3NOYW1lID0gcmVwbGFjZUNsYXNzTmFtZShlbGVtZW50LmNsYXNzTmFtZSwgY2xhc3NOYW1lKTtcbiAgfSBlbHNlIHtcbiAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgnY2xhc3MnLCByZXBsYWNlQ2xhc3NOYW1lKGVsZW1lbnQuY2xhc3NOYW1lICYmIGVsZW1lbnQuY2xhc3NOYW1lLmJhc2VWYWwgfHwgJycsIGNsYXNzTmFtZSkpO1xuICB9XG59IiwiaW1wb3J0IGNzcyBmcm9tICcuL2Nzcyc7XG5pbXBvcnQgbGlzdGVuIGZyb20gJy4vbGlzdGVuJztcbmltcG9ydCB0cmlnZ2VyRXZlbnQgZnJvbSAnLi90cmlnZ2VyRXZlbnQnO1xuXG5mdW5jdGlvbiBwYXJzZUR1cmF0aW9uKG5vZGUpIHtcbiAgdmFyIHN0ciA9IGNzcyhub2RlLCAndHJhbnNpdGlvbkR1cmF0aW9uJykgfHwgJyc7XG4gIHZhciBtdWx0ID0gc3RyLmluZGV4T2YoJ21zJykgPT09IC0xID8gMTAwMCA6IDE7XG4gIHJldHVybiBwYXJzZUZsb2F0KHN0cikgKiBtdWx0O1xufVxuXG5mdW5jdGlvbiBlbXVsYXRlVHJhbnNpdGlvbkVuZChlbGVtZW50LCBkdXJhdGlvbiwgcGFkZGluZykge1xuICBpZiAocGFkZGluZyA9PT0gdm9pZCAwKSB7XG4gICAgcGFkZGluZyA9IDU7XG4gIH1cblxuICB2YXIgY2FsbGVkID0gZmFsc2U7XG4gIHZhciBoYW5kbGUgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIWNhbGxlZCkgdHJpZ2dlckV2ZW50KGVsZW1lbnQsICd0cmFuc2l0aW9uZW5kJywgdHJ1ZSk7XG4gIH0sIGR1cmF0aW9uICsgcGFkZGluZyk7XG4gIHZhciByZW1vdmUgPSBsaXN0ZW4oZWxlbWVudCwgJ3RyYW5zaXRpb25lbmQnLCBmdW5jdGlvbiAoKSB7XG4gICAgY2FsbGVkID0gdHJ1ZTtcbiAgfSwge1xuICAgIG9uY2U6IHRydWVcbiAgfSk7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgY2xlYXJUaW1lb3V0KGhhbmRsZSk7XG4gICAgcmVtb3ZlKCk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRyYW5zaXRpb25FbmQoZWxlbWVudCwgaGFuZGxlciwgZHVyYXRpb24sIHBhZGRpbmcpIHtcbiAgaWYgKGR1cmF0aW9uID09IG51bGwpIGR1cmF0aW9uID0gcGFyc2VEdXJhdGlvbihlbGVtZW50KSB8fCAwO1xuICB2YXIgcmVtb3ZlRW11bGF0ZSA9IGVtdWxhdGVUcmFuc2l0aW9uRW5kKGVsZW1lbnQsIGR1cmF0aW9uLCBwYWRkaW5nKTtcbiAgdmFyIHJlbW92ZSA9IGxpc3RlbihlbGVtZW50LCAndHJhbnNpdGlvbmVuZCcsIGhhbmRsZXIpO1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJlbW92ZUVtdWxhdGUoKTtcbiAgICByZW1vdmUoKTtcbiAgfTtcbn0iLCIvKipcbiAqIFRyaWdnZXJzIGFuIGV2ZW50IG9uIGEgZ2l2ZW4gZWxlbWVudC5cbiAqIFxuICogQHBhcmFtIG5vZGUgdGhlIGVsZW1lbnRcbiAqIEBwYXJhbSBldmVudE5hbWUgdGhlIGV2ZW50IG5hbWUgdG8gdHJpZ2dlclxuICogQHBhcmFtIGJ1YmJsZXMgd2hldGhlciB0aGUgZXZlbnQgc2hvdWxkIGJ1YmJsZSB1cFxuICogQHBhcmFtIGNhbmNlbGFibGUgd2hldGhlciB0aGUgZXZlbnQgc2hvdWxkIGJlIGNhbmNlbGFibGVcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdHJpZ2dlckV2ZW50KG5vZGUsIGV2ZW50TmFtZSwgYnViYmxlcywgY2FuY2VsYWJsZSkge1xuICBpZiAoYnViYmxlcyA9PT0gdm9pZCAwKSB7XG4gICAgYnViYmxlcyA9IGZhbHNlO1xuICB9XG5cbiAgaWYgKGNhbmNlbGFibGUgPT09IHZvaWQgMCkge1xuICAgIGNhbmNlbGFibGUgPSB0cnVlO1xuICB9XG5cbiAgaWYgKG5vZGUpIHtcbiAgICB2YXIgZXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnSFRNTEV2ZW50cycpO1xuICAgIGV2ZW50LmluaXRFdmVudChldmVudE5hbWUsIGJ1YmJsZXMsIGNhbmNlbGFibGUpO1xuICAgIG5vZGUuZGlzcGF0Y2hFdmVudChldmVudCk7XG4gIH1cbn0iXSwibmFtZXMiOlsiYWN0aXZlRWxlbWVudCIsImRvYyIsImFjdGl2ZSIsIm5vZGVOYW1lIiwiZSIsImJvZHkiLCJhZGRDbGFzcyIsImVsZW1lbnQiLCJjbGFzc05hbWUiLCJjbGFzc0xpc3QiLCJhZGQiLCJjb250YWlucyIsImJhc2VWYWwiLCJpbmRleE9mIiwiaGFzQ2xhc3MiLCJzZXRBdHRyaWJ1dGUiLCJvcHRpb25zU3VwcG9ydGVkIiwib25jZVN1cHBvcnRlZCIsIm9wdGlvbnMiLCJwYXNzaXZlIiwib25jZSIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwibm9kZSIsImV2ZW50TmFtZSIsImhhbmRsZXIiLCJjYXB0dXJlIiwid3JhcHBlZEhhbmRsZXIiLCJfX29uY2UiLCJvbmNlSGFuZGxlciIsImV2ZW50IiwidGhpcyIsImNhbGwiLCJySHlwaGVuIiwiY2FtZWxpemUiLCJzdHJpbmciLCJyZXBsYWNlIiwiXyIsImNociIsInRvVXBwZXJDYXNlIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiY29udGV4dCIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsInBzdWVkb0VsZW1lbnQiLCJvd25lckRvY3VtZW50IiwiZGVmYXVsdFZpZXciLCJvd25lcldpbmRvdyIsInJVcHBlciIsIm1zUGF0dGVybiIsImh5cGhlbmF0ZVN0eWxlTmFtZSIsInRvTG93ZXJDYXNlIiwiaHlwaGVuYXRlIiwic3VwcG9ydGVkVHJhbnNmb3JtcyIsInByb3BlcnR5IiwiY3NzIiwidHJhbnNmb3JtcyIsInN0eWxlIiwiZ2V0UHJvcGVydHlWYWx1ZSIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwia2V5IiwidmFsdWUiLCJ0ZXN0IiwiaXNUcmFuc2Zvcm0iLCJyZW1vdmVQcm9wZXJ0eSIsImNzc1RleHQiLCJ0b0FycmF5IiwiRnVuY3Rpb24iLCJwcm90b3R5cGUiLCJiaW5kIiwic2xpY2UiLCJxc2EiLCJzZWxlY3RvciIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJyZXBsYWNlQ2xhc3NOYW1lIiwib3JpZ0NsYXNzIiwiY2xhc3NUb1JlbW92ZSIsIlJlZ0V4cCIsInJlbW92ZUNsYXNzIiwicmVtb3ZlIiwiZW11bGF0ZVRyYW5zaXRpb25FbmQiLCJkdXJhdGlvbiIsInBhZGRpbmciLCJjYWxsZWQiLCJoYW5kbGUiLCJzZXRUaW1lb3V0IiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJjcmVhdGVFdmVudCIsImluaXRFdmVudCIsImRpc3BhdGNoRXZlbnQiLCJ0cmlnZ2VyRXZlbnQiLCJsaXN0ZW4iLCJjbGVhclRpbWVvdXQiLCJ0cmFuc2l0aW9uRW5kIiwic3RyIiwibXVsdCIsInBhcnNlRmxvYXQiLCJyZW1vdmVFbXVsYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==