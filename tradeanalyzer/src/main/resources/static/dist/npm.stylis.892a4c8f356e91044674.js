"use strict";(self.webpackChunktradeanalyzer=self.webpackChunktradeanalyzer||[]).push([[9697],{7563:(e,r,c)=>{c.d(r,{Ab:()=>s,Fr:()=>u,G$:()=>t,K$:()=>o,MS:()=>n,h5:()=>i,lK:()=>f,uj:()=>a});var n="-ms-",a="-moz-",t="-webkit-",s="comm",u="rule",i="decl",o="@import",f="@keyframes"},9685:(e,r,c)=>{c.d(r,{qR:()=>i,Ji:()=>f,cD:()=>o});var n=c(7563),a=c(6686),t=c(6411),s=c(211);function u(e,r){switch((0,a.vp)(e,r)){case 5103:return n.G$+"print-"+e+e;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return n.G$+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return n.G$+e+n.uj+e+n.MS+e+e;case 6828:case 4268:return n.G$+e+n.MS+e+e;case 6165:return n.G$+e+n.MS+"flex-"+e+e;case 5187:return n.G$+e+(0,a.gx)(e,/(\w+).+(:[^]+)/,n.G$+"box-$1$2"+n.MS+"flex-$1$2")+e;case 5443:return n.G$+e+n.MS+"flex-item-"+(0,a.gx)(e,/flex-|-self/,"")+e;case 4675:return n.G$+e+n.MS+"flex-line-pack"+(0,a.gx)(e,/align-content|flex-|-self/,"")+e;case 5548:return n.G$+e+n.MS+(0,a.gx)(e,"shrink","negative")+e;case 5292:return n.G$+e+n.MS+(0,a.gx)(e,"basis","preferred-size")+e;case 6060:return n.G$+"box-"+(0,a.gx)(e,"-grow","")+n.G$+e+n.MS+(0,a.gx)(e,"grow","positive")+e;case 4554:return n.G$+(0,a.gx)(e,/([^-])(transform)/g,"$1"+n.G$+"$2")+e;case 6187:return(0,a.gx)((0,a.gx)((0,a.gx)(e,/(zoom-|grab)/,n.G$+"$1"),/(image-set)/,n.G$+"$1"),e,"")+e;case 5495:case 3959:return(0,a.gx)(e,/(image-set\([^]*)/,n.G$+"$1$`$1");case 4968:return(0,a.gx)((0,a.gx)(e,/(.+:)(flex-)?(.*)/,n.G$+"box-pack:$3"+n.MS+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+n.G$+e+e;case 4095:case 3583:case 4068:case 2532:return(0,a.gx)(e,/(.+)-inline(.+)/,n.G$+"$1$2")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if((0,a.to)(e)-1-r>6)switch((0,a.uO)(e,r+1)){case 109:if(45!==(0,a.uO)(e,r+4))break;case 102:return(0,a.gx)(e,/(.+:)(.+)-([^]+)/,"$1"+n.G$+"$2-$3$1"+n.uj+(108==(0,a.uO)(e,r+3)?"$3":"$2-$3"))+e;case 115:return~(0,a.Cw)(e,"stretch")?u((0,a.gx)(e,"stretch","fill-available"),r)+e:e}break;case 4949:if(115!==(0,a.uO)(e,r+1))break;case 6444:switch((0,a.uO)(e,(0,a.to)(e)-3-(~(0,a.Cw)(e,"!important")&&10))){case 107:return(0,a.gx)(e,":",":"+n.G$)+e;case 101:return(0,a.gx)(e,/(.+:)([^;!]+)(;|!.+)?/,"$1"+n.G$+(45===(0,a.uO)(e,14)?"inline-":"")+"box$3$1"+n.G$+"$2$3$1"+n.MS+"$2box$3")+e}break;case 5936:switch((0,a.uO)(e,r+11)){case 114:return n.G$+e+n.MS+(0,a.gx)(e,/[svh]\w+-[tblr]{2}/,"tb")+e;case 108:return n.G$+e+n.MS+(0,a.gx)(e,/[svh]\w+-[tblr]{2}/,"tb-rl")+e;case 45:return n.G$+e+n.MS+(0,a.gx)(e,/[svh]\w+-[tblr]{2}/,"lr")+e}return n.G$+e+n.MS+e+e}return e}function i(e){var r=(0,a.Ei)(e);return function(c,n,a,t){for(var s="",u=0;u<r;u++)s+=e[u](c,n,a,t)||"";return s}}function o(e){return function(r){r.root||(r=r.return)&&e(r)}}function f(e,r,c,i){if(e.length>-1&&!e.return)switch(e.type){case n.h5:e.return=u(e.value,e.length);break;case n.lK:return(0,s.q)([(0,t.JG)(e,{value:(0,a.gx)(e.value,"@","@"+n.G$)})],i);case n.Fr:if(e.length)return(0,a.$e)(e.props,(function(r){switch((0,a.EQ)(r,/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":return(0,s.q)([(0,t.JG)(e,{props:[(0,a.gx)(r,/:(read-\w+)/,":"+n.uj+"$1")]})],i);case"::placeholder":return(0,s.q)([(0,t.JG)(e,{props:[(0,a.gx)(r,/:(plac\w+)/,":"+n.G$+"input-$1")]}),(0,t.JG)(e,{props:[(0,a.gx)(r,/:(plac\w+)/,":"+n.uj+"$1")]}),(0,t.JG)(e,{props:[(0,a.gx)(r,/:(plac\w+)/,n.MS+"input-$1")]})],i)}return""}))}}},2190:(e,r,c)=>{c.d(r,{MY:()=>s});var n=c(7563),a=c(6686),t=c(6411);function s(e){return(0,t.cE)(u("",null,null,null,[""],e=(0,t.un)(e),0,[0],e))}function u(e,r,c,n,s,l,$,p,b){for(var g=0,x=0,h=$,G=0,d=0,w=0,k=1,v=1,M=1,m=0,S="",j=s,O=l,y=n,C=S;v;)switch(w=m,m=(0,t.lp)()){case 40:if(108!=w&&58==C.charCodeAt(h-1)){-1!=(0,a.Cw)(C+=(0,a.gx)((0,t.iF)(m),"&","&\f"),"&\f")&&(M=-1);break}case 34:case 39:case 91:C+=(0,t.iF)(m);break;case 9:case 10:case 13:case 32:C+=(0,t.Qb)(w);break;case 92:C+=(0,t.kq)((0,t.Ud)()-1,7);continue;case 47:switch((0,t.fj)()){case 42:case 47:(0,a.R3)(o((0,t.q6)((0,t.lp)(),(0,t.Ud)()),r,c),b);break;default:C+="/"}break;case 123*k:p[g++]=(0,a.to)(C)*M;case 125*k:case 59:case 0:switch(m){case 0:case 125:v=0;case 59+x:d>0&&(0,a.to)(C)-h&&(0,a.R3)(d>32?f(C+";",n,c,h-1):f((0,a.gx)(C," ","")+";",n,c,h-2),b);break;case 59:C+=";";default:if((0,a.R3)(y=i(C,r,c,g,x,s,p,S,j=[],O=[],h),l),123===m)if(0===x)u(C,r,y,y,j,l,h,p,O);else switch(G){case 100:case 109:case 115:u(e,y,y,n&&(0,a.R3)(i(e,y,y,0,0,s,p,S,s,j=[],h),O),s,O,h,p,n?j:O);break;default:u(C,y,y,y,[""],O,0,p,O)}}g=x=d=0,k=M=1,S=C="",h=$;break;case 58:h=1+(0,a.to)(C),d=w;default:if(k<1)if(123==m)--k;else if(125==m&&0==k++&&125==(0,t.mp)())continue;switch(C+=(0,a.Dp)(m),m*k){case 38:M=x>0?1:(C+="\f",-1);break;case 44:p[g++]=((0,a.to)(C)-1)*M,M=1;break;case 64:45===(0,t.fj)()&&(C+=(0,t.iF)((0,t.lp)())),G=(0,t.fj)(),x=h=(0,a.to)(S=C+=(0,t.QU)((0,t.Ud)())),m++;break;case 45:45===w&&2==(0,a.to)(C)&&(k=0)}}return l}function i(e,r,c,s,u,i,o,f,l,$,p){for(var b=u-1,g=0===u?i:[""],x=(0,a.Ei)(g),h=0,G=0,d=0;h<s;++h)for(var w=0,k=(0,a.tb)(e,b+1,b=(0,a.Wn)(G=o[h])),v=e;w<x;++w)(v=(0,a.fy)(G>0?g[w]+" "+k:(0,a.gx)(k,/&\f/g,g[w])))&&(l[d++]=v);return(0,t.dH)(e,r,c,0===u?n.Fr:f,l,$,p)}function o(e,r,c){return(0,t.dH)(e,r,c,n.Ab,(0,a.Dp)((0,t.Tb)()),(0,a.tb)(e,2,-2),0)}function f(e,r,c,s){return(0,t.dH)(e,r,c,n.h5,(0,a.tb)(e,0,s),(0,a.tb)(e,s+1,-1),s)}},211:(e,r,c)=>{c.d(r,{P:()=>s,q:()=>t});var n=c(7563),a=c(6686);function t(e,r){for(var c="",n=(0,a.Ei)(e),t=0;t<n;t++)c+=r(e[t],t,e,r)||"";return c}function s(e,r,c,s){switch(e.type){case n.K$:case n.h5:return e.return=e.return||e.value;case n.Ab:return"";case n.lK:return e.return=e.value+"{"+t(e.children,s)+"}";case n.Fr:e.value=e.props.join(",")}return(0,a.to)(c=t(e.children,s))?e.return=e.value+"{"+c+"}":""}},6411:(e,r,c)=>{c.d(r,{FK:()=>u,JG:()=>l,QU:()=>j,Qb:()=>v,Tb:()=>$,Ud:()=>x,cE:()=>w,dH:()=>f,fj:()=>g,iF:()=>k,kq:()=>M,lp:()=>b,mp:()=>p,q6:()=>S,r:()=>G,tP:()=>h,un:()=>d});var n=c(6686),a=1,t=1,s=0,u=0,i=0,o="";function f(e,r,c,n,s,u,i){return{value:e,root:r,parent:c,type:n,props:s,children:u,line:a,column:t,length:i,return:""}}function l(e,r){return(0,n.f0)(f("",null,null,"",null,null,0),e,{length:-e.length},r)}function $(){return i}function p(){return i=u>0?(0,n.uO)(o,--u):0,t--,10===i&&(t=1,a--),i}function b(){return i=u<s?(0,n.uO)(o,u++):0,t++,10===i&&(t=1,a++),i}function g(){return(0,n.uO)(o,u)}function x(){return u}function h(e,r){return(0,n.tb)(o,e,r)}function G(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function d(e){return a=t=1,s=(0,n.to)(o=e),u=0,[]}function w(e){return o="",e}function k(e){return(0,n.fy)(h(u-1,m(91===e?e+2:40===e?e+1:e)))}function v(e){for(;(i=g())&&i<33;)b();return G(e)>2||G(i)>3?"":" "}function M(e,r){for(;--r&&b()&&!(i<48||i>102||i>57&&i<65||i>70&&i<97););return h(e,x()+(r<6&&32==g()&&32==b()))}function m(e){for(;b();)switch(i){case e:return u;case 34:case 39:34!==e&&39!==e&&m(i);break;case 40:41===e&&m(e);break;case 92:b()}return u}function S(e,r){for(;b()&&e+i!==57&&(e+i!==84||47!==g()););return"/*"+h(r,u-1)+"*"+(0,n.Dp)(47===e?e:b())}function j(e){for(;!G(g());)b();return h(e,u)}},6686:(e,r,c)=>{c.d(r,{$e:()=>x,Cw:()=>f,Dp:()=>a,EQ:()=>i,Ei:()=>b,R3:()=>g,Wn:()=>n,f0:()=>t,fy:()=>u,gx:()=>o,tb:()=>$,to:()=>p,uO:()=>l,vp:()=>s});var n=Math.abs,a=String.fromCharCode,t=Object.assign;function s(e,r){return(((r<<2^l(e,0))<<2^l(e,1))<<2^l(e,2))<<2^l(e,3)}function u(e){return e.trim()}function i(e,r){return(e=r.exec(e))?e[0]:e}function o(e,r,c){return e.replace(r,c)}function f(e,r){return e.indexOf(r)}function l(e,r){return 0|e.charCodeAt(r)}function $(e,r,c){return e.slice(r,c)}function p(e){return e.length}function b(e){return e.length}function g(e,r){return r.push(e),e}function x(e,r){return e.map(r).join("")}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,