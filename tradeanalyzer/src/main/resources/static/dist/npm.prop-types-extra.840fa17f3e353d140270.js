"use strict";(self.webpackChunktradeanalyzer=self.webpackChunktradeanalyzer||[]).push([[3537],{4391:(e,r,n)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.default=function(){for(var e=arguments.length,r=Array(e),n=0;n<e;n++)r[n]=arguments[n];function u(){for(var e=arguments.length,n=Array(e),u=0;u<e;u++)n[u]=arguments[u];var l=null;return r.forEach((function(e){if(null==l){var r=e.apply(void 0,n);null!=r&&(l=r)}})),l}return(0,a.default)(u)};var u,l=n(2613),a=(u=l)&&u.__esModule?u:{default:u};e.exports=r.default},2613:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.default=function(e){function r(r,n,u,l,a,t){var o=l||"<<anonymous>>",f=t||u;if(null==n[u])return r?new Error("Required "+a+" `"+f+"` was not specified in `"+o+"`."):null;for(var d=arguments.length,i=Array(d>6?d-6:0),c=6;c<d;c++)i[c-6]=arguments[c];return e.apply(void 0,[n,u,o,a,f].concat(i))}var n=r.bind(null,!1);return n.isRequired=r.bind(null,!0),n},e.exports=r.default}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnBtLnByb3AtdHlwZXMtZXh0cmEuZTdiMTllODQ4NGY5ZjZmMzA5ZjIuanMiLCJtYXBwaW5ncyI6IjhHQUVBQSxPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FDM0NDLE9BQU8sSUFFVEQsRUFBQSxRQVFBLFdBQ0UsSUFBSyxJQUFJRSxFQUFPQyxVQUFVQyxPQUFRQyxFQUFhQyxNQUFNSixHQUFPSyxFQUFPLEVBQUdBLEVBQU9MLEVBQU1LLElBQ2pGRixFQUFXRSxHQUFRSixVQUFVSSxHQUcvQixTQUFTQyxJQUNQLElBQUssSUFBSUMsRUFBUU4sVUFBVUMsT0FBUU0sRUFBT0osTUFBTUcsR0FBUUUsRUFBUSxFQUFHQSxFQUFRRixFQUFPRSxJQUNoRkQsRUFBS0MsR0FBU1IsVUFBVVEsR0FHMUIsSUFBSUMsRUFBUSxLQWFaLE9BWEFQLEVBQVdRLFNBQVEsU0FBVUMsR0FDM0IsR0FBYSxNQUFURixFQUFKLENBSUEsSUFBSUcsRUFBU0QsRUFBVUUsV0FBTUMsRUFBV1AsR0FDMUIsTUFBVkssSUFDRkgsRUFBUUcsRUFKVixDQU1GLElBRU9ILENBQ1QsQ0FFQSxPQUFPLEVBQUlNLEVBQTZCQyxTQUFTWCxFQUNuRCxFQWpDQSxJQUlnQ1ksRUFKNUJDLEVBQThCLEVBQVEsTUFFdENILEdBRTRCRSxFQUYwQkMsSUFFTEQsRUFBSUUsV0FBYUYsRUFBTSxDQUFFRCxRQUFTQyxHQThCdkZHLEVBQU92QixRQUFVQSxFQUFpQixPLGVDdkNsQ0YsT0FBT0MsZUFBZUMsRUFBUyxhQUFjLENBQzNDQyxPQUFPLElBRVRELEVBQUEsUUFZQSxTQUFvQ3dCLEdBQ2xDLFNBQVNDLEVBQVVDLEVBQVlDLEVBQU9DLEVBQVVDLEVBQWVDLEVBQVVDLEdBQ3ZFLElBQUlDLEVBQW9CSCxHQUFpQixnQkFDckNJLEVBQW1CRixHQUFnQkgsRUFFdkMsR0FBdUIsTUFBbkJELEVBQU1DLEdBQ1IsT0FBSUYsRUFDSyxJQUFJUSxNQUFNLFlBQWNKLEVBQVcsS0FBT0csRUFBaEMsMkJBQXNGRCxFQUFvQixNQUd0SCxLQUdULElBQUssSUFBSTlCLEVBQU9DLFVBQVVDLE9BQVFNLEVBQU9KLE1BQU1KLEVBQU8sRUFBSUEsRUFBTyxFQUFJLEdBQUlLLEVBQU8sRUFBR0EsRUFBT0wsRUFBTUssSUFDOUZHLEVBQUtILEVBQU8sR0FBS0osVUFBVUksR0FHN0IsT0FBT2lCLEVBQVNSLFdBQU1DLEVBQVcsQ0FBQ1UsRUFBT0MsRUFBVUksRUFBbUJGLEVBQVVHLEdBQWtCRSxPQUFPekIsR0FDM0csQ0FFQSxJQUFJMEIsRUFBbUJYLEVBQVVZLEtBQUssTUFBTSxHQUc1QyxPQUZBRCxFQUFpQlYsV0FBYUQsRUFBVVksS0FBSyxNQUFNLEdBRTVDRCxDQUNULEVBQ0FiLEVBQU92QixRQUFVQSxFQUFpQixPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGVhbmFseXplci8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzLWV4dHJhL2xpYi9hbGwuanMiLCJ3ZWJwYWNrOi8vdHJhZGVhbmFseXplci8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzLWV4dHJhL2xpYi91dGlscy9jcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBhbGw7XG5cbnZhciBfY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIgPSByZXF1aXJlKCcuL3V0aWxzL2NyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyJyk7XG5cbnZhciBfY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBhbGwoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCB2YWxpZGF0b3JzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgdmFsaWRhdG9yc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFsbFByb3BUeXBlcygpIHtcbiAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuMiksIF9rZXkyID0gMDsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgICAgYXJnc1tfa2V5Ml0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgIH1cblxuICAgIHZhciBlcnJvciA9IG51bGw7XG5cbiAgICB2YWxpZGF0b3JzLmZvckVhY2goZnVuY3Rpb24gKHZhbGlkYXRvcikge1xuICAgICAgaWYgKGVycm9yICE9IG51bGwpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgcmVzdWx0ID0gdmFsaWRhdG9yLmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XG4gICAgICBpZiAocmVzdWx0ICE9IG51bGwpIHtcbiAgICAgICAgZXJyb3IgPSByZXN1bHQ7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZXJyb3I7XG4gIH1cblxuICByZXR1cm4gKDAsIF9jcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcjIuZGVmYXVsdCkoYWxsUHJvcFR5cGVzKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyO1xuLyoqXG4gKiBDb3B5cmlnaHQgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cblxuLy8gTW9zdGx5IHRha2VuIGZyb20gUmVhY3RQcm9wVHlwZXMuXG5cbmZ1bmN0aW9uIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKSB7XG4gIGZ1bmN0aW9uIGNoZWNrVHlwZShpc1JlcXVpcmVkLCBwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgICB2YXIgY29tcG9uZW50TmFtZVNhZmUgPSBjb21wb25lbnROYW1lIHx8ICc8PGFub255bW91cz4+JztcbiAgICB2YXIgcHJvcEZ1bGxOYW1lU2FmZSA9IHByb3BGdWxsTmFtZSB8fCBwcm9wTmFtZTtcblxuICAgIGlmIChwcm9wc1twcm9wTmFtZV0gPT0gbnVsbCkge1xuICAgICAgaWYgKGlzUmVxdWlyZWQpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBFcnJvcignUmVxdWlyZWQgJyArIGxvY2F0aW9uICsgJyBgJyArIHByb3BGdWxsTmFtZVNhZmUgKyAnYCB3YXMgbm90IHNwZWNpZmllZCAnICsgKCdpbiBgJyArIGNvbXBvbmVudE5hbWVTYWZlICsgJ2AuJykpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4gPiA2ID8gX2xlbiAtIDYgOiAwKSwgX2tleSA9IDY7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleSAtIDZdID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiB2YWxpZGF0ZS5hcHBseSh1bmRlZmluZWQsIFtwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWVTYWZlLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lU2FmZV0uY29uY2F0KGFyZ3MpKTtcbiAgfVxuXG4gIHZhciBjaGFpbmVkQ2hlY2tUeXBlID0gY2hlY2tUeXBlLmJpbmQobnVsbCwgZmFsc2UpO1xuICBjaGFpbmVkQ2hlY2tUeXBlLmlzUmVxdWlyZWQgPSBjaGVja1R5cGUuYmluZChudWxsLCB0cnVlKTtcblxuICByZXR1cm4gY2hhaW5lZENoZWNrVHlwZTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9sZW4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ2YWxpZGF0b3JzIiwiQXJyYXkiLCJfa2V5IiwiYWxsUHJvcFR5cGVzIiwiX2xlbjIiLCJhcmdzIiwiX2tleTIiLCJlcnJvciIsImZvckVhY2giLCJ2YWxpZGF0b3IiLCJyZXN1bHQiLCJhcHBseSIsInVuZGVmaW5lZCIsIl9jcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcjIiLCJkZWZhdWx0Iiwib2JqIiwiX2NyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyIiwiX19lc01vZHVsZSIsIm1vZHVsZSIsInZhbGlkYXRlIiwiY2hlY2tUeXBlIiwiaXNSZXF1aXJlZCIsInByb3BzIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwibG9jYXRpb24iLCJwcm9wRnVsbE5hbWUiLCJjb21wb25lbnROYW1lU2FmZSIsInByb3BGdWxsTmFtZVNhZmUiLCJFcnJvciIsImNvbmNhdCIsImNoYWluZWRDaGVja1R5cGUiLCJiaW5kIl0sInNvdXJjZVJvb3QiOiIifQ==